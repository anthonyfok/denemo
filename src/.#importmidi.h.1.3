/* importmidi.h

AJAnderson

*/

#include <gtk/gtk.h>
#include <stdio.h>

typedef struct nstack 
{
	int pitch;
   	int measure;
     	int timeon;
     	int duration;  
}nstack;

typedef struct midicallback
{
	GList *notestack;
	GList *final_list;
	//nstack notestack;
	DenemoScore *si;
	int PPQN;
	int bartime;
	int barlength;
	int lastoff;
	int trackplus;
	int breaker;
	int key;
	int tempo;	
}midicallback;

/*
class stacknote
{
	public:
		int pitch;
		int time;

	stacknote(int p, int t) : pitch(p), time(t) {};
};
*/


typedef struct harmonic
{
	int pitch;
	int enshift;
}harmonic;

gint importMidi(gchar * filename, DenemoGUI *gui);

struct harmonic enharmonic(int input, int key);

int readBytes(FILE* fp, int numb);

int readheader(FILE* fp, midicallback *mididata);

void readtrack(FILE* fp, midicallback *mididata);

int readVariable(FILE* fp);

void dotimesig(FILE* fp, midicallback *mididata);

void dokeysig(FILE* fp, midicallback *mididata);

void dotempo(FILE* fp,  midicallback *mididata);

void dotrackname(FILE* fp, midicallback *mididata, int x);

void doinstrname(FILE* fp, midicallback *mididata, int x);

void donoteon(midicallback *mididata, int pitchon, int attack, int timeon);

void donoteoff(midicallback *mididata, int pitchoff, int timeoff);

gint comparenote (int a, int b);

void addnote(midicallback *mididata, int pitchadd, int endnote, int notie);
void addrests(midicallback *mididata,GList *tmp,int *timeoff,int *pitchoff);
