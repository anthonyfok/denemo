register_command(Denemo.commands, gtk_action_group_get_action(action_group, "CursorLeft"), "CursorLeft", "CursorLeft", "No Tooltip yet", cursorleft);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "CursorDown"), "CursorDown", "CursorDown", "No Tooltip yet", cursordown);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "CursorUp"), "CursorUp", "CursorUp", "No Tooltip yet", cursorup);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "CursorRight"), "CursorRight", "CursorRight", "No Tooltip yet", cursorright);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "StaffUp"), "StaffUp", "StaffUp", "Go to the staff above", staffup);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "StaffDown"), "StaffDown", "StaffDown", "Go to the staff below", staffdown);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "MeasureLeft"), "MeasureLeft", "MeasureLeft", "No Tooltip yet", measureleft);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "MeasureRight"), "MeasureRight", "MeasureRight", "No Tooltip yet", measureright);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "A"), "A", "A", "Move the cursor to A", go_to_A_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "B"), "B", "B", "No Tooltip yet", go_to_B_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "C"), "C", "C", "No Tooltip yet", go_to_C_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "D"), "D", "D", "No Tooltip yet", go_to_D_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "E"), "E", "E", "No Tooltip yet", go_to_E_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "F"), "F", "F", "No Tooltip yet", go_to_F_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "G"), "G", "G", "No Tooltip yet", go_to_G_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "OctaveUp"), "OctaveUp", "OctaveUp", "Octave Up", octave_up_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "OctaveDown"), "OctaveDown", "OctaveDown", "Octave Down", octave_down_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "WholeNote"), "WholeNote", ""MUSIC_FONT("0")"", "Insert whole-note", insert_chord_0key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "HalfNote"), "HalfNote", ""MUSIC_FONT("1")"", "Insert half-note", insert_chord_1key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "QuarterNote"), "QuarterNote", ""MUSIC_FONT("2")"", "Insert quarter-note", insert_chord_2key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "EighthNote"), "EighthNote", ""MUSIC_FONT("3")"", "Insert eighth-note", insert_chord_3key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SixteenthNote"), "SixteenthNote", ""MUSIC_FONT("4")"", "Insert sixteenth-note", insert_chord_4key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ThirtysecondNote"), "ThirtysecondNote", ""MUSIC_FONT("5")"", "Insert thirty-second-note", insert_chord_5key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SixtyfourthNote"), "SixtyfourthNote", ""MUSIC_FONT("6")"", "Insert sixty-fourth-note", insert_chord_6key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBlankWholeNote"), "InsertBlankWholeNote", "InsertBlankWholeNote", "No Tooltip yet", insert_blankchord_0key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBlankHalfNote"), "InsertBlankHalfNote", "InsertBlankHalfNote", "No Tooltip yet", insert_blankchord_1key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBlankQuarterNote"), "InsertBlankQuarterNote", "InsertBlankQuarterNote", "No Tooltip yet", insert_blankchord_2key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBlankEighthNote"), "InsertBlankEighthNote", "InsertBlankEighthNote", "No Tooltip yet", insert_blankchord_3key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBlankSixteenthNote"), "InsertBlankSixteenthNote", "InsertBlankSixteenthNote", "No Tooltip yet", insert_blankchord_4key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBlankThirtysecondNote"), "InsertBlankThirtysecondNote", "InsertBlankThirtysecondNote", "No Tooltip yet", insert_blankchord_5key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBlankSixtyfourthNote"), "InsertBlankSixtyfourthNote", "InsertBlankSixtyfourthNote", "No Tooltip yet", insert_blankchord_6key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleRestMode"), "ToggleRestMode", "ToggleRestMode", "No Tooltip yet", rest_toggle_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleBlankMode"), "ToggleBlankMode", "ToggleBlankMode", "No Tooltip yet", toggle_blank);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertWholeRest"), "InsertWholeRest", ""MUSIC_FONT("r")"", "Insert whole-note rest", insert_rest_0key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertHalfRest"), "InsertHalfRest", ""MUSIC_FONT("s")"", "Insert half-note rest", insert_rest_1key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertQuarterRest"), "InsertQuarterRest", ""MUSIC_FONT("t")"", "Insert quarter-note rest", insert_rest_2key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertEighthRest"), "InsertEighthRest", ""MUSIC_FONT("u")"", "Insert eighth-note rest", insert_rest_3key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertSixteenthRest"), "InsertSixteenthRest", ""MUSIC_FONT("v")"", "Insert sixteenth-note rest", insert_rest_4key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertThirtysecondRest"), "InsertThirtysecondRest", ""MUSIC_FONT("w")"", "Insert thirty-second note rest", insert_rest_5key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertSixtyfourthRest"), "InsertSixtyfourthRest", ""MUSIC_FONT("x")"", "Insert sixty-fourth note rest", insert_rest_6key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertDuplet"), "InsertDuplet", "InsertDuplet", "No Tooltip yet", insert_duplet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertTriplet"), "InsertTriplet", "InsertTriplet", "No Tooltip yet", insert_triplet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "StartTriplet"), "StartTriplet", "StartTriplet", "No Tooltip yet", start_triplet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "EndTuplet"), "EndTuplet", "EndTuplet", "No Tooltip yet", end_tuplet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertQuadtuplet"), "InsertQuadtuplet", "InsertQuadtuplet", "No Tooltip yet", insert_quadtuplet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertQuintuplet"), "InsertQuintuplet", "InsertQuintuplet", "No Tooltip yet", insert_quintuplet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertSextuplet"), "InsertSextuplet", "InsertSextuplet", "No Tooltip yet", insert_sextuplet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertSeptuplet"), "InsertSeptuplet", "InsertSeptuplet", "No Tooltip yet", insert_septuplet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddNoteToChord"), "AddNoteToChord", "Add note", "Add a note to the current chord\nThe cursor position determines which note to add", add_tone_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "RemoveNoteFromChord"), "RemoveNoteFromChord", "Remove note", "Remove a note from the current chord", remove_tone_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SharpenOrStemDown"), "SharpenOrStemDown", "SharpenOrStemDown", "No Tooltip yet", sharpen_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "FlattenOrStemUp"), "FlattenOrStemUp", "FlattenOrStemUp", "No Tooltip yet", flatten_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddDot"), "AddDot", "AddDot", "No Tooltip yet", add_dot_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "RemoveDot"), "RemoveDot", "RemoveDot", "No Tooltip yet", remove_dot_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertTiedNote"), "InsertTiedNote", "Tied note", "Inserts a duplicate of the current note, tied", tie_notes_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteObject"), "DeleteObject", "DeleteObject", "No Tooltip yet", deleteobject);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeletePreviousObject"), "DeletePreviousObject", "DeletePreviousObject", "No Tooltip yet", deletepreviousobject);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertMeasure"), "InsertMeasure", "InsertMeasure", "No Tooltip yet", insert_measure_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AppendMeasure"), "AppendMeasure", "AppendMeasure", "No Tooltip yet", append_measure_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteMeasure"), "DeleteMeasure", "DeleteMeasure", "Delete the current measure in this staff, leaving the staff short", deletemeasure);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteMeasureAllStaffs"), "DeleteMeasureAllStaffs", "DeleteMeasureAllStaffs", "Delete the current measure in all staffs", deletemeasureallstaffs);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ShrinkMeasures"), "ShrinkMeasures", "ShrinkMeasures", "No Tooltip yet", adjust_measure_less_width_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "WidenMeasures"), "WidenMeasures", "WidenMeasures", "No Tooltip yet", adjust_measure_more_width_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ShorterStaffs"), "ShorterStaffs", "ShorterStaffs", "No Tooltip yet", adjust_staff_less_height_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "TallerStaffs"), "TallerStaffs", "TallerStaffs", "No Tooltip yet", adjust_staff_more_height_key);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertTrebleClef"), "InsertTrebleClef", "InsertTrebleClef", "No Tooltip yet", newcleftreble);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBassClef"), "InsertBassClef", "InsertBassClef", "No Tooltip yet", newclefbass);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insertg8clef"), "Insertg8clef", "Insertg8clef", "No Tooltip yet", newclefg8);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertAltoClef"), "InsertAltoClef", "InsertAltoClef", "No Tooltip yet", newclefalto);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertTenorClef"), "InsertTenorClef", "InsertTenorClef", "No Tooltip yet", newcleftenor);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertSopranoClef"), "InsertSopranoClef", "InsertSopranoClef", "No Tooltip yet", newclefsoprano);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialTrebleClef"), "SetInitialTrebleClef", "SetInitialTrebleClef", "No Tooltip yet", setcleftreble);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialBassClef"), "SetInitialBassClef", "SetInitialBassClef", "No Tooltip yet", setclefbass);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialg8clef"), "SetInitialg8clef", "SetInitialg8clef", "No Tooltip yet", setclefg8);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialAltoClef"), "SetInitialAltoClef", "SetInitialAltoClef", "No Tooltip yet", setclefalto);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialTenorClef"), "SetInitialTenorClef", "SetInitialTenorClef", "No Tooltip yet", setcleftenor);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialSopranoClef"), "SetInitialSopranoClef", "SetInitialSopranoClef", "No Tooltip yet", setclefsoprano);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert22Time"), "Insert22Time", "Insert22Time", "No Tooltip yet", newtimesig22);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert32Time"), "Insert32Time", "Insert32Time", "No Tooltip yet", newtimesig32);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert42Time"), "Insert42Time", "Insert42Time", "No Tooltip yet", newtimesig42);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert44Time"), "Insert44Time", "Insert44Time", "No Tooltip yet", newtimesig44);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert34Time"), "Insert34Time", "Insert34Time", "No Tooltip yet", newtimesig34);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert24Time"), "Insert24Time", "Insert24Time", "No Tooltip yet", newtimesig24);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert64Time"), "Insert64Time", "Insert64Time", "No Tooltip yet", newtimesig64);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert38Time"), "Insert38Time", "Insert38Time", "No Tooltip yet", newtimesig38);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert68Time"), "Insert68Time", "Insert68Time", "No Tooltip yet", newtimesig68);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert128Time"), "Insert128Time", "Insert128Time", "No Tooltip yet", newtimesig128);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert98Time"), "Insert98Time", "Insert98Time", "No Tooltip yet", newtimesig98);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set22Time"), "Set22Time", "Set22Time", "No Tooltip yet", settimesig22);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set32Time"), "Set32Time", "Set32Time", "No Tooltip yet", settimesig32);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set42Time"), "Set42Time", "Set42Time", "No Tooltip yet", settimesig42);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set44Time"), "Set44Time", "Set44Time", "No Tooltip yet", settimesig44);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set34Time"), "Set34Time", "Set34Time", "No Tooltip yet", settimesig34);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set24Time"), "Set24Time", "Set24Time", "No Tooltip yet", settimesig24);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set64Time"), "Set64Time", "Set64Time", "No Tooltip yet", settimesig64);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set38Time"), "Set38Time", "Set38Time", "No Tooltip yet", settimesig38);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set68Time"), "Set68Time", "Set68Time", "No Tooltip yet", settimesig68);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set128Time"), "Set128Time", "Set128Time", "No Tooltip yet", settimesig128);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Set98Time"), "Set98Time", "Set98Time", "No Tooltip yet", settimesig98);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertCmaj"), "InsertCmaj", "InsertCmaj", "No Tooltip yet", newkeysigcmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertGmaj"), "InsertGmaj", "InsertGmaj", "No Tooltip yet", newkeysiggmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertDmaj"), "InsertDmaj", "InsertDmaj", "No Tooltip yet", newkeysigdmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertAmaj"), "InsertAmaj", "InsertAmaj", "No Tooltip yet", newkeysigamaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertEmaj"), "InsertEmaj", "InsertEmaj", "No Tooltip yet", newkeysigemaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBmaj"), "InsertBmaj", "InsertBmaj", "No Tooltip yet", newkeysigbmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertFSharpmaj"), "InsertFSharpmaj", "InsertFSharpmaj", "No Tooltip yet", newkeysigfsharpmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertCSharpmaj"), "InsertCSharpmaj", "InsertCSharpmaj", "No Tooltip yet", newkeysigcsharpmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertFmaj"), "InsertFmaj", "InsertFmaj", "No Tooltip yet", newkeysigfmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBflatmaj"), "InsertBflatmaj", "InsertBflatmaj", "No Tooltip yet", newkeysigbflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertEflatmaj"), "InsertEflatmaj", "InsertEflatmaj", "No Tooltip yet", newkeysigeflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertAflatmaj"), "InsertAflatmaj", "InsertAflatmaj", "No Tooltip yet", newkeysigaflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertDflatmaj"), "InsertDflatmaj", "InsertDflatmaj", "No Tooltip yet", newkeysigdflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertGflatmaj"), "InsertGflatmaj", "InsertGflatmaj", "No Tooltip yet", newkeysiggflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertCflatmaj"), "InsertCflatmaj", "InsertCflatmaj", "No Tooltip yet", newkeysigcflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertAmin"), "InsertAmin", "InsertAmin", "No Tooltip yet", newkeysigamin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertEmin"), "InsertEmin", "InsertEmin", "No Tooltip yet", newkeysigemin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBmin"), "InsertBmin", "InsertBmin", "No Tooltip yet", newkeysigbmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertFSharpmin"), "InsertFSharpmin", "InsertFSharpmin", "No Tooltip yet", newkeysigfsharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertCSharpmin"), "InsertCSharpmin", "InsertCSharpmin", "No Tooltip yet", newkeysigcsharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertGSharpmin"), "InsertGSharpmin", "InsertGSharpmin", "No Tooltip yet", newkeysiggsharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertDSharpmin"), "InsertDSharpmin", "InsertDSharpmin", "No Tooltip yet", newkeysigdsharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertASharpmin"), "InsertASharpmin", "InsertASharpmin", "No Tooltip yet", newkeysigasharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertDmin"), "InsertDmin", "InsertDmin", "No Tooltip yet", newkeysigdmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertGmin"), "InsertGmin", "InsertGmin", "No Tooltip yet", newkeysiggmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertCmin"), "InsertCmin", "InsertCmin", "No Tooltip yet", newkeysigcmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertFmin"), "InsertFmin", "InsertFmin", "No Tooltip yet", newkeysigfmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBflatmin"), "InsertBflatmin", "InsertBflatmin", "No Tooltip yet", newkeysigbflatmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertEflatmin"), "InsertEflatmin", "InsertEflatmin", "No Tooltip yet", newkeysigeflatmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertAflatmin"), "InsertAflatmin", "InsertAflatmin", "No Tooltip yet", newkeysigaflatmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialCmaj"), "SetInitialCmaj", "SetInitialCmaj", "No Tooltip yet", setkeysigcmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialGmaj"), "SetInitialGmaj", "SetInitialGmaj", "No Tooltip yet", setkeysiggmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialDmaj"), "SetInitialDmaj", "SetInitialDmaj", "No Tooltip yet", setkeysigdmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialAmaj"), "SetInitialAmaj", "SetInitialAmaj", "No Tooltip yet", setkeysigamaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialEmaj"), "SetInitialEmaj", "SetInitialEmaj", "No Tooltip yet", setkeysigemaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialBmaj"), "SetInitialBmaj", "SetInitialBmaj", "No Tooltip yet", setkeysigbmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialFSharpmaj"), "SetInitialFSharpmaj", "SetInitialFSharpmaj", "No Tooltip yet", setkeysigfsharpmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialCSharpmaj"), "SetInitialCSharpmaj", "SetInitialCSharpmaj", "No Tooltip yet", setkeysigcsharpmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialFmaj"), "SetInitialFmaj", "SetInitialFmaj", "No Tooltip yet", setkeysigfmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialBflatmaj"), "SetInitialBflatmaj", "SetInitialBflatmaj", "No Tooltip yet", setkeysigbflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialEflatmaj"), "SetInitialEflatmaj", "SetInitialEflatmaj", "No Tooltip yet", setkeysigeflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialAflatmaj"), "SetInitialAflatmaj", "SetInitialAflatmaj", "No Tooltip yet", setkeysigaflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialDflatmaj"), "SetInitialDflatmaj", "SetInitialDflatmaj", "No Tooltip yet", setkeysigdflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialGflatmaj"), "SetInitialGflatmaj", "SetInitialGflatmaj", "No Tooltip yet", setkeysiggflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialCflatmaj"), "SetInitialCflatmaj", "SetInitialCflatmaj", "No Tooltip yet", setkeysigcflatmaj);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialAmin"), "SetInitialAmin", "SetInitialAmin", "No Tooltip yet", setkeysigamin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialEmin"), "SetInitialEmin", "SetInitialEmin", "No Tooltip yet", setkeysigemin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialBmin"), "SetInitialBmin", "SetInitialBmin", "No Tooltip yet", setkeysigbmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialFSharpmin"), "SetInitialFSharpmin", "SetInitialFSharpmin", "No Tooltip yet", setkeysigfsharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialCSharpmin"), "SetInitialCSharpmin", "SetInitialCSharpmin", "No Tooltip yet", setkeysigcsharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialGSharpmin"), "SetInitialGSharpmin", "SetInitialGSharpmin", "No Tooltip yet", setkeysiggsharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialDSharpmin"), "SetInitialDSharpmin", "SetInitialDSharpmin", "No Tooltip yet", setkeysigdsharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialASharpmin"), "SetInitialASharpmin", "SetInitialASharpmin", "No Tooltip yet", setkeysigasharpmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialDmin"), "SetInitialDmin", "SetInitialDmin", "No Tooltip yet", setkeysigdmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialGmin"), "SetInitialGmin", "SetInitialGmin", "No Tooltip yet", setkeysiggmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialCmin"), "SetInitialCmin", "SetInitialCmin", "No Tooltip yet", setkeysigcmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialFmin"), "SetInitialFmin", "SetInitialFmin", "No Tooltip yet", setkeysigfmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialBflatmin"), "SetInitialBflatmin", "SetInitialBflatmin", "No Tooltip yet", setkeysigbflatmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialEflatmin"), "SetInitialEflatmin", "SetInitialEflatmin", "No Tooltip yet", setkeysigeflatmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetInitialAflatmin"), "SetInitialAflatmin", "SetInitialAflatmin", "No Tooltip yet", setkeysigaflatmin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetMark"), "SetMark", "SetMark", "No Tooltip yet", set_mark);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "UnsetMark"), "UnsetMark", "UnsetMark", "No Tooltip yet", unset_mark);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleBeginSlur"), "ToggleBeginSlur", "ToggleBeginSlur", "Insert/delete begin slur on this note", toggle_begin_slur);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleEndSlur"), "ToggleEndSlur", "ToggleEndSlur", "Insert/delete end slur on this note", toggle_end_slur);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleStartCrescendo"), "ToggleStartCrescendo", "ToggleStartCrescendo", "No Tooltip yet", toggle_start_crescendo);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleEndCrescendo"), "ToggleEndCrescendo", "ToggleEndCrescendo", "No Tooltip yet", toggle_end_crescendo);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleStartDiminuendo"), "ToggleStartDiminuendo", "ToggleStartDiminuendo", "No Tooltip yet", toggle_start_diminuendo);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleEndDiminuendo"), "ToggleEndDiminuendo", "ToggleEndDiminuendo", "No Tooltip yet", toggle_end_diminuendo);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleAccent"), "ToggleAccent", "ToggleAccent", "No Tooltip yet", add_accent);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleFermata"), "ToggleFermata", "ToggleFermata", "No Tooltip yet", add_fermata);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleStaccato"), "ToggleStaccato", "ToggleStaccato", "No Tooltip yet", add_staccato);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleTenuto"), "ToggleTenuto", "ToggleTenuto", "No Tooltip yet", add_tenuto);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleTrill"), "ToggleTrill", "ToggleTrill", "No Tooltip yet", add_trill);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleTurn"), "ToggleTurn", "ToggleTurn", "No Tooltip yet", add_turn);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleMordent"), "ToggleMordent", "ToggleMordent", "No Tooltip yet", add_mordent);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleStaccatissimo"), "ToggleStaccatissimo", "ToggleStaccatissimo", "No Tooltip yet", add_staccatissimo);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleCoda"), "ToggleCoda", "ToggleCoda", "No Tooltip yet", add_coda);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleFlageolet"), "ToggleFlageolet", "ToggleFlageolet", "No Tooltip yet", add_flageolet);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleOpen"), "ToggleOpen", "ToggleOpen", "No Tooltip yet", add_open);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "TogglePrallMordent"), "TogglePrallMordent", "TogglePrallMordent", "No Tooltip yet", add_prallmordent);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "TogglePrallPrall"), "TogglePrallPrall", "TogglePrallPrall", "No Tooltip yet", add_prallprall);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "TogglePrall"), "TogglePrall", "TogglePrall", "No Tooltip yet", add_prall);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleReverseTurn"), "ToggleReverseTurn", "ToggleReverseTurn", "No Tooltip yet", add_reverseturn);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleSegno"), "ToggleSegno", "ToggleSegno", "No Tooltip yet", add_segno);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleSforzato"), "ToggleSforzato", "ToggleSforzato", "No Tooltip yet", add_sforzato);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleStopped"), "ToggleStopped", "ToggleStopped", "No Tooltip yet", add_stopped);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleThumb"), "ToggleThumb", "ToggleThumb", "No Tooltip yet", add_thumb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleUpprall"), "ToggleUpprall", "ToggleUpprall", "No Tooltip yet", add_upprall);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleArpeggio"), "ToggleArpeggio", "ToggleArpeggio", "No Tooltip yet", add_arpeggio);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SetGrace"), "SetGrace", "SetGrace", "No Tooltip yet", set_grace);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ForceCaution"), "ForceCaution", "ForceCaution", "No Tooltip yet", force_cautionary);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangePitch"), "ChangePitch", "ChangePitch", "No Tooltip yet", change_pitch);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DoubleBar"), "DoubleBar", "DoubleBar", "No Tooltip yet", insert_doublebar);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "EndBar"), "EndBar", "EndBar", "No Tooltip yet", insert_endbar);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "OpenRepeat"), "OpenRepeat", "OpenRepeat", "No Tooltip yet", insert_openrepeat);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "CloseRepeat"), "CloseRepeat", "CloseRepeat", "No Tooltip yet", insert_closerepeat);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "OpenCloseRepeat"), "OpenCloseRepeat", "OpenCloseRepeat", "No Tooltip yet", insert_opencloserepeat);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertRhythm"), "InsertRhythm", "InsertRhythm", "No Tooltip yet", insert_rhythm_pattern);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "NextRhythm"), "NextRhythm", "NextRhythm", "Make next rhythm pattern\nthe prevailing rhythm.\nNotes entered will follow this pattern", nextrhythm);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AppendMesauresToScore"), "AppendMesauresToScore", "AppendMesauresToScore", "No Tooltip yet", append_measure_score);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "New"), "New", "New", "Start a new musical score", file_newwrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Open"), "Open", "Open", "Open a file containing a music score for editing", file_open_with_check);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddStaffs"), "AddStaffs", "AddStaffs", "Add staffs from a Denemo file", file_add_staffs);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddMovements"), "AddMovements", "AddMovements", "Add movements from a Denemo file", file_add_movements);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "MovementProps"), "MovementProps", "MovementProps", "Change properties of this movement", movement_props_dialog);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "OpenNewWindow"), "OpenNewWindow", "OpenNewWindow", "Open a file containing a music score for editing in a separate working area (tab", openinnew);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Save"), "Save", "Save", "Save the score", file_savewrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SaveAs"), "SaveAs", "SaveAs", "Save the score under a new name", file_saveaswrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "OpenTemplate"), "OpenTemplate", "OpenTemplate", "Start a new score from a built-in template file", system_template_open_with_check);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "OpenExample"), "OpenExample", "OpenExample", "Start a new score from a built-in example", system_example_open_with_check);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "OpenMyTemplate"), "OpenMyTemplate", "OpenMyTemplate", "Start a new score from one of your own template files", local_template_open_with_check);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SaveTemplate"), "SaveTemplate", "SaveTemplate", "Save the score as a template for re-use as a starting point for new scores", template_save);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "NewWindow"), "NewWindow", "New Tab", "Create working area (tab with an empty score in it)", newview);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertMovementBefore"), "InsertMovementBefore", "InsertMovementBefore", "Insert a new movement before the current one", insert_movement_before);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertMovementAfter"), "InsertMovementAfter", "InsertMovementAfter", "Insert a new movement after the current one", insert_movement_after);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SaveParts"), "SaveParts", "SaveParts", "Save Parts: each staff becomes a file in lilypond format", file_savepartswrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ExportPDF"), "ExportPDF", "ExportPDF", "Export the score as a PDF document file", export_pdf_action);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ConfigureScore"), "ConfigureScore", "ConfigureScore", "Start up a wizard to create a new score. This allows you to set various properties of the score", scorewizard);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "PrintPreview"), "PrintPreview", "PrintPreview", "Displays the final finished score in your pdf viewer", printpreview_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "PrintExcerptPreview"), "PrintExcerptPreview", "PrintExcerptPreview", "Displays a musical excerpt in your image viewer", printexcerptpreview_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Print"), "Print", "Print", "Displays the final finished score in a pdf viewer. From this you can print the file using the print command of the viewer", printall_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "PrintPart"), "PrintPart", "PrintPart", "Displays the final finished score for the current part (that is current staff", printpart_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Close"), "Close", "Close", "Close the current score. Other windows will stay open", close_gui_with_check);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Quit"), "Quit", "Quit", "Quit the Denemo program", closewrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Undo"), "Undo", "Undo", "Undo", undowrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Redo"), "Redo", "Redo", "Redo", redowrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Copy"), "Copy", "Copy", "Copy", copywrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Cut"), "Cut", "Cut", "Cut", cutwrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Paste"), "Paste", "Paste", "Paste the selected music", pastewrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ScoreProperties"), "ScoreProperties", "ScoreProperties", "Change some of the properties of the current score. This will start up a dialog window", score_properties_dialog);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SaveSelection"), "SaveSelection", "SaveSelection", "Save the selected music. Not sure if this is working", saveselwrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Preferences"), "Preferences", "Preferences", "Set and save your preferences for how Denemo operates on startup. Edit .denemo/denemorc for missing ones", preferences_change);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SaveAccels"), "SaveAccels", "Save Command Set", "Save the current commands and keyboard shortcuts as the default", save_default_keymap_file_wrapper);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "CommandManagement"), "CommandManagement", "Manage Command Set", "View help, change and save keyboard shortcuts", configure_keyboard_dialog);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "LoadPlugins"), "LoadPlugins", "LoadPlugins", "Load Plugins", load_plugin);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "UnloadPlugins"), "UnloadPlugins", "UnloadPlugins", "Unload Plugins", unloadplugins);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ListPlugins"), "ListPlugins", "ListPlugins", "List the loaded plugins", list_loaded_plugins);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ListAvailablePlugins"), "ListAvailablePlugins", "ListAvailablePlugins", "List the available plugins", list_available_plugins);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SwapStaffs"), "SwapStaffs", "SwapStaffs", "Swap this staff with the one higher up. Note this actually swaps voices.", swapstaffs);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SplitVoices"), "SplitVoices", "SplitVoices", "Split off the next voice as a separate staff", splitstaffs);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "JoinVoices"), "JoinVoices", "JoinVoices", "Merge this staff as a voice on the previous staff", joinstaffs);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "SwapMovements"), "SwapMovements", "SwapMovements", "Swap this movement with the one before", swapmovements);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "VoiceUp"), "VoiceUp", "VoiceUp", "Go to the higher numbered voice (or staff if highest voice number on staff", voiceup_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "VoiceDown"), "VoiceDown", "VoiceDown", "Go to the lower numbered voice on this staff", voicedown_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddBefore"), "AddBefore", "AddBefore", "Inserts a new staff before the current staff", newstaffbefore);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddAfter"), "AddAfter", "AddAfter", "Inserts/Adds a new staff after the current staff", dnm_newstaffafter);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddInitial"), "AddInitial", "AddInitial", "Inserts a new staff at the top of the score", newstaffinitial);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddLast"), "AddLast", "AddLast", "Inserts a new staff at the end of the score", newstafflast);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteBefore"), "DeleteBefore", "DeleteBefore", "Deletes the staff before the current staff", delete_staff_before);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteStaff"), "DeleteStaff", "DeleteStaff", "Deletes the current staff", delete_staff_current);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteAfter"), "DeleteAfter", "DeleteAfter", "Deletes the staff after the current staff", delete_staff_after);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddVoice"), "AddVoice", "AddVoice", "Adds a new voice (part), to the current staff. It is tricky to switch between the voices. Suggest to use merge staffs", dnm_newstaffvoice);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "TransposeStaff"), "TransposeStaff", "TransposeStaff", "Transpose the current staff", staff_transposition);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "StaffProperties"), "StaffProperties", "StaffProperties", "Change the properties of the current staff", staff_properties_change_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InitialClef"), "InitialClef", "InitialClef", "Change the initial clef of the current staff", clef_change_initial);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertClef"), "InsertClef", "InsertClef", "Insert a change of clef at the cursor", clef_change_insert);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InitialKey"), "InitialKey", "InitialKey", "Set the initial key signature of the current staff", key_change_initial);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertKey"), "InsertKey", "InsertKey", "Insert a key change at the cursor position", key_change_insert);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InitialTimeSig"), "InitialTimeSig", "InitialTimeSig", "Set the initial time signature of the current staff", timesig_change_initial);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertTimeSig"), "InsertTimeSig", "InsertTimeSig", "Edit/Insert a time signature change for the current measure", timesig_change_insert);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeNotehead"), "ChangeNotehead", "ChangeNotehead", "Change the type of notehead for the current note", set_notehead);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertStem"), "InsertStem", "InsertStem", "Inserts a stem neutral tag. Click on this tag and use Sharpen/StemDown etc commands to change stem direction", stem_directive_insert);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "EditLyric"), "EditLyric", "Insert/Edit Lyric", "Add a lyric to current note. Beware: all previous notes must have lyrics for printing correctly", lyric_insert);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "EditFiguredBass"), "EditFiguredBass", "Insert/Edit Figured Bass", "Add a bass figure to the current note. Use | sign to split the duration of a note so as to have multiple figures on one note. See Lilypond docs for other notation", figure_insert);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "EditChords"), "EditChords", "EditChords", "Allows chord symbols to be added to the current note. E.G.cis:dim7 for c-sharp diminished 7th. See Lilypond docs for notation", fakechord_insert);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertDynamic"), "InsertDynamic", "InsertDynamic", "Inserts a dynamic marking at the cursor position", insert_dynamic);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertLilyDirective"), "InsertLilyDirective", "InsertLilyDirective", "Insert or edit a directive in the LilyPond music typesetting language. This can be used for extra spacing, transposing or almost anything. See LilyPond documentation for ideas.", lily_directive_insert);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertLilyPostfix"), "InsertLilyPostfix", "InsertLilyPostfix", "Insert or edit a LilyPond text to be post-fixed to the current note. This can be used for guitar fingerings, cautionary accidentals and much more. See LilyPond documentation.", lily_directive_postfix);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertBarline"), "InsertBarline", "InsertBarline", "Inserts specialized barline at the cursor position. Mostly not working", insert_barline);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "GoToMeasure"), "GoToMeasure", "Go to Measure", "Opens a dialog for going to a numbered measure", tomeasurenum);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "GoToBeginning"), "GoToBeginning", "Go To Beginning", "Go To Beginning", tohome);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "GoToEnd"), "GoToEnd", "Go To End", "Go To End", toend);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "NextMovement"), "NextMovement", "NextMovement", "Go to the next movement", next_movement);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "PreviousMovement"), "PreviousMovement", "PreviousMovement", "Go to the previous movement", prev_movement);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteMovement"), "DeleteMovement", "DeleteMovement", "Delete the current movement", delete_movement);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteBookmarks"), "DeleteBookmarks", "DeleteBookmarks", "Delete all bookmarks in current movement", deletebookmarks);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Play"), "Play", "Play", "Play", ext_midi_playback);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Stop"), "Stop", "Stop", "Stop", stop_midi_playback);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "PlayCSound"), "PlayCSound", "PlayCSound", "Play using CSound...", csoundplayback);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "PlaybackProperties"), "PlaybackProperties", "Playback Properties", "Allows you to specify properties used in playing back (midi and csound", playback_properties_change);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Help"), "Help", "Help", "Opens a browser on the user manual", browse_manual);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "About"), "About", "About", "Gives the version number etc of this program", about);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "MoreCommands"), "MoreCommands", "More Commands", "Allows choosing standard extra commands/menu items", morecommands);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "MyCommands"), "MyCommands", "My Commands", "Allows choosing extra commands/menu items from your own collection of extras", mycommands);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "AddBookmark"), "AddBookmark", "Add Bookmark", "Bookmark the current cursor position", addbookmark);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "GotoBookmark"), "GotoBookmark", "GotoBookmark", "Go to a bookmarked point in the score", gotobookmark);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "NextBookmark"), "NextBookmark", "NextBookmark", "Go to the next bookmarked point in the list", nextbookmark);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "PrevBookmark"), "PrevBookmark", "PrevBookmark", "Go to the previous bookmarked point in the list", prevbookmark);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleEdit"), "ToggleEdit", "ToggleEdit", "Toggle between current mode and edit mode", toggle_edit_mode);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleRest"), "ToggleRest", "ToggleRest", "Toggle between note entry and rest entry", toggle_rest_mode);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ToggleRhythm"), "ToggleRhythm", "ToggleRhythm", "Toggle between note entry and rhythm entry", toggle_rhythm_mode);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ClearOverlay"), "ClearOverlay", "ClearOverlay", "Clear the list of pitches that overlay the notes", clear_overlay);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "CreateRhythm"), "CreateRhythm", "CreateRhythm", "Copy selection as a rhythm pattern for notes to follow as they are entered", create_rhythm_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "DeleteRhythm"), "DeleteRhythm", "DeleteRhythm", "Delete the selected rhythm pattern", delete_rhythm_cb);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertA"), "InsertA", "Insert A","Inserts note A before note at cursor\nCursor determines which octave\nNote is inserted in the prevailing rhythm",  InsertA);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertB"), "InsertB", "Insert B","Inserts note B before note at cursor\nCursor determines which octave\nNote is inserted in the prevailing rhythm",  InsertB);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertC"), "InsertC", "Insert C","Inserts note C before note at cursor\nCursor determines which octave\nNote is inserted in the prevailing rhythm",  InsertC);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertD"), "InsertD", "Insert D","Inserts note D before note at cursor\nCursor determines which octave\nNote is inserted in the prevailing rhythm",  InsertD);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertE"), "InsertE", "Insert E","Inserts note E before note at cursor\nCursor determines which octave\nNote is inserted in the prevailing rhythm",  InsertE);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertF"), "InsertF", "Insert F","Inserts note F before note at cursor\nCursor determines which octave\nNote is inserted in the prevailing rhythm",  InsertF);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertG"), "InsertG", "Insert G","Inserts note G before note at cursor\nCursor determines which octave\nNote is inserted in the prevailing rhythm",  InsertG);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeToA"), "ChangeToA", N_("Change to A"),N_("Changes note at cursor to nearest note A\nRhythm is unchanged"),  ChangeToA);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeToB"), "ChangeToB", N_("Change to B"),N_("Changes note at cursor to nearest note B\nRhythm is unchanged"),  ChangeToB);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeToC"), "ChangeToC", N_("Change to C"),N_("Changes note at cursor to nearest note C\nRhythm is unchanged"),  ChangeToC);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeToD"), "ChangeToD", N_("Change to D"),N_("Changes note at cursor to nearest note D\nRhythm is unchanged"),  ChangeToD);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeToE"), "ChangeToE", N_("Change to E"),N_("Changes note at cursor to nearest note E\nRhythm is unchanged"),  ChangeToE);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeToF"), "ChangeToF", N_("Change to F"),N_("Changes note at cursor to nearest note F\nRhythm is unchanged"),  ChangeToF);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeToG"), "ChangeToG", N_("Change to G"),N_("Changes note at cursor to nearest note G\nRhythm is unchanged"),  ChangeToG);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "0"), "0", N_(MUSIC_FONT("0")), N_("In insert mode, changes prevailing rhythm to "MUSIC_FONT("0")"\nIn edit mode changes the current note to "MUSIC_FONT("0")"\n or appends a "MUSIC_FONT("0")" if no current note\nIn classic mode inserts a "MUSIC_FONT("0")" at the cursor"), Dur0);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Change0"), "Change0", N_(MUSIC_FONT("0")), N_("Change the current note to a "MUSIC_FONT("0")), ChangeDur0);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert0"), "Insert0", N_(MUSIC_FONT("0")), N_("Insert a "MUSIC_FONT("0")), InsertDur0);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertRest0"), "InsertRest0",  N_("Insert a "MUSIC_FONT("0")"rest") ,  N_("Inserts a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("0")), InsertRest0);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeRest0"), "ChangeRest0",  N_("Change a "MUSIC_FONT("0")"rest") ,  N_("Changes a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("0")), ChangeRest0);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "1"), "1", N_(MUSIC_FONT("1")), N_("In insert mode, changes prevailing rhythm to "MUSIC_FONT("1")"\nIn edit mode changes the current note to "MUSIC_FONT("1")"\n or appends a "MUSIC_FONT("1")" if no current note\nIn classic mode inserts a "MUSIC_FONT("1")" at the cursor"), Dur1);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Change1"), "Change1", N_(MUSIC_FONT("1")), N_("Change the current note to a "MUSIC_FONT("1")), ChangeDur1);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert1"), "Insert1", N_(MUSIC_FONT("1")), N_("Insert a "MUSIC_FONT("1")), InsertDur1);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertRest1"), "InsertRest1",  N_("Insert a "MUSIC_FONT("1")"rest") ,  N_("Inserts a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("1")), InsertRest1);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeRest1"), "ChangeRest1",  N_("Change a "MUSIC_FONT("1")"rest") ,  N_("Changes a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("1")), ChangeRest1);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "2"), "2", N_(MUSIC_FONT("2")), N_("In insert mode, changes prevailing rhythm to "MUSIC_FONT("2")"\nIn edit mode changes the current note to "MUSIC_FONT("2")"\n or appends a "MUSIC_FONT("2")" if no current note\nIn classic mode inserts a "MUSIC_FONT("2")" at the cursor"), Dur2);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Change2"), "Change2", N_(MUSIC_FONT("2")), N_("Change the current note to a "MUSIC_FONT("2")), ChangeDur2);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert2"), "Insert2", N_(MUSIC_FONT("2")), N_("Insert a "MUSIC_FONT("2")), InsertDur2);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertRest2"), "InsertRest2",  N_("Insert a "MUSIC_FONT("2")"rest") ,  N_("Inserts a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("2")), InsertRest2);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeRest2"), "ChangeRest2",  N_("Change a "MUSIC_FONT("2")"rest") ,  N_("Changes a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("2")), ChangeRest2);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "3"), "3", N_(MUSIC_FONT("3")), N_("In insert mode, changes prevailing rhythm to "MUSIC_FONT("3")"\nIn edit mode changes the current note to "MUSIC_FONT("3")"\n or appends a "MUSIC_FONT("3")" if no current note\nIn classic mode inserts a "MUSIC_FONT("3")" at the cursor"), Dur3);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Change3"), "Change3", N_(MUSIC_FONT("3")), N_("Change the current note to a "MUSIC_FONT("3")), ChangeDur3);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert3"), "Insert3", N_(MUSIC_FONT("3")), N_("Insert a "MUSIC_FONT("3")), InsertDur3);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertRest3"), "InsertRest3",  N_("Insert a "MUSIC_FONT("3")"rest") ,  N_("Inserts a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("3")), InsertRest3);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeRest3"), "ChangeRest3",  N_("Change a "MUSIC_FONT("3")"rest") ,  N_("Changes a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("3")), ChangeRest3);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "4"), "4", N_(MUSIC_FONT("4")), N_("In insert mode, changes prevailing rhythm to "MUSIC_FONT("4")"\nIn edit mode changes the current note to "MUSIC_FONT("4")"\n or appends a "MUSIC_FONT("4")" if no current note\nIn classic mode inserts a "MUSIC_FONT("4")" at the cursor"), Dur4);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Change4"), "Change4", N_(MUSIC_FONT("4")), N_("Change the current note to a "MUSIC_FONT("4")), ChangeDur4);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert4"), "Insert4", N_(MUSIC_FONT("4")), N_("Insert a "MUSIC_FONT("4")), InsertDur4);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertRest4"), "InsertRest4",  N_("Insert a "MUSIC_FONT("4")"rest") ,  N_("Inserts a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("4")), InsertRest4);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeRest4"), "ChangeRest4",  N_("Change a "MUSIC_FONT("4")"rest") ,  N_("Changes a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("4")), ChangeRest4);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "5"), "5", N_(MUSIC_FONT("5")), N_("In insert mode, changes prevailing rhythm to "MUSIC_FONT("5")"\nIn edit mode changes the current note to "MUSIC_FONT("5")"\n or appends a "MUSIC_FONT("5")" if no current note\nIn classic mode inserts a "MUSIC_FONT("5")" at the cursor"), Dur5);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Change5"), "Change5", N_(MUSIC_FONT("5")), N_("Change the current note to a "MUSIC_FONT("5")), ChangeDur5);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert5"), "Insert5", N_(MUSIC_FONT("5")), N_("Insert a "MUSIC_FONT("5")), InsertDur5);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertRest5"), "InsertRest5",  N_("Insert a "MUSIC_FONT("5")"rest") ,  N_("Inserts a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("5")), InsertRest5);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeRest5"), "ChangeRest5",  N_("Change a "MUSIC_FONT("5")"rest") ,  N_("Changes a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("5")), ChangeRest5);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "6"), "6", N_(MUSIC_FONT("6")), N_("In insert mode, changes prevailing rhythm to "MUSIC_FONT("6")"\nIn edit mode changes the current note to "MUSIC_FONT("6")"\n or appends a "MUSIC_FONT("6")" if no current note\nIn classic mode inserts a "MUSIC_FONT("6")" at the cursor"), Dur6);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Change6"), "Change6", N_(MUSIC_FONT("6")), N_("Change the current note to a "MUSIC_FONT("6")), ChangeDur6);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "Insert6"), "Insert6", N_(MUSIC_FONT("6")), N_("Insert a "MUSIC_FONT("6")), InsertDur6);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "InsertRest6"), "InsertRest6",  N_("Insert a "MUSIC_FONT("6")"rest") ,  N_("Inserts a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("6")), InsertRest6);
register_command(Denemo.commands, gtk_action_group_get_action(action_group, "ChangeRest6"), "ChangeRest6",  N_("Change a "MUSIC_FONT("6")"rest") ,  N_("Changes a rest at cursor position\nSets prevailing rhythm to "MUSIC_FONT("6")), ChangeRest6);
