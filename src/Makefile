# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/denemo
pkglibdir = $(libdir)/denemo
pkgincludedir = $(includedir)/denemo
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/jjbenham/src/denemo.git/denemo/missing --run aclocal-1.7
ALSA_CFLAGS = 
ALSA_LIBS = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/jjbenham/src/denemo.git/denemo/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/jjbenham/src/denemo.git/denemo/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jjbenham/src/denemo.git/denemo/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jjbenham/src/denemo.git/denemo/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1   -I/usr/include/aubio   -DDEBUG -g
CPP = gcc -E
CPPFLAGS =  -I/usr/include/libxml2
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -DDEBUG -g
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DENEMO_BUILD_DOC_FALSE = 
DENEMO_BUILD_DOC_TRUE = #
DENEMO_PLUGINS_ALL = analysis rumour midiinput
DENEMO_PLUGINS_SELECTED = 
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GTK2_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/pixman-1  
GTK2_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LDFLAGS =  
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBAUBIO_CFLAGS = -I/usr/include/aubio  
LIBAUBIO_LIBS = -laubio  
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0   -laubio   -lportaudio -lxml2
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/jjbenham/src/denemo.git/denemo/missing --run makeinfo
MKINSTALLDIRS = $(top_builddir)/./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NMEDIT = 
OBJEXT = o
PACKAGE = denemo
PACKAGE_BUGREPORT = 
PACKAGE_DATA_DIR = ${datarootdir}/denemo
PACKAGE_NAME = 
PACKAGE_PLUGIN_DIR = ${exec_prefix}/lib/denemo
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POSUB = po
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 0.7.8
XGETTEXT = /usr/bin/xgettext
XML2_CONFIG = /usr/bin/xml2-config
XML_CPPFLAGS = -I/usr/include/libxml2
XML_LIBS = -lxml2
YACC = bison -y
YFLAGS = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/jjbenham/src/denemo.git/denemo/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec

localedir = $(datadir)/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
bin_PROGRAMS = denemo
dist_pkgdata_DATA = denemoui.xml instruments.xml
denemo_SOURCES = articulations.c calculatepositions.c changenotehead.c \
	chordops.c clefdialog.c commandfuncs.c contexts.c draw.c \
	drawaccidentals.c drawclefs.c drawcursor.c drawkey.c drawdynamic.c \
	drawnotes.c drawselection.c drawstemdir.c drawtimesig.c drawtuplets.c \
	drawlyric.c dynamic.c drawfigure.c exportabc.c exportlilypond.c \
	exportpdf.c exportxml.c file.c frogio.c gcs.c \
	headerdialog.c hairpin.c \
	help.c importxml.c importmidi.c kbd-custom.c kbd-interface.c \
	keyresponses.c keysigdialog.c figure.c 	main.c \
	measureops.c midi.c moveviewport.c mousing.c barline.c 	view.c \
	mwidthdialog.c objops.c exportmidi.c 	instrumentname.c external.c \
	playback.c drawfakechord.c fakechord.c \
	playbackprops.c plugin.c prefdialog.c prefops.c	processstaffname.c \
	csoundplayback.c lyric.c scoreops.c scoreprops.c \
	selectops.c staffops.c \
	staffpropdialog.c drawbarline.c slurs.c \
	timedialog.c tomeasuredialog.c \
	tupletops.c utils.c graceops.c runsilent.c drawgrace.c	print.c \
	exportcsound.c lyparser.c  lylexer.c lyparserfuncs.c frogparser.c \
	froglexer.c	accwidths.h \
	articulations.h calculatepositions.h changenotehead.h \
	 chordops.h commandfuncs.h \
	csoundplayback.h contexts.h  dynamic.h dialogs.h draw.h \
	drawingprims.h lyparser.h \
	exportabc.h exportlilypond.h  exportxml.h file.h frogio.h \
	frogdefs.h gcs.h \
	figure.h barline.h view.h hairpin.h  help.h importxml.h importmidi.h \
	kbd-custom.h kbd-interface.h graceops.h \
	keyresponses.h lyparserfuncs.h \
	measureops.h midi.h mousing.h  moveviewport.h notewidths.h \
	objops.h frogparser.h \
	playbackprops.h plugin.h prefops.h processstaffname.h \
	redefs.h scoreops.h \
	selectops.h staffops.h slurs.h twoints.h  tupletops.h utils.h \
	exportxml.h \
	xmldefs.h exportmidi.h instrumentname.h  frogparser.h print.h \
	exportcsound.h \
	lyric.h playback.h runsilent.h binreloc.c  binreloc.h exportpdf.h \
	alsaplayback.c alsaplayback.h bookmarks.c bookmarks.h scorewizard.c \
	external.h scorewizard.h fakechord.h \
	parseinstruments.c parseinstruments.h keyboard.c \
	midiseq.h alsaseq.h alsaseq.c \
	pitchentry.c pitchrecog.c audiocapture.c pitchentry.h audio.h \
	drawlilydir.c lilydirectives.h lilydirectives.c keysigdialog.h \
	callbacks.h entries.h

EXTRA_DIST = frogparser.y froglexer.l lylexer.l lyparser.y
INCLUDES = -I../intl -I$(top_srcdir)/intl -I$(top_srcdir)/include \
-I$(top_srcdir)/pixmaps \
-DLOCALEDIR=\"$(localedir)\" \
-DSYSCONFDIR=\"$(sysconfdir)/\" \
-DPKGDATADIR=\"$(pkgdatadir)/\"


denemo_LDADD = $(INTLLIBS) 
AM_CPPFLAGS = $(BINRELOC_CFLAGS)

MAINTAINERCLEANFILES = lylexer.c lyparser.c lyparser.h \
frogparser.c frogparser.h 


noinst_HEADERS = parseinstruments.h keyboard.h 
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = denemo$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_denemo_OBJECTS = articulations.$(OBJEXT) calculatepositions.$(OBJEXT) \
	changenotehead.$(OBJEXT) chordops.$(OBJEXT) \
	clefdialog.$(OBJEXT) commandfuncs.$(OBJEXT) contexts.$(OBJEXT) \
	draw.$(OBJEXT) drawaccidentals.$(OBJEXT) drawclefs.$(OBJEXT) \
	drawcursor.$(OBJEXT) drawkey.$(OBJEXT) drawdynamic.$(OBJEXT) \
	drawnotes.$(OBJEXT) drawselection.$(OBJEXT) \
	drawstemdir.$(OBJEXT) drawtimesig.$(OBJEXT) \
	drawtuplets.$(OBJEXT) drawlyric.$(OBJEXT) dynamic.$(OBJEXT) \
	drawfigure.$(OBJEXT) exportabc.$(OBJEXT) \
	exportlilypond.$(OBJEXT) exportpdf.$(OBJEXT) \
	exportxml.$(OBJEXT) file.$(OBJEXT) frogio.$(OBJEXT) \
	gcs.$(OBJEXT) headerdialog.$(OBJEXT) hairpin.$(OBJEXT) \
	help.$(OBJEXT) importxml.$(OBJEXT) importmidi.$(OBJEXT) \
	kbd-custom.$(OBJEXT) kbd-interface.$(OBJEXT) \
	keyresponses.$(OBJEXT) keysigdialog.$(OBJEXT) figure.$(OBJEXT) \
	main.$(OBJEXT) measureops.$(OBJEXT) midi.$(OBJEXT) \
	moveviewport.$(OBJEXT) mousing.$(OBJEXT) barline.$(OBJEXT) \
	view.$(OBJEXT) mwidthdialog.$(OBJEXT) objops.$(OBJEXT) \
	exportmidi.$(OBJEXT) instrumentname.$(OBJEXT) \
	external.$(OBJEXT) playback.$(OBJEXT) drawfakechord.$(OBJEXT) \
	fakechord.$(OBJEXT) playbackprops.$(OBJEXT) plugin.$(OBJEXT) \
	prefdialog.$(OBJEXT) prefops.$(OBJEXT) \
	processstaffname.$(OBJEXT) csoundplayback.$(OBJEXT) \
	lyric.$(OBJEXT) scoreops.$(OBJEXT) scoreprops.$(OBJEXT) \
	selectops.$(OBJEXT) staffops.$(OBJEXT) \
	staffpropdialog.$(OBJEXT) drawbarline.$(OBJEXT) slurs.$(OBJEXT) \
	timedialog.$(OBJEXT) tomeasuredialog.$(OBJEXT) \
	tupletops.$(OBJEXT) utils.$(OBJEXT) graceops.$(OBJEXT) \
	runsilent.$(OBJEXT) drawgrace.$(OBJEXT) print.$(OBJEXT) \
	exportcsound.$(OBJEXT) lyparser.$(OBJEXT) lylexer.$(OBJEXT) \
	lyparserfuncs.$(OBJEXT) frogparser.$(OBJEXT) \
	froglexer.$(OBJEXT) binreloc.$(OBJEXT) alsaplayback.$(OBJEXT) \
	bookmarks.$(OBJEXT) scorewizard.$(OBJEXT) \
	parseinstruments.$(OBJEXT) keyboard.$(OBJEXT) alsaseq.$(OBJEXT) \
	pitchentry.$(OBJEXT) pitchrecog.$(OBJEXT) \
	audiocapture.$(OBJEXT) drawlilydir.$(OBJEXT) \
	lilydirectives.$(OBJEXT)
denemo_OBJECTS = $(am_denemo_OBJECTS)
denemo_DEPENDENCIES =
denemo_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/alsaplayback.Po \
	./$(DEPDIR)/alsaseq.Po ./$(DEPDIR)/articulations.Po \
	./$(DEPDIR)/audiocapture.Po ./$(DEPDIR)/barline.Po \
	./$(DEPDIR)/binreloc.Po ./$(DEPDIR)/bookmarks.Po \
	./$(DEPDIR)/calculatepositions.Po \
	./$(DEPDIR)/changenotehead.Po \
	./$(DEPDIR)/chordops.Po ./$(DEPDIR)/clefdialog.Po \
	./$(DEPDIR)/commandfuncs.Po ./$(DEPDIR)/contexts.Po \
	./$(DEPDIR)/csoundplayback.Po ./$(DEPDIR)/draw.Po \
	./$(DEPDIR)/drawaccidentals.Po \
	./$(DEPDIR)/drawbarline.Po ./$(DEPDIR)/drawclefs.Po \
	./$(DEPDIR)/drawcursor.Po \
	./$(DEPDIR)/drawdynamic.Po \
	./$(DEPDIR)/drawfakechord.Po \
	./$(DEPDIR)/drawfigure.Po ./$(DEPDIR)/drawgrace.Po \
	./$(DEPDIR)/drawkey.Po ./$(DEPDIR)/drawlilydir.Po \
	./$(DEPDIR)/drawlyric.Po ./$(DEPDIR)/drawnotes.Po \
	./$(DEPDIR)/drawselection.Po \
	./$(DEPDIR)/drawstemdir.Po \
	./$(DEPDIR)/drawtimesig.Po \
	./$(DEPDIR)/drawtuplets.Po ./$(DEPDIR)/dynamic.Po \
	./$(DEPDIR)/exportabc.Po \
	./$(DEPDIR)/exportcsound.Po \
	./$(DEPDIR)/exportlilypond.Po \
	./$(DEPDIR)/exportmidi.Po ./$(DEPDIR)/exportpdf.Po \
	./$(DEPDIR)/exportxml.Po ./$(DEPDIR)/external.Po \
	./$(DEPDIR)/fakechord.Po ./$(DEPDIR)/figure.Po \
	./$(DEPDIR)/file.Po ./$(DEPDIR)/frogio.Po \
	./$(DEPDIR)/froglexer.Po ./$(DEPDIR)/frogparser.Po \
	./$(DEPDIR)/gcs.Po ./$(DEPDIR)/graceops.Po \
	./$(DEPDIR)/hairpin.Po ./$(DEPDIR)/headerdialog.Po \
	./$(DEPDIR)/help.Po ./$(DEPDIR)/importmidi.Po \
	./$(DEPDIR)/importxml.Po \
	./$(DEPDIR)/instrumentname.Po \
	./$(DEPDIR)/kbd-custom.Po \
	./$(DEPDIR)/kbd-interface.Po \
	./$(DEPDIR)/keyboard.Po ./$(DEPDIR)/keyresponses.Po \
	./$(DEPDIR)/keysigdialog.Po \
	./$(DEPDIR)/lilydirectives.Po \
	./$(DEPDIR)/lylexer.Po ./$(DEPDIR)/lyparser.Po \
	./$(DEPDIR)/lyparserfuncs.Po ./$(DEPDIR)/lyric.Po \
	./$(DEPDIR)/main.Po ./$(DEPDIR)/measureops.Po \
	./$(DEPDIR)/midi.Po ./$(DEPDIR)/mousing.Po \
	./$(DEPDIR)/moveviewport.Po \
	./$(DEPDIR)/mwidthdialog.Po ./$(DEPDIR)/objops.Po \
	./$(DEPDIR)/parseinstruments.Po \
	./$(DEPDIR)/pitchentry.Po ./$(DEPDIR)/pitchrecog.Po \
	./$(DEPDIR)/playback.Po \
	./$(DEPDIR)/playbackprops.Po ./$(DEPDIR)/plugin.Po \
	./$(DEPDIR)/prefdialog.Po ./$(DEPDIR)/prefops.Po \
	./$(DEPDIR)/print.Po \
	./$(DEPDIR)/processstaffname.Po \
	./$(DEPDIR)/runsilent.Po ./$(DEPDIR)/scoreops.Po \
	./$(DEPDIR)/scoreprops.Po \
	./$(DEPDIR)/scorewizard.Po ./$(DEPDIR)/selectops.Po \
	./$(DEPDIR)/slurs.Po ./$(DEPDIR)/staffops.Po \
	./$(DEPDIR)/staffpropdialog.Po \
	./$(DEPDIR)/timedialog.Po \
	./$(DEPDIR)/tomeasuredialog.Po \
	./$(DEPDIR)/tupletops.Po ./$(DEPDIR)/utils.Po \
	./$(DEPDIR)/view.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(denemo_SOURCES)
DATA = $(dist_pkgdata_DATA)

HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(dist_pkgdata_DATA) $(noinst_HEADERS) \
	$(srcdir)/Makefile.in Makefile.am
SOURCES = $(denemo_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
denemo$(EXEEXT): $(denemo_OBJECTS) $(denemo_DEPENDENCIES) 
	@rm -f denemo$(EXEEXT)
	$(LINK) $(denemo_LDFLAGS) $(denemo_OBJECTS) $(denemo_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/alsaplayback.Po
include ./$(DEPDIR)/alsaseq.Po
include ./$(DEPDIR)/articulations.Po
include ./$(DEPDIR)/audiocapture.Po
include ./$(DEPDIR)/barline.Po
include ./$(DEPDIR)/binreloc.Po
include ./$(DEPDIR)/bookmarks.Po
include ./$(DEPDIR)/calculatepositions.Po
include ./$(DEPDIR)/changenotehead.Po
include ./$(DEPDIR)/chordops.Po
include ./$(DEPDIR)/clefdialog.Po
include ./$(DEPDIR)/commandfuncs.Po
include ./$(DEPDIR)/contexts.Po
include ./$(DEPDIR)/csoundplayback.Po
include ./$(DEPDIR)/draw.Po
include ./$(DEPDIR)/drawaccidentals.Po
include ./$(DEPDIR)/drawbarline.Po
include ./$(DEPDIR)/drawclefs.Po
include ./$(DEPDIR)/drawcursor.Po
include ./$(DEPDIR)/drawdynamic.Po
include ./$(DEPDIR)/drawfakechord.Po
include ./$(DEPDIR)/drawfigure.Po
include ./$(DEPDIR)/drawgrace.Po
include ./$(DEPDIR)/drawkey.Po
include ./$(DEPDIR)/drawlilydir.Po
include ./$(DEPDIR)/drawlyric.Po
include ./$(DEPDIR)/drawnotes.Po
include ./$(DEPDIR)/drawselection.Po
include ./$(DEPDIR)/drawstemdir.Po
include ./$(DEPDIR)/drawtimesig.Po
include ./$(DEPDIR)/drawtuplets.Po
include ./$(DEPDIR)/dynamic.Po
include ./$(DEPDIR)/exportabc.Po
include ./$(DEPDIR)/exportcsound.Po
include ./$(DEPDIR)/exportlilypond.Po
include ./$(DEPDIR)/exportmidi.Po
include ./$(DEPDIR)/exportpdf.Po
include ./$(DEPDIR)/exportxml.Po
include ./$(DEPDIR)/external.Po
include ./$(DEPDIR)/fakechord.Po
include ./$(DEPDIR)/figure.Po
include ./$(DEPDIR)/file.Po
include ./$(DEPDIR)/frogio.Po
include ./$(DEPDIR)/froglexer.Po
include ./$(DEPDIR)/frogparser.Po
include ./$(DEPDIR)/gcs.Po
include ./$(DEPDIR)/graceops.Po
include ./$(DEPDIR)/hairpin.Po
include ./$(DEPDIR)/headerdialog.Po
include ./$(DEPDIR)/help.Po
include ./$(DEPDIR)/importmidi.Po
include ./$(DEPDIR)/importxml.Po
include ./$(DEPDIR)/instrumentname.Po
include ./$(DEPDIR)/kbd-custom.Po
include ./$(DEPDIR)/kbd-interface.Po
include ./$(DEPDIR)/keyboard.Po
include ./$(DEPDIR)/keyresponses.Po
include ./$(DEPDIR)/keysigdialog.Po
include ./$(DEPDIR)/lilydirectives.Po
include ./$(DEPDIR)/lylexer.Po
include ./$(DEPDIR)/lyparser.Po
include ./$(DEPDIR)/lyparserfuncs.Po
include ./$(DEPDIR)/lyric.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/measureops.Po
include ./$(DEPDIR)/midi.Po
include ./$(DEPDIR)/mousing.Po
include ./$(DEPDIR)/moveviewport.Po
include ./$(DEPDIR)/mwidthdialog.Po
include ./$(DEPDIR)/objops.Po
include ./$(DEPDIR)/parseinstruments.Po
include ./$(DEPDIR)/pitchentry.Po
include ./$(DEPDIR)/pitchrecog.Po
include ./$(DEPDIR)/playback.Po
include ./$(DEPDIR)/playbackprops.Po
include ./$(DEPDIR)/plugin.Po
include ./$(DEPDIR)/prefdialog.Po
include ./$(DEPDIR)/prefops.Po
include ./$(DEPDIR)/print.Po
include ./$(DEPDIR)/processstaffname.Po
include ./$(DEPDIR)/runsilent.Po
include ./$(DEPDIR)/scoreops.Po
include ./$(DEPDIR)/scoreprops.Po
include ./$(DEPDIR)/scorewizard.Po
include ./$(DEPDIR)/selectops.Po
include ./$(DEPDIR)/slurs.Po
include ./$(DEPDIR)/staffops.Po
include ./$(DEPDIR)/staffpropdialog.Po
include ./$(DEPDIR)/timedialog.Po
include ./$(DEPDIR)/tomeasuredialog.Po
include ./$(DEPDIR)/tupletops.Po
include ./$(DEPDIR)/utils.Po
include ./$(DEPDIR)/view.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
dist_pkgdataDATA_INSTALL = $(INSTALL_DATA)
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)
	@list='$(dist_pkgdata_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(dist_pkgdataDATA_INSTALL) $$d$$p $(DESTDIR)$(pkgdatadir)/$$f"; \
	  $(dist_pkgdataDATA_INSTALL) $$d$$p $(DESTDIR)$(pkgdatadir)/$$f; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgdatadir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgdatadir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(pkgdatadir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-dist_pkgdataDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_pkgdataDATA \
	uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_pkgdataDATA \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-dist_pkgdataDATA \
	uninstall-info-am


frogparser.c frogpparser.h: frogparser.y
	bison -d -pfrog $(srcdir)/frogparser.y 
	mv frogparser.tab.c frogparser.c
	mv frogparser.tab.h frogparser.h

froglexer.c: froglexer.l
	flex -Pfrog  -o$(srcdir)/froglexer.c $(srcdir)/froglexer.l  

lyparser.c lyparser.h: lyparser.y
	bison -d -ply $(srcdir)/lyparser.y 
	mv lyparser.tab.c lyparser.c
	mv lyparser.tab.h lyparser.h

lylexer.c: lylexer.l
	flex -Ply  -o$(srcdir)/lylexer.c $(srcdir)/lylexer.l  
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
