<?xml version="1.0"?>
<Denemo>
  <merge>
    <title>A Denemo Keymap</title>
    <author>AT, JRR, RTS</author>
    <map>
      <row>
        <after>InsertWholeMeasureRest</after>
        <action>MultiMeasureRests</action>
        <scheme>;;MultiMeasureRests
; Convert multiple whole Measure Rests to a Multi Measure Rest without destroying the WholeMeasureRests.
;; Stops at time-sig changes.
(d-PushPosition) 
(d-GoToPosition #f #f #f 1) ; only start from the measure beginning. If someone mixed the rest with other objects, abort.
(if  (Timesignature?) (d-MoveCursorRight)) ; If the measure starts with a timesig thats ok, try if the next object is a rest
(if (d-Directive-standalone? "WholeMeasureRest")
(let ()
	(define counter 1)
	(d-PushPosition)
	 (RepeatUntilFail 
		(lambda ()
			(if (d-Directive-standalone? "WholeMeasureRest")			
				(begin (d-NextObject)
					(if (d-Directive-standalone? "WholeMeasureRest") ;; Stops at time-sig changes, too.
						(begin (set! counter (1+ counter)) #t)
						(begin (d-PrevObject) (d-MoveCursorRight)#f))) ; this double jump prevents that the cursor stops after a barline
			#f)))

	(StandAloneDirectiveProto (cons "MultiMeasureRestEnd" "%}"))
	(d-PopPosition) ; the closing StandAloneDirective does not influence the positioning so PopPosition can still jump backwards, even if there is a new object in the score.
	
	(StandAloneDirectiveProto 
		(cons 
			"MultiMeasureRests"
			(string-append ; build the lilypond string for, example,  5 measures \\compressFullBarRests R1*5*4/4
				 "\\compressFullBarRests R1*"
				 (number-&gt;string counter)
				 "*"
				 (d-InsertTimeSig "query=timesigname")
				 "\\expandFullBarRests %{ "))
		 #f #f)	
) #f) ; not a WholeMeasureRest
(d-PopPosition)

</scheme>
        <label>Multi-Measure Rests</label>
        <tooltip>Creates a multi-measure rest from the whole measure rests after the cursor. You must create the whole measure rests first.</tooltip>
      </row>
    </map>
  </merge>
</Denemo>
