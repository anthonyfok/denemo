<?xml version="1.0"?>
<Denemo>
  <merge>
    <title>A Denemo Keymap</title>
    <author>AT, JRR, RTS</author>
    <map>
      <row>
        <action>DiatonicInterval</action>
        <scheme>;;;;;;;;;;;;;;;
;;DiatonicInterval
;; tests interval recognition.
(define DiatonicInterval::score 0)
(define DiatonicInterval::interval 3)
(define DiatonicInterval::start (current-time))
(define DiatonicInterval::end (current-time))
(define DiatonicInterval::num-goes 30)
(define DiatonicInterval::intervalwas #t)
(define DiatonicInterval::userinput #t)
(define DiatonicInterval::direction 0)

(define (DiatonicInterval::showscore)
  (d-DirectivePut-score-display "DiatonicInterval::GameScore" (string-append "&lt;b&gt;Score: " (object-&gt;string DiatonicInterval::score) "&lt;/b&gt; in " (object-&gt;string (- DiatonicInterval::end DiatonicInterval::start)) " Secs.")))

(define (DiatonicInterval::help) 
  (d-InfoDialog "Enter the interval value that the note changes. If the note moves by a 2nd hit 2, by a 3rd hit 3 etc..... ")
)

(define (DiatonicInterval::GameOver)
  (let ( (BufferOne "") )
   (set! BufferOne (string-append "Game Over\n" "Your Score = " (number->string DiatonicInterval::score)))
  (d-InfoDialog BufferOne))
)

(define (DiatonicInterval::ScoreBoard)
  (let ( (BufferOne "") )
   (set! BufferOne (string-append "This is Where the scoreboard will be in the future."))
  (d-InfoDialog BufferOne))
)

(CreateButton "DiatonicInterval::GameScore" "&lt;span font_desc=\"12\"&gt;Score&lt;/span&gt;")
(d-SetDirectiveTagActionScript "DiatonicInterval::GameScore" "(DiatonicInterval::ScoreBoard)")
(CreateButton "DiatonicInterval::GameHelp" "&lt;b&gt;Help&lt;/b&gt;")
(d-SetDirectiveTagActionScript "DiatonicInterval::GameHelp" "(DiatonicInterval::help)")


;;;;;;;; the main function to run the test - just goes to end and places a note at a random height above the cursor, returning the cursor to where it was.
(define (DiatonicInterval::offerNote) 
(if (>= DiatonicInterval::num-goes 0)
	(let ( (steps 0) )
	  ;;  (d-GoToEnd)
	  (let gotoEnd () (if  (d-NextObject) (gotoEnd)))
	  (set! steps (random DiatonicInterval::interval))
	  (if (= steps 0)
	    (set! steps (+ steps 1)))
	  (if (= DiatonicInterval::direction 0)
	      (begin
	            (EducationGames::shiftup steps)
	            (set! DiatonicInterval::direction 1))
	      (begin 
	            (EducationGames::shiftdown steps)
	            (set! DiatonicInterval::direction 0)))
	    
          (d-Insert2) 
          (set! DiatonicInterval::intervalwas (+ 1 steps))

          (DiatonicInterval::showscore)
	  (set! DiatonicInterval::num-goes (-  DiatonicInterval::num-goes 1))
	  )
	))

;;;;;;;;; callback when user chooses a note
(define (DiatonicInterval::intervalchosen interval)
		      (begin
			(set! DiatonicInterval::end (current-time))
			(let gotoEnd () (if  (d-NextObject) (gotoEnd)))	
			(if  (= DiatonicInterval::intervalwas interval)
			     (begin
			       (set! DiatonicInterval::score (+ DiatonicInterval::score 1))
			       (EducationGames::PlaceAnswerStatus "CheckMark")
			       (d-ChangeNotehead "Diamond"))
			     (begin
			       (set! DiatonicInterval::score (- DiatonicInterval::score 1))
			       (EducationGames::PlaceAnswerStatus "CrossSign")
			       (d-ChangeNotehead "Cross"))) 
			       (DiatonicInterval::offerNote)
			       ))
	
;;;;;;;; the main function to run the test
(define DiatonicInterval::runtest 
	(lambda (n)
	  (if (>= n 0) (begin
	    		;(set! DiatonicInterval::userinput (d-GetKeypress))
	                (set! DiatonicInterval::userinput (d-GetChar))
			(set! DiatonicInterval::userinput 
                            (string-&gt;number DiatonicInterval::userinput))
  			(if (not (integer? DiatonicInterval::userinput))
  			  (set! DiatonicInterval::userinput 1))

			(DiatonicInterval::intervalchosen DiatonicInterval::userinput)	
			(DiatonicInterval::runtest DiatonicInterval::num-goes)))))

			
(define (DiatonicInterval::plus)
  (set! DiatonicInterval::interval (+ DiatonicInterval::interval 1))
  (if (&gt; DiatonicInterval::interval 32)
      (set! DiatonicInterval::interval 32))
  (d-DirectivePut-score-display "DiatonicInterval::GameInterval"
				(string-append "&lt;span font_desc=\"12\"&gt;Interval: " (object-&gt;string DiatonicInterval::interval) "&lt;/span&gt;")))

(define (DiatonicInterval::minus)
  (set! DiatonicInterval::interval (- DiatonicInterval::interval 1))
  (if (&lt; DiatonicInterval::interval 2)
      (set! DiatonicInterval::interval 2))
  (d-DirectivePut-score-display "DiatonicInterval::GameInterval"
				(string-append "&lt;span font_desc=\"12\"&gt;Interval: " (object-&gt;string DiatonicInterval::interval) "&lt;/span&gt;")))

(define (DiatonicInterval::setInterval)
  (set! DiatonicInterval::interval (string-&gt;number (d-GetUserInput "Interval" "Give number of steps you want to name note over" (object-&gt;string DiatonicInterval::interval))))
  (if (boolean? DiatonicInterval::interval)
       (set! DiatonicInterval::interval 8))
  (if (&lt; DiatonicInterval::interval 2)
       (set! DiatonicInterval::interval 2))
  (if (&gt; DiatonicInterval::interval 32)
      (set! DiatonicInterval::interval 32))
  (d-DirectivePut-score-display "DiatonicInterval::GameInterval"
				(string-append "&lt;span font_desc=\"12\"&gt;Interval: " (object-&gt;string DiatonicInterval::interval) "&lt;/span&gt;")))


(CreateButton "DiatonicInterval::GameMinus" "&lt;b&gt;-&lt;/b&gt;")
(d-SetDirectiveTagActionScript "DiatonicInterval::GameMinus" "(DiatonicInterval::minus)")
(CreateButton "DiatonicInterval::GameInterval" (string-append "&lt;span font_desc=\"12\"&gt;Interval: " (object-&gt;string DiatonicInterval::interval) "&lt;/span&gt;"))
(d-SetDirectiveTagActionScript "DiatonicInterval::GameInterval" "(DiatonicInterval::setInterval)")
(CreateButton "DiatonicInterval::GamePlus" "&lt;b&gt;+&lt;/b&gt;")
(d-SetDirectiveTagActionScript "DiatonicInterval::GamePlus" "(DiatonicInterval::plus)")





	  

  (d-PlayMidiKey #xF03001)
  (d-PlayMidiKey #xF02A01)
  (d-PlayMidiKey #xF04001)

(EducationGames::shiftup 6)
(d-Insert2)
(DiatonicInterval::offerNote)
(set! DiatonicInterval::start (current-time))
(DiatonicInterval::runtest DiatonicInterval::num-goes)
(DiatonicInterval::GameOver)


  (d-PlayMidiKey #xF03001)
  (d-PlayMidiKey #xF02A01)
  (d-PlayMidiKey #xF04001)
  )
;;;;;;;;;;;;;;;;;;;;;;;;;;

</scheme>
        <label>Diatonic Interval Detection</label>
        <tooltip>%tests your ability to find the diatonic interval name between two notes</tooltip>
      </row>
    </map>
  </merge>
</Denemo>
