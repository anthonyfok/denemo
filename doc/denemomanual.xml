<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="./docbook-complete.css" type="text/css"?>
<article>
  <articleinfo>
    <title></title>


<legalnotice>
      <para>This Manual is released under the <ulink
    url="http://creativecommons.org/licenses/by-sa/3.0">Creative Commons
Attribution-Share Alike 3.0 Unported</ulink> license.</para>
</legalnotice>

    <copyright>
      <year>2009. 2010</year>

      <holder>Denemo Project</holder>
    </copyright><author>
      <firstname>Richard</firstname>

      <surname>Shann</surname>

      <email>Richard.Shann@virgin.net</email>
    </author>


    <author>
      <firstname>Aaron</firstname>

      <surname>Mehl</surname>

      <email>aamehl@actcom.net.il</email>
    </author>
    
    <productname>Denemo <productnumber>1</productnumber></productname>

    <releaseinfo>0.8.17</releaseinfo>
  </articleinfo>

  <sect1>
    <title>Introduction</title>

    <para>Denemo lets you create musical scores. You can type music in using the keyboard 
    or play it in using a MIDI contoller or the microphone input. You can edit your music - the display shows you what you
    are working on in music notation - and you can playback to check how it sounds. 
    You can preview and print the score or parts to the highest standards used in the music publishing industry 
    - thanks to the Lilypond music typesetting program.</para>
    <para>Denemo does not attempt to show the appearance of the finished score, it just shows you enough to enable you to enter the music efficiently. To see the finished score you press Print Preview.</para>

  <sect1>
    <title>Obtaining and Installing Denemo</title>

    <para>Denemo is available from a variety of sources for different
    distributions. The latest stable release (tar.gz and .deb formats) is
    available for download from <ulink
    url="http://download.savannah.gnu.org/releases/denemo/"></ulink>. You can install
    Denemo from the Debian unstable repositories, using the command apt-get
    install denemo. Builds for Macintosh are available from the Gnu-Darwin
    project. The Denemo development branch can be downloaded using anonymous
    CVS or Git.</para>
	    <para>Anonymous Git checkout:</para>

	    <para>git clone git://git.savannah.gnu.org/denemo.git</para>
    
	    <para>Anonymous CVS checkout:</para> 
	    <para>cvs -d:pserver:anonymous@pserver.git.sv.gnu.org:/denemo.git co -d denemo master</para>
 

  </sect1>
    <sect2>
      <title>Dependencies</title>

      <para>To build Denemo from a source package, the following
      dependent packages should be installed first. Remember to install the
      development packages as well (check your distribution for the specific
      package name):<note>
          <title>For Debian Users</title>

          <para>Type <command>apt-cache showsrc denemo</command> at a command
          line to determine what are the package names for Denemo
          dependencies. Type <command>apt-get build-dep denemo</command> to
          build the dependent files or use apt-get to install the packages
          individually by copying and pasting there names to the command
          line.</para>
        </note></para>

      <itemizedlist>
        <listitem>
          <para>g++ 2.95 or higher</para>
        </listitem>

        <listitem>
          <para>flex 2.5.4a or higher</para>
        </listitem>

        <listitem>
          <para>bison 1.35 or higher</para>
        </listitem>

        <listitem>
          <para>cdbs</para>
        </listitem>

        <listitem>
          <para>gettext</para>
        </listitem>

        <listitem>
          <para>libgtk2.0-dev</para>
        </listitem>

        <listitem>
          <para>gtk+ 2</para>
        </listitem>

        <listitem>
          <para>libglib2.0-dev</para>
        </listitem>

        <listitem>
          <para>libxml2</para>
        </listitem>

        <listitem>
          <para>libxml2-dev</para>
        </listitem>

        <listitem>
          <para>LilyPond 2.4</para>
        </listitem>

        <listitem>
          <para>autoconf 2.59 or higher</para>
        </listitem>

        <listitem>
          <para>automake1.7</para>
        </listitem>

        <listitem>
          <para>libaubio</para>
        </listitem>
        <listitem>
          <para>libfftw3-dev</para>
        </listitem>

        <listitem>
          <para>libportaudio</para>
        </listitem>


      </itemizedlist>
    </sect2>

    <sect2>
      <title>Optional Includes</title>

      <para>Denemo uses other applications for  playback and printing. You may need to install the following applications, and edit the preferences menu to tell Denemo which you want it to use.</para>

      <itemizedlist>
        <listitem>
          <para>csound (optional, www.csounds.com)</para>
        </listitem>

        <listitem>
          <para>A PDF viewer (ghostview, evince etc)</para>
        </listitem>

        <listitem>
          <para>A midi player such as timidity</para>
        </listitem>
	<listitem>
          <para>An image viewer such as EOG</para>
        </listitem>

      </itemizedlist>
    </sect2>

    <sect2>
      <title>Installing Denemo from Source Code</title>

      <para>Denemo is available in a variety of formats. The current stable
      release is available either as source code or in binary format. The
      Development branch of Denemo is available as a GIT source tree.</para>

      <procedure>
        <title>To install from source code:</title>

        <step>
          <para>Open a terminal window.</para>
        </step>

        <step>
          <para>Change directories to the directory to which you downloaded
          the Denemo source package.</para>
        </step>

        <step>
          <para>Uncompress the source package using standard Linux tools (tar
          and gunzip).</para>
        </step>

        <step>
          <para>Change directories to the uncompressed directory.</para>
        </step>
      </procedure>

      <procedure>
        <title>Generating a Configure Script</title>

        <para>Git does not come with a Configure script; generate one by
        typing and pressing Enter after the line:</para>

        <step>
          <para>./autogen.sh</para>
        </step>
      </procedure>

      <sect3>

        <procedure>
          <title>To compile from source, press Enter after each line:</title>

          <step>
            <para>./configure.</para>
          </step>

          <step>
            <para>make.</para>
          </step>

          <step>
            <para>make install.</para>
          </step>

          <step>
            <para>If you are not logged in as root user, type su and your root
            password, or alternately type sudo and your user password.</para>
          </step>
        </procedure>
      </sect3>
    </sect2>
  </sect1>

  <sect1>
    <title>Getting Started</title>
     <para>Most people will start with playing around with Denemo via the pc keyboard. The default setup means that keys a-g represent the note names and 0-6 the different durations (whole note, half note etc). When the cursor is on blank space pressing key "0" then key "a" will append a whole-note A, pressing "1 b" will append a half-note B etc. If the duration is not changing you can simply type the note name, it will use the last entered duration. If you do type a duration it appears as a pale yellow note at the cursor until you have given it a note name. 
</para>
<para>When the cursor is moved on to a note (with the arrow key right or mouse) then a-g edits the note name. To insert a note before a note at the cursor use A-G. When the cursor is on a note the keys 0-6 change the duration of the note, while Shift-0 6 insert a note before the cursor. (If you use the numeric keypad you can use Shift-KP 0-6 for this).  The arrow keys move the cursor around, the period key adds a dot while Alt-a-g add notes to the chord at the cursor.
 </para>
     <para>You can find more shortcuts by exploring the menu system - e.g. under the Notes/Rests menu the Select Duration submenu gives Remove Dot with the shortcut Control-period shown next to the command.
 </para>
 <sect2>
<title>What Happens at Startup</title>
    <para>On starting a Denemo up to two music scores (called init.denemo) are loaded, and any actions associated with them are run. The first of these is provided with the system and does essential initialization, the second you can provide yourself in the file ~/.denemo/actions/init.denemo (where ~ means your home directory).
</para>
    <para>In addition, on startup a set of keyboard and mouse shortcuts, and a selection of optional menu items are loaded. You are offered a choice on startup. Once you have settled on the set you wish to use, and perhaps started to customise it you can save it for next time using "Save as Default Command Set" in the command set manager.
<note>
You should exit and re-start Denemo after creating a new command set to be sure of getting your keybindings to work.
</note>
<note>
The "Score Titles, Controls etc" checkbox is undocumented, unfortunately.
What it does is to show/hide a button bar where Titles and such can be displayed.
The menu items you need are under Score->Titles etc
and Movement->Titles etc. When you set a title, composer, etc the Titles etc button bar will become populated.
</note>
<note>
The Playback Controls are undocumented, unfortunately. Mostly obvious commands, the lerft/right arrows move the start and end playback point forwards and backwards, while the up/down arrows set the start and end playback points to the current cursor position.
See the links from the features list "To-do List" on the website.
</note>

</para>
 </sect2>
 <sect2>
<title>Some Common Keyboard Shortcuts</title>
<para>Here are a few of the keyboard shortcuts that are commonly used in Denemo.
    <itemizedlist>
      <listitem>
      Letters a-g edit the note at the cursor to be A-G, if the cursor is in the appending position then notes are added. Letters A-G (either caps lock or shift) insert a note at the cursor. 
      </listitem>
      <listitem>
      Numbers 0-6 are used to refer to the note durations Whole Note ... 64th Note. They insert a duration at the cursor, which you then give a pitch to with a note name. With the shift key held (or the CapsLock on) 0-6 edits the duration of the note at the cursor. The corresponding Numeric Keypad keys can be used instead.
      </listitem>
      <listitem>
      "." dots a note, Ctrl-"." undots it.
      </listitem>
      <listitem>
      Alt-0-6 inserts a rest.
      </listitem>
      <listitem>
      Alt-a-g Add notes to a chord. Or position the cursor and use Insert to add a note, Ctrl-Insert to remove it. 
      </listitem>
      <listitem>
      7 starts a slur, 8 extends it, while 9 reduces it.
      </listitem>
      <listitem>
      Shift-/ inserts a cautionary accidental
      </listitem>

    </itemizedlist>
</para>
 </sect2>
 <sect2>
<title>Some Common Mouse Shortcuts</title>
<para>Here are a few of the mouse shortcuts that are commonly used in Denemo.
    <itemizedlist>
            <listitem>
      Scroll Wheel pans up/down to bring staffs out of view into the window.
      </listitem>
            <listitem>
      Shift Key and Scroll Wheel pans the score left/right.
      </listitem>
            <listitem>
      Control Key and Scroll Wheel zooms.
      </listitem>
      <listitem>
      Shift Key and Left mouse button drags notes up and down.
      </listitem>
     
      <listitem>
      CapsLock AND Shift key with Left mouse drag inserts a crescendo
      </listitem>
      <listitem>
      CapsLock AND AltGr key with Left mouse drag inserts a diminuendo
      </listitem>
    </itemizedlist>
</para>
 </sect2>
    <para>Denemo is used via the computer keyboard, MIDI controller or playing in via a musical instrument. Quite a few mouse operations are also included by default. Clicking on the score will select items, and the status bar at the bottom will describe the item clicked. Right-clicking on items in the score allows you to edit any special attributes, (called Directives, see <xref linkend="DenemoDirectives" />), that they may have. Clicking on the initial clef, key or timesignature lets you edit these, clicking to the right or left of the measures visible moves you forwards and backwards in the score.  Selections can be made by dragging with the mouse from one note to another. And right-clicking any menu item gets help and the opportunity to set a shortcuts for the menu item. Furthermore, scripts are available in the menu system that give the mouse further uses.</para>
 </sect1>
  <sect1>
    <title>Overall View of Denemo</title>
  <sect2>
    <title>General Concepts</title>
    <para>
    The unit of work in Denemo is a musical score, which can be saved in a single file (with .denemo suffix). This is represented on the screen by a "tab". If you have several tabs open at once they appear just above the music in the main window, and you can switch between them by clicking on the tab.
 </para>
    <para>
    One score may contain several movements, which you can move between, insert and delete with the Movements menu. A movement is a continuous piece of music with titles etc.
 </para>
    <para>
    Within a movement there are staffs (arranged vertically) and within the staffs Denemo Objects. These can be notes, chords and Denemo Directives (see  <xref linkend="DenemoDirectives" />). The notes and chords are displayed in conventional format (though not fully typeset). The Denemo Directives are used for most things that are not chords or notes: Metronome marks, repeat barlines etc are good examples. They can also be attached to chords, individual notes in a chord, to a staff as a whole and to the score as a whole; in this case the directive can be thought of as an attribute of the object it is attached to. Each Denemo Directive carries its own display method. For example the Close Repeat barline appears as a Denemo Object in the converional music notation, while a Directive attached to a staff (e.g. Smaller Staff) may appear in a menu under a tools icon to the right of the staff. In the case of "Smaller Staff" the directive directs the LilyPond typesetter to make the staff smaller, and it can be edited from the menu under the tools icon to the left of the clef. Another tools icon appears if directives are attached to voices within a staff, again to the left of the clef, below the staff one.
</para>
    <para>
    The command Edit Object gives access to editing Denemo Directives, which generally have their own edit methods. You can use the Print View to indicate the padding that you wish to apply to some item, or to show where you want to drag it to.
    </para>
    <para>
    The titles of the current movement can be set in the movement menu, and for the whole score in the score menu. In the movement menu you can cause a page break before the movement.
    </para>


         <note>
            <para>When a file is loaded it opens at the point where you left off editing it.</para>
          </note>
  </sect2>
  </sect1>
  <sect1>
    <title>The Denemo Window</title>
    <figure>
      <title>Main Window</title>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/denemomain.png" />
        </imageobject>
      </mediaobject>
    </figure>
<para>
The main window has menus and toolbars at the top. The Titles Etc appear next, along with any extra menu items which you may have placed there (e.g. the Print Part button). With View->Score View checked there is next the drawing area where the music input is displayed. When zoomed out you see just the few measures you are working on. By dragging the red bar at the bottom of the score upwards you get space for more of the music. If you have many staffs they may not all fit: you can still drag the red bar upwards to see several lines of just one or two staffs for instance. With View->Print View checked there is another pane showing the print preview of your score. Below this is a "Console Pane" showing any LilyPond messages while typesetting the music. At the bottom is a status line showing which movement you are in and what sort of object the cursor is on. If there are any MIDI filters that active they will be noted at the right in the status bar. The small colored rectangle is the Denemo Cursor, which shows where notes etc will be added/edited next. Selected music on a blue background.
</para>
<para>
The menus in Denemo are unusual: they not only let you do some particular action, but also each menu item lets you enquire what the action does in more detail and lets you set keyboard/mouse shortcuts for the actions. All this extra functionality &amp; more comes with right-clicking the menu item, while the usual left click is for executing the action itself. The menus can always be torn off for working with particular items (e.g. working with different movements or with measures, dynamics etc.). Also available by right-clicking is creating new actions - often by modifying ones that are already there.
</para>
  </sect1>
  <sect1>
    <title>The Print Preview Pane</title>
 <para>The print preview pane is shown by checking View->Print View. Right clicking in this pane allows you to refresh the print preview (the program hangs waiting for LilyPond to finish).</para>
 <para> Right clicking in this pane also allows you to choose offsets to apply to items that LilyPond has positioned badly.Or you can select an amount of padding to apply to some object. This is generally a better way of indicating that it is too close to something else, since other objects will move away from it as needed - that is, if you later edit something it will behave more intelligently. The actual editing is always done in the Score View pane, choosing Edit Object while the cursor is on the offending object and then dragging in the Print Preview window to indicate the amount of change required.</para>
  </sect1>
  <sect1>
    <title>The Main Menubar</title>


    <para>The Main Menubar has submenus for overall control of the program. It
    contains the following submenus:</para>

    <itemizedlist>
      <listitem>
        <para>File</para>
      </listitem>

      <listitem>
        <para>Navigation</para>
      </listitem>


      <listitem>
        <para>Edit</para>
      </listitem>

      <listitem>
        <para>View</para>
      </listitem>

      

      <listitem>
        <para>Mode</para>
      </listitem>

      <listitem>
        <para>Input</para>
      </listitem>

 

 

      <listitem>
        <para>Playback</para>
      </listitem>
      <listitem>
        <para>More</para>
      </listitem>

      <listitem>
        <para>Help</para>
      </listitem>


      <listitem>
        <para>Educational</para>
      </listitem>


    </itemizedlist>

    <sect2>
      <title>File</title>

      <para>Use the <guimenu>File</guimenu> menu to perform global operations related to storing and retrieving from file systems.
      The File menu contains the following Menu Items:</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Menu Item</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>New</entry>

              <entry>Create score from scratch.</entry>
            </row>

            <row>
              <entry>Open</entry>

              <entry>Open an existing <productname>Denemo</productname>
              file.</entry>
            </row>
            <row>
              <entry>Add Staffs</entry>
              <entry>Open an existing <productname>Denemo</productname>
              file and append the staffs from the (first) movement of it to the staffs in the current movement.</entry>
            </row>
            <row>
              <entry>Add Movements</entry>
              <entry>Open an existing <productname>Denemo</productname>
              file and append the movements from it to the current score.</entry>
            </row>

            <row>
              <entry>Open Recent</entry>

              <entry>Open a file recently edited.</entry>
            </row>

            <row>
              <entry>Open Standard Template</entry>

              <entry>Create score from a stock template.</entry>
            </row>
            <row>
              <entry>Open from Gallery</entry>

              <entry>Create score from an example in the Gallery.</entry>
            </row>

            <row>
              <entry>Open Custom Template</entry>

              <entry>Create score from a template you have saved.</entry>
            </row>

            <row>
              <entry>New Window</entry>

              <entry>Open another instance of
              <productname>Denemo</productname>.</entry>
            </row>


            <row>
              <entry>Open in New</entry>

              <entry>Open an existing <productname>Denemo</productname> file
              in a new tab (or "page") so that both can be used at once.</entry>
            </row>

            <row>
              <entry>Save</entry>

              <entry>Save the current file.</entry>
            </row>

            <row>
              <entry>Save As</entry>

              <entry>Save the current file with a new name.</entry>
            </row>

            <row>
              <entry>Save Parts</entry>

              <entry>Saves a set of parts (staves) in LilyPond format.</entry>
            </row>

            <row>
              <entry>Export PDF</entry>

              <entry>Run LilyPond on the current file to create a PDF.</entry>
            </row>

            <row>
              <entry>Print</entry>

              <entry>Displays the score in a pdf view, from which it can be printed.</entry>
            </row>
	    <row>
              <entry>Print excerpt</entry>

              <entry>Displays only the selection in image viewer, from which it can be saved.</entry>
            </row>

	    <row>
              <entry>Print Current Part</entry>

              <entry>Displays one part taken from the score in a pdf view, from which it can be printed.</entry>
            </row>
            <row>
              <entry>Score Wizard</entry>

              <entry>Open a<guilabel> Score Setup Wizard.</guilabel></entry>
            </row>

            <row>
              <entry>Close</entry>

              <entry>Close the current score but keep other
              <productname>Denemo</productname> scores open.</entry>
            </row>

            <row>
              <entry>Quit</entry>

              <entry>Close the current scores and exit
              <productname>Denemo</productname>.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect2>

    <sect2>
      <title>Edit</title>

      <para>Use the <guimenu>Edit</guimenu> menu to access common editing
      commands.</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Menu Item</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Undo</entry>

              <entry>Undo the pitch and rhythm just added.</entry>
            </row>

            <row>
              <entry>Redo</entry>

              <entry>Redo the pitch and rhythm just added.</entry>
            </row>

            <row>
              <entry>Select</entry>

              <entry>Menu items for selecting music in the score.</entry>
            </row>


            <row>
              <entry>Cut</entry>

              <entry>Copy the selected notation to the clipboard and delete
              the selection.</entry>
            </row>

            <row>
              <entry>Copy</entry>

              <entry>Copy the selected notation to the clipboard.</entry>
            </row>

            <row>
              <entry>Paste</entry>

              <entry>Paste the copied notation at the cursor point.</entry>
            </row>
            <row>
              <entry>Paste LilyPond Notes</entry>

              <entry>Paste text as LilyPond notes. Open a .ly file in a text editor, copy some notes and then execute this command to capture them into Denemo.</entry>
            </row>


            <row>
              <entry>Edit Object</entry>

              <entry>A general interface to editing whatever is at the cursor, especially Directives attached to notes/chords.</entry>
            </row>

            <row>

              <entry>Change Preferences</entry>
              <entry>Set external programs (LilyPond, PDF viewer etc.), autosave interval etc. These values will bre remembered when you re-start the program</entry>
            </row>

            <row>
              <entry>Customize Commands, Shortcuts...</entry>
 
            </row>
            <row>
              <entry>Quick settings checkbox
</entry> <entry>One touch setting of keyboad shortcuts</entry>
            </row>
            <row>

	      <entry>Save Command Set.</entry> <entry> Save your current customization of the menu commands and shortcuts.</entry>
            </row>
            <row>
	      <entry>Manage Command Set.</entry> <entry> Hide/Delete/Show menu items, set keyboard shortcuts, set cursor shapes, load/save all these.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect2>

    <sect2>
      <title>View</title>

      <para>Use the <guimenu>View</guimenu> menu to toggle toolbars and
      palettes used with the mouse.</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Menu Item</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Score View</entry>

              <entry>Shows the score in panorama format for editing. The printed score will generally look different.</entry>
            </row>

            <row>
              <entry>Print View</entry>

              <entry>Shows the score as engraved by the LilyPond typesetter. You cannot edit in this window, but you can drag items to indicate how you want an item edited.</entry>
            </row>
            <row>
              <entry>Lyrics View</entry>

              <entry>Shows any lyrics for the current staff/voice. Each verse has its own tab, when selected the lyric placement shows in the Denemo display, so you can adjust by typing in the lyrics view window</entry>
            </row>

            <row>
              <entry>Rhythms Patterns</entry>

              <entry>Allows custom rhythm patterns. Enter rhythms by setting up patterns and then overlay the rhythms with pitches via MIDI or microphone</entry>
            </row>

            <row>
              <entry>Note and Rest Entry</entry>

              <entry>Notes and rests buttons – the highlighted button is current duration – click a button to enter a note/rest, or to edit the note under the cursor in edit mode</entry>
            </row>

            <row>
              <entry>Articulation Palette</entry>

              <entry>A (limited) palette of expression marks etc to apply to notes. More are in the menu system under Markings.</entry>
            </row>

            <row>
              <entry>Score Titles, Controls etc</entry>

              <entry>If this is checked any Titles, indent settings etc applying to the score can be shown as buttons at the top of the score. They must be created with their graphic field set for this.</entry>
            </row>

              
            <row>
              <entry>Menu of Objects</entry>

              <entry>Menu of all the Denemo commands listed under type of object</entry>
            </row>


            <row>
              <entry>Show LilyPond</entry>

              <entry>Pops up a window for customizing the LilyPond</entry>
            </row>

            <row>
              <entry>Show Scheme Script</entry>

              <entry>Pops up a window for showing scripts written in scheme to control Denemo</entry>
            </row>

          </tbody>
        </tgroup>
      </informaltable>
    </sect2>



     <sect2>
      <title>Input</title>
       <para>Choose whether to use external sources (Audio from the Mic input or MIDI) for Denemo. To use these you may need to review the settings in Edit->Prefs first.</para>
   </sect2>
  
    <sect2>
      <title>More</title>
       <para>Add commands to Denemo. Extra commands are available (those which not everyone will want) via this menu. More Commands gives commands shipped with Denemo, while My Commands gives ones that you have created locally. Note that the extra commands can also be loaded at the menu where you are looking for them (you right-click on a menu item, and if there are more commands for that menu the More Commands for this Menu item will show),</para> <para>
Update Commands from the Internet allows you to get the latest versions of commands directly from ftp://denemo.org. They are stored in the .denemo/download directory in your home directory. You can set a preference to have this happen in the background every time you start Denemo, if you prefer.
</para>
   </sect2>

    
   
    <sect2>
      <title>Playback</title>

      <para>Use the Playback menu to start playback of your score. Denemo lets
      you hear your score, using an external MIDI player, or Csound.</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Menu Item</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Play</entry>

              <entry>Plays from the start marker to the end marker</entry>
            </row>
           <row>
              <entry>Stop</entry>

              <entry>Stops the playback</entry>
            </row>

            <row>
              <entry>Play Using Csound</entry>

              <entry>Play this score (Csound) using .orc file specified in
              <guisubmenu>Playback Properties</guisubmenu>.</entry>
            </row>

         
          </tbody>
        </tgroup>
      </informaltable>
    </sect2>

    <sect2>
      <title>Help</title>

      <para>Use the Help menu to get help using Denemo.</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Menu Item</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Help</entry>

              <entry>Launch a browser to view this manual.</entry>
            </row>
           <row>
              <entry>Chat to Other Users</entry>

              <entry>Connects you to a site with other users to give advice.</entry>
            </row>

            <row>
              <entry>About</entry>

              <entry>View Denemo version information.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect2>
   </sect1>

    <sect1>
      <title>Toolbar</title>

      <para>Use the Toolbar to access common Denemo commands quickly. The Tool
      Bar contains the following icons:</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Icon</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/new.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Creates a new document.</entry>
            </row>
	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/scorewizard.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Creates a new document using the score wizard.</entry>
            </row>
	    
	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/open.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Opens the Open File dialog box.</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/save.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Saves the current file</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/print.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Runs LilyPond to convert the current file to PDF and
              sends it to the printer for printing</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/undo.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Undoes the last action. (Currently Undo only works for
              adding notes)</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/redo.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Redoes the previous undo action. (Currently Redo only
              works for adding notes).</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/cut.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Cuts the current selection to the clipboard.</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/copy.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Copies the selected notation to the clipboard.</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/paste.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Pastes the current clipboard item at the cursor
              position.</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/gotobegin.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Jumps to the first measure of the movement.</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/gotoend.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Jumps to the last measure of the movement.</entry>
            </row>

 
          </tbody>
        </tgroup>
      </informaltable>
  </sect1>


    <sect1>
      <title>Playback Controls</title>
<mediaobject>
                  <imageobject>
                    <imagedata fileref="images/playbackcontrols.png" />
                  </imageobject>
                </mediaobject>
      <para>Use this frame to control MIDI playback of the current movement. It has  the following controls:</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Icon</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/first.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Runs DenemoFirst script.</entry>
            </row>

	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/goback.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Runs DenemoGoBack script.</entry>
            </row>

	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/goback.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Moves the start playback position backwards. Runs DenemoGoBack script.</entry>
            </row>

	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/goup.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Sets start playback position to cursor. Runs DenemoStartToCursor script.</entry>
            </row>


	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/next.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Moves the start playback position forwards. Runs DenemoNext script.</entry>
            </row>

	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/rewind.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Runs DenemoRewind script.</entry>
            </row>


	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/stop.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Runs DenemoStop script.</entry>
            </row>
	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/play.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Runs DenemoPlay script.</entry>
            </row>

	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/record.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Starts playing back while recording from MIDI-in.(Runs DenemoRecord scriptto do this).</entry>
            </row>


	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/forward.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Moves the end playback position backwards.Runs DenemoGoForward script.</entry>
            </row>
	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/down.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Sets the end playback position to the cursor.Runs DenemoEndToCursor script.</entry>
            </row>
	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/last.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Moves the end playback position forwards. Runs DenemoLast script.</entry>
            </row>
	    <row>
              <entry>Loop</entry>
              <entry>Runs DenemoLoop script.</entry>
            </row>

	    <row>
              <entry>Reset</entry>
              <entry>Internal Synth only. Performs a reset on the synth.</entry>
            </row>
	    <row>
              <entry>Panic</entry>
              <entry>Jack only. Emits jack panic.</entry>
            </row>

	    <row>
              <entry>Set from Selection</entry>
              <entry>Sets the selection to be the start/end. Note first use in a session is buggy.</entry>
            </row>
	    
	    <row>
              <entry>Tempo</entry>
              <entry>For movements with a single tempo this tempo is changed for rest of the playback. If the movement has an embedded MIDI tempo change, the change will be altered proportionally. The movement tempo setting itself is not altered - you are just altering the playback.(See next button or Movements->MIDI Tempo for setting that)</entry>
            </row>
	    <row>
              <entry>Set Tempo</entry>
              <entry>Sets the overall tempo of the movement to the value fixed by the Tempo slider</entry>
            </row>
	    
	    <row>
              <entry>Volume</entry>
              <entry>Reduces the current volume by the % set. Again, this applies only to playback and proportionally affects embedded dynamics.</entry>
            </row>
	    <row>
              <entry>Set</entry>
              <entry>Calls the DenemoSetPlaybackIntervalToSelection script.</entry>
            </row>
	   
	   
          </tbody>
        </tgroup>
      </informaltable>
  </sect1>


    <sect1>
      <title>Midi In Controls</title>
<mediaobject>
                  <imageobject>
                    <imagedata fileref="images/midiincontrols.png" />
                  </imageobject>
                </mediaobject>
      <para>Use this frame to control MIDI input to the current movement. It has  the following controls:</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Icon</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
	    
	    <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="images/enharmonicselection.png" />
                  </imageobject>
                </mediaobject></entry>

              <entry>Sets the end sharps and flats to use.</entry>
            </row>
	   
	      <row>
		<entry>MIDI-&gt;Score</entry>
              <entry>Directs the MIDI in to the score or to a MIDI recorder. The MIDI recorder is active when Record button is pressed. When you wish to return to score editing, this button re-directs MIDI-in to the score.</entry>
            </row>
	   
            <row>
		<entry>Delete</entry>
              <entry>Deletes your MIDI recording.</entry>
            </row>
	   
           <row>
		<entry>Convert</entry>
              <entry>Converts your MIDI recording to Notation. Not yet at all practical!</entry>
            </row>
	   
	      
	      
	   
	   
          </tbody>
        </tgroup>
      </informaltable>
  </sect1>

  <sect1>

      <title>Object Menu</title>

      <para>The object menus give you actions (such as insert, delete ...) ordered by the objects (notes, staffs, measures ...) that they act on.</para>

      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Menu Item</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Score</entry>
              <entry>Settings that apply to the whole score.</entry>
            </row>
            <row>
              <entry>Movements</entry>
              <entry>Insert/remove navigate, change the properties of movements.</entry>
            </row>
            <row>
              <entry>Staffs/Voices</entry>
              <entry>Insert/remove, navigate, swap, change the properties of staffs or voices</entry>
            </row>
            <row>
              <entry>Measures</entry>
              <entry>Insert/remove navigate measures .</entry>
            </row>           
            <row>
              <entry>Notes/Rests</entry>

              <entry>The first menu item in this menu depends on which mode you have chosen. For example in Classic mode there is a function to move the cursor to a new note while in Insert mode the function inserts a note of the given name. These menu items are present mainly to allow you to set shortcuts – it would be too slow to use them for actually entering notes/rests. I addition there are menu items for inserting rests, deleting, tied notes, setting the notehead style and stem direction, grace notes, triplets, transposing and more </entry>
            </row>
            <row>
              <entry>Chords</entry>
              <entry>Insert/remove notes from a chord.</entry>
            </row>
            <row>
              <entry>Clefs</entry>
              <entry>Insert change or set the initial clef.</entry>
            </row>
            <row>
              <entry>Keys</entry>
              <entry>Insert a change or set the initial key.</entry>
            </row>
            <row>
              <entry>Time Signatures</entry>
              <entry>Insert a change or set the initial time signature.</entry>
            </row>
            <row>
              <entry>Markings</entry>
              <entry>Insert/remove tempo indications, dynamics, slurs, trills etc.</entry>
            </row>
            <row>
              <entry>Cursor</entry>
              <entry>Navigation of the (Denemo) cursor.</entry>
            </row>
            <row>
              <entry>Bookmarks</entry>
              <entry>Create/delete or move to bookmarked positions in the current movement.</entry>
            </row>
            <row>
              <entry>Lyrics</entry>
              <entry>Create and delete lyrics.</entry>
            </row>

            <row>
              <entry>Other</entry>
              <entry>Enter chord symbols, figured basses or LilyPond directives. Clear overlays.</entry>
            </row>

          </tbody>
        </tgroup>
      </informaltable>

  <sect2>
    <title>Score</title>

    <para>
    In the score properties dialog things that affect the whole piece can be set, as well as the titles of the current movement. In the score properties dialog you can include directives to apply to all the movements.
    </para>

         <note>
            <para>When a file is loaded it opens with the final movement set as the current movement.</para>
          </note>
  </sect2>


  <sect2 revision="0.75">
    <title>Adding Markings</title>

    <para>Dynamics, Slurs, Trills, Tempo Indications, and much more a found in the Markings menu </para>
    <para>You can collect together your favorite ones, either by assigning shortcuts, or creating a menu of favorite commands which just invoke the action you use. </para>
   
    <procedure> 
      <title>Adding Markings using the Articulation palette</title>
       <para>Some ornaments and articulations have been collected together as a palette. </para>
      
      <example id="expressions_palette">
        <title></title>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/expressions_palette.png" />
          </imageobject>
        </mediaobject>
      </example>

     
  </procedure> 
 
  </sect2>

  </sect1>


 <sect1>
    <title>Music Snippets</title>
    <para>The Music Snippet toolbar lets you keep a number of snippets of music for pasting into your score. You can enter notes following a rhythmic pattern of a snippet. If you have a pattern in your music that appears many times you only need to type it once. By selecting it and clicking Create Snippet you install that snippet on the toolbar. Then as you enter notes (in Insert Mode) the notes follow the rhythmic pattern chosen. Pressing a duration key goes back to adding notes of the prevailing duration. You can have several snippets like this and switch between them using the space bar (or other keybinding of your choice). Another (more musical) way of entering rhythms is to "drum" them in using the keys on the computer keyboard for quarter-note, eighth-note etc, a curious sort of "musical instrument" where you change key for different durations. Use the numeric keypad for this. Drumming in is quickly learnt and, by playing in the notes rhythmically you can keep your place in the music. Use the immediate feedback option for this, so that you get a bell to confirm when you have completed a measure.</para>
 <para>Using Input->Midi or Audio allows you to enter pitches directly. If you have entered your piece of music as pure rhythm you can overlay with the pitches using a MIDI controller or musical instrument with mic, headphones out or pickup attached to your soundcard.
</para>

  </sect1>
  <sect1>
    <title>Playing Notes into Denemo - MIDI</title>

<para>
    Denemo can take pitches directly from MID input. Select Input->Midi Input. The control window allows you to choose the enharmonic range. Under Mode->MIDI are various "MIDI filters" that allow you to control how the MIDI input is used: with none active the behaviour is as if you had entered the notes using the pc-keyboard (except that octave, accidental and note name are all entered in one go). You can also use Advance on Edit to put the pitches onto pre-entered rhythms, or Check Pitches (where you play through the piece and a warning is issued if you hit a wrong note).
</para>
<para>
   These MIDI filters are scheme scripts, so they can be tailored to do whatever you wish. One example is a filter that enables you to enter Figured Bass figures by playing the notes corresponding to the figures while holding down the bass note. Chords could be entered using similar code.
</para>
  </sect1>
  <sect1>
    <title>Playing Notes into Denemo - Audio (Souncard Mic Input)</title>

<para>
Denemo can listen for, and detect the pitch of notes on the mic input of the computer; it doesn't attempt to guess the rhythm - such systems do not work well - but you will find that playing the notes in time will help you to play them in, as well as make playing them in a musical experience rather than a chore.
</para>

 <para>Playing the notes in can be much quicker than using the keyboard since the note octave and accidental are all given just by playing the note. If you are able to play a musical instrument then this will probably be much faster for you than typing note names, octave shifts and accidentals at the computer keyboard. Using the headphones out of an electronic keyboard avoids "noises-off" interfering with the pitch detection. Many microphones and pickups benefit from some pre-amplification - it is worth getting the level right before you begin.</para>

<para>When you select the Input->Audio on the Main Menu the Pitch Recognition window pops up. While the mouse pointer is inside the score drawing area the score is sensitive to pitches heard via the microphone input. The background colour of the score changes to show that the notes will be entered into the score. </para>
<para>There are two ways of using the pitch entry - Overlay mode (default) and Insert mode. The button marked Insert causes notes to be entered into the current measure in the prevailing rhythm - the mode is set to Insert for this. The button marked Overlays overlays the notes already present with the pitches you sound. There is a third button, marked Tuning, which is a state-of-the art musical instrument tuner.</para>
<para>
Music is entered into the measure which holds the cursor. If you are overlaying a rhythm already entered, then the first un-overlayed note in the measure is overlayed by the note detected. You can delete the overlay using the regular delete keys, or clear them altogether if you want to start over in a measure. If you are in Insert mode then the notes detected will be inserted at the cursor position.
</para>
<para>Use the enharmonic shift to select whether Bb or A# should be entered when you enter the given pitch - you can usefully go as far as B# and Fb.</para>
<para>Use the transpose control to shift up or down by octaves.</para>
 <para>Most of the other settings would require study of the Aubio documentation to understand, but the one marked threshold may be useful to make the detection less sensitive to ambient noises if using a microphone with an acoustic instrument.</para>
<para> The best set-up is to plug the headphones-out socket of an electronic keyboard into the mic input, and choose a piano setting on the electronic keyboard.</para>
<para> If you don't have any musical instrument that you can plug directly into the mic in, then you can use an acoustic instrument with a microphone, in which case move your microphone closer or further from your instrument to get reliable detection. Too close and you get double detections, too far and you get missed ones. To check for good detection open a piece of music, set Overlay mode and put the cursor in the first measure and play the piece in – the notes should all turn blue if you have perfect detection. It is worth while getting perfect detection – more than one or two miss-detects per piece of music and you may want to use the Insert rather than the Overlay method.</para>
  </sect1>

  <sect1>
      <title>A Survey of the Input Methods</title>
    <sect2>


      <subtitle>Introduction</subtitle>
      <para>
      Denemo allows you to explore all the actions (insert/delete/edit/navigate...) using the menus. So, for example, inserting notes can be found under Notes/Rests while inserting a Staff comes under Staffs/Voices.
<note> When you have found the action you need you can right click on the menu item to get an explanation of the action and to view/set a key press- a keyboard shortcut - to activate the action. If you are setting a lot of keyboard shortcuts for menu items you can check the Edit->Keyboard Setup->Allow Quick Shortcut Edits button, whereupon you can set the keyboard shortcut just by pressing the desired key while the menu item is selected. In addition you can customize the mouse actions to initiate commands, and set the cursor that will show while certain mouse conditions apply.
</note>
      </para>
      <para>Denemo offers several ways of entering music: typing at the keyboard, playing in via a MIDI keyboard (controller), playing in acoustically using a microphone or choosing items from the menu system. </para>
      <para>Using the menus for everything would be very slow, but next to each menu item is the keypress that you can use instead. If there is no keypress shown, and you want to use that item often, then right click on the menu item and you can set a key combination for that menu action. Right clicking is also useful for getting a description of what the menu action is. </para>
      <para> Typing at the keyboard can be very fast, if you forget which keypress you need you can consult the menu system to find out. This method is good for touch typists.
      </para>

      <para role="persom">For entering a lot of already written-out music, playing the music in via a MIDI keyboard or microphone can offer the fastest and most musical method. </para>
      <para>One way to do this is enter the music as pure rhythms, ignoring the note names. The durations show as pale yellow notes. Each duration sounds its own pitch and length as you enter the durations. As you start each measure the bell will sound so that you can keep your eyes on the score you are copying without needing to look up and check that you haven't miss-typed. If you are a reading musician you will find that you tap in the rhythm rhythmically which helps to keep your place in the piece you are entering. </para>
      <para>Once you have entered the rhythms you choose an external source from the Input menu, placing the cursor in the first measure, play the notes via MIDI or a microphone plugged into the mic input of your soundcard. When you play notes in via MIDI they give their pitches to the rhythm you have notated. By this means you can enter a piece of music in the time taken to play it twice - once to give the rhythm and once to give the pitches. If the piece modulates strongly you may need to shift the set of accidentals used to match the score.
</para>
 <para>
The Audio Input button introduces a special entry mode where the pitches you play in will overlay the rhythm, appearing as blue notes. You can delete any wrong pitches using the usual delete keys, without deleting the rhythm. In fact if you have an "interloper" (an extra spurious note) you can delete it and the other pitches will all move along to their correct places.</para>



      <para>Another method of playing music in acoustically doesn't involve entering the rhythm separately. For this select Input->Audio and then choose Insert instead of Overlays on the Pitch Recognition Panel that pops up. With Insert the sounded notes are entered as in the prevailing rhythm. The same applies if you have MIDI, only you just need to select Insert mode to enter the notes in that case. So by choosing a rhythm (e.g. half-note, quarter-note, or a custom rhythm pattern) and playing in the pitches you can enter the music into a blank score.</para>
      <para> For MIDI input there are special modes (MIDI filters), such the "AngryDelete" filter. With this filter on notes are entered normally until, but if you make a mistake and press the wrong note just hit the next one much louder and it will make the correction for you! MIDI filters are found under Input-&gt;MIDI</para>
      <para>The oldest Denemo keymaps are no longer supported. (see <xref linkend="customizingDenemo" />). (Input via
      MIDI keyboard and Mic in is now available). Denemo shortcuts also work on Numeric Keypad.</para>

      <sect3 id="scoresetup">
        <title>Score Setup</title>

	<para>Denemo provides different ways to set up scores: <itemizedlist>
            <listitem>
	    <para>Create template with the special name "default.denemo". If this is placed at the top level of your templates directory (that is ~/.denemo/templates/default.denemo), then it will be opened each time you start a new score. </para> </listitem>
            <listitem>
              <para>Create an init.denemo  score with everything you want to start up with, and any actions you want to be taken before you begin. This will be opened when you first start Denemo (that is once per Denemo session). See <xref linkend="initDotDenemo" /> for details on what actions you can have Denemo perform before you start.</para>
            </listitem>

            <listitem>
              <para>Use a Template</para>
            </listitem>

            <listitem>
              <para>Use shortcut keys to add staves and set attributes</para>
            </listitem>

            <listitem>
              <para>Use the Setup Wizard</para>
            </listitem>

            <listitem>
              <para>Use Menus</para>
            </listitem>
 </itemizedlist></para>
        <sect4>
          <title>Using Templates to Setup Scores</title>

          <para>Denemo comes with a few preinstalled templates.
          You can also design your own templates as well.</para>

          <procedure>
            <step>
              <para>Navigate to <guimenu>File</guimenu>, <guisubmenu>New From
              Template</guisubmenu>, The <interface>Open</interface> dialog
              box appears.</para>
            </step>

            <step>
              <para>Double click on a template name from the list of
              templates. The dialog box closes and the template appears.
	      <!-- Alternately type @NewfromTemplate@, the <guisubmenu>New From
              Template </guisubmenu> dialog box appears. Double click on a
              template name from the list of templates. The dialog box closes
	      and the template appears. 
	      -->
            </para>

            </step>
          </procedure>

          <note>
            <para>Adjust the clef, key and time signatures as needed.</para>
          </note>
        </sect4>

        <sect4>
          <title>Using Shortcuts to Setup Scores</title>

          <para>Inserting attributes with shortcut keys is an effective way to
          quickly customize a template.</para>

          <procedure>
            <step>
              <para>Navigate to the Staff you want to change an attribute
              using one of these shortcuts:<itemizedlist>
                  <listitem>
			  <!--  <para>Type @StaffDown@ to move down one staff</para> -->
			  <para>Select Staffs/Voices-\>StaffDown to move down one staff</para>
                  </listitem>

                  <listitem>
			  <!-- <para>Type @StaffUp@ to move up one staff</para> -->
			  <para>Select Staffs/Voices-\>StaffUp to move up one staff</para>
                  </listitem>
                </itemizedlist></para>
            </step>
          </procedure>
        </sect4>

        <sect4>
          <title>Using Templates to Setup Scores</title>

          <para>Denemo Comes with a wide range of prebuilt templates for
          standard vocal and instrumental scores. If you have a custom score
          setup you use over and over create a score layout using the Setup
          Wizard and save it as a template.</para>

          <procedure>
            <step>
		    <para>Click on File-\>New From Template, The <interfacename>
              Open</interfacename> Dialog box appears displaying the currently
              available Templates.</para>
            </step>

            <step>
              <para>Double click on the template name in the righthand pane.
              The template loads in the Main Denemo Window.<note>
                  <para>The currently active staff will be black. All other
                  staves will be yellow, until they are active.</para>
                </note></para>
            </step>
          </procedure>
        </sect4>
 </sect3>
 </sect2>
  </sect1>

    <sect1 id="customizingDenemo">
      <title>Adding Key/Mouse Shortcuts</title>

      <para><productname>Denemo</productname> allows you to choose which keys activate which commands. It also allows you to choose Mouse press/release gestures (in combination with keys such as Shift, NumLock, CapsLock etc).
 <para>
 To choose a shortcut for a menu item, right-click on the item and choose the Create Mouse Shortcut, or the Edit Shortcuts option. The Set Mouse Shortcut Dialog requires you to set which button and action you want to use and then to hold/lock the keyboard modifier while clicking on the big button. The setting you have chosen is shown, and you click ok to accept it.
 </para>
 <para>
 To set a keyboard shortcut, and to delete any sort of shortcut, use the Edit Shortcuts menu item. This dialog also allows you to choose a cursor to show while certain mouse actions are underway.
 </para>
 <para>
If your choice of keyboard shortcut already belongs to another command, you are warned about this, and given the chance to change your mind or steal the shortcut. Also, you can choose whether to distinguish between keypresses with, say the NumLock down and those without or to ignore it. If the NumLock is set but no command for that key specifically requires it then the setting of NumLock is ignored and the keypress is treated as if the NumLock was off.
 </para>
 The menu item that activates the command shows the shortcuts that exist in bright blue lettering. PrsL-CapsLoc, for example, is the Press action on the Left mouse key while the CapsLock light is on.  In the default command set this is linked to the BeginSlur command, so that together with the RlsL-CapsLoc for the release of the left mouse button, you can "draw" slurs by using the mouse. Similarly, Shift with left mouse button (MveL-Shift) is set to allow you to drag notes up and down the staff. (This is using Command MoveNoteToCursor, which is found under Notes/Rests/Edit/Edit Note/To Cursor)</para>
    </sect1>



<sect1>
    <title>More Commands</title>
<sect2>
     <title>Adding More Features </title>
   <para>
It is possible to add more commands to the set that Denemo ships with. Some of these are shipped with Denemo, but not added automatically so as to keep the menu sizes manageable. Generally, you right-click to find more menu items to add; once added you can set a keyboard/mouse shortcut and keep the command in your default setup.
  </para>
</sect2>
<sect2>
     <title>Adding Your Own Features </title>
   <para>
You can also get Denemo to remember a frequently used sequence of actions - it can be installed in the menu system and given a keyboard shortcut just like any other command. </para>
  <para> To do this you right-click and choose Show Scheme Script. (You do not have to understand what a Scheme Script is to use this!). In the little window that pops up set Record Scheme Script and then do the set of steps you wish Denemo to remember, <emphasis>using the menu items, not keyboard, for each step</emphasis>.
  </para> 
 <para>As a simple example, suppose you wanted a command to delete the next note (there are commands to delete the previous note and the current note, so why not?). You would enter some notes, put on Record Scheme Script and then from the menu Cursor select Cursor Right (to move on to the note to be deleted), and with the Notes/Rests->Delete->Delete Object menu item you would delete the note. (Each time you use a menu item you will see a new command entered into the Scheme window). Now turn off Record Scheme Script and you can experiment with your new command by pressing Execute in the Scheme Script window. To save this new command for future use, you right click on a menu item (in the menu where you would like the command to appear) and choose "Save Script as New Menu Item", this will ask you to make up a name for your new command as well as a label for the menu item etc.

 </para>  
<para> You can save the command in your default sequence of commands (via Edit->Customize Commands...->Manage Command Set->Save as Default Command Set). If not you will be asked if you want to save your new commands when you exit. Otherwise you can re-load via the More->My Commands menu item.</para> 
</sect2>
<sect2>
     <title>An even easier way</title>
   <para>
   There is an even easier way of adding your own favorite LilyPond tweaks, which is by modifying a tweak that has already been done. This can be done by using the text-edit dialog on an existing Denemo Directive (usually found under the Advanced button provided by an edit script). Here you can see the actual LilyPond text that will be inserted, and there is a button to create a script to generate whatever you choose to enter. You can also enter the name of graphic images (.png files) that are to be used to represent your item in the display, and say where it should be positioned.
  </para>
   <para>
Once you have created the script, it can be saved in the menu system by right clicking on an item in the menu where you want to place the command, and choosing "Save Script as New Menu Item" as above.
   </para>
</sect2>
<sect2>
 <title>Writing Scheme Scripts </title>
 <para>
 If you are a programmer you will have guessed that you can edit the Scheme Script window to create any command you want. Even if you are not familiar with Scheme you may find that you can adapt other scripts to do what you want.
 </para> 
 <para>
 A good example of this is a script to insert a particular LilyPond directive into the score. This is all that many scripts do: it is easy to see the piece of LilyPond in the Scheme Script window, and by changing it you can create a new command.
 </para> 
 <para>
 For example, from the More menu select the command /menus/ObjectMenu/Instruments/Orchestral/RehearsalMark (the files are laid out in folders/directories in the same way as the menu system itself). Then choose Get Script from the right click menu. With this command its script is appended to the Scheme Script window. Here you can see the part that says
<itemizedlist>
 <listitem>
             (d-DirectivePut-standalone-postfix "RehearsalMark"  " \\mark \\default" )
</listitem>
</itemizedlist>
which is inserting the LilyPond directive "\mark \default" which inserts the default rehearsal mark. (The extra \s are needed to tell Scheme that you literally mean a \ sign). You can change this to insert any other LilyPond that you need - always doubling the \ signs. The you can save as a new menu item, or use Save Script to customize the script you started with.
 </para>
 
 <para> 
 More ambitious programmers will need to know all the commands available. Besides the complete Denemo command set (the list is given in the Command Management window) there are the following additional Scheme procedures defined.
 </para>
</sect2>
<itemizedlist>
<listitem>d-InitializeScript deprecated - init.scm is now run automatically. (parameter: action-name) runs a script init.scm in the menupath attached to the action whose name is given. Used by commands that need a time-consuming initialization step which can be skipped on subsequent calls.
</listitem>

<listitem>d-GetType returns a scheme string indicating the type of the current object
</listitem>
<listitem>d-GetNoteName returns  a scheme string, giving the note name a-g of the current note
</listitem>
<listitem>d-GetNote returns  a scheme string, the note name, accidental and octave of the current note (LilyPond notation)
</listitem>
<listitem>d-GetNotes returns  a scheme string, the notes of a chord separated by NULL characters
</listitem>
<listitem>d-PutNoteName takes a string argument, a note in LilyPond notation. Changes the note at the cursor. Not for use with multi-note chords.
</listitem>
<listitem>d-DiatonicShift Deprecated.
</listitem>


<listitem>d-NextObject moves cursor to next object, returning TRUE if current object has changed
</listitem>
<listitem>d-NextChord as d-NextObject, but skipping non-chord objects. chords includes rests and chords with 1 or more notes.
</listitem>
<listitem>d-NextNote as d-NextChord but skipping rests (i.e. chords with 0 notes).
</listitem>
<listitem>d-NextStandaloneDirective as NextObject, stopping on a standalone directive. Using d-DirectiveGet-standalone tag a directive of a particular tag can be found.
</listitem>


<listitem>(d-Directive-<emphasis>type</emphasis>? optional-tag) where <emphasis>type</emphasis> is one of score, scoreheader, movementcontrol, header, paper, layout, clef, timesig, keysig, staff, voice, standalone, chord or note.This  returns #t if the cursor is on a directive of <emphasis>type</emphasis> (with tag optional-tag if optional-tag is present) else #f
</listitem>

<listitem>(d-DirectivePut-standalone? tag) inserts a standalone directive with the given tag at the current cursor position and places the cursor on it.
</listitem>
<listitem>(d-DirectiveGetTag-<emphasis>type</emphasis>) where <emphasis>type</emphasis> is one of score, scoreheader, movementcontrol, header, paper, layout, clef, timesig, keysig, staff, voice, standalone, chord or note. This returns the tag if the cursor is on a directive of <emphasis>type</emphasis>  else #f
</listitem>
<listitem>(d-DirectiveGetTagForTag-<emphasis>type</emphasis> tag) returns the tag passed in if the cursor is on directive of <emphasis>type</emphasis> with that tag, else it returns the tag of the first directive of  <emphasis>type</emphasis> that is present at the cursor, else  #f
</listitem>


<listitem>d-WarningDialog Pass a string argument to pop up a warning.
</listitem>
<listitem>d-GetOption (parameter string of options). Takes a null separated set of options and pops up a dialog offering them to the user. Returns the one chosen or #f if the user cancels.
</listitem>


<listitem>d-GetChar returns a string containing a single character from the user (blocks waiting for a keypress)
</listitem>
<listitem>d-GetKeypress returns a string representing a keypress from the user (blocks waiting for a keypress) (e.g. Up for the up arrow key etc.)
</listitem>
<listitem>d-GetCommand returns a string containing the command name for the user's keypress (blocks waiting for a keypress)
</listitem>
<listitem>d-GetUserInput takes three strings, displays and returns the user's response as a string.
</listitem>
<listitem>
d-GetMidi
</listitem>
  <listitem>
d-PutMidi
</listitem>
  <listitem>
d-PlayMidiKey
</listitem>
  <listitem>
d-BassFigure
  </listitem>
  <listitem>
d-GetNoteAsMidi  
  </listitem>
  <listitem>
d-RefreshDisplay
  </listitem>
  <listitem>
d-InputFilterNames  sets the status bar
  </listitem>
  <listitem>
d-Chordize Ensure that even a single note is treated as a chord - needed for some LilyPond constructs (e.g. fingerings)
  </listitem>



</itemizedlist>

  <para>
  Standard Denemo commands that pop up dialogs will work as usual if no argument is passed to them from Scheme. In general if a string consisting of strings of the form "name=value\0" is passed these will be used and no popup will occur. The field "name" will be given the value "value". The \0 is a NULL character that separates the assignment strings. As a shorthand if there is only one value being passed you can just pass the value. The names of the fields depend on the action being called. So for example
<example id="schemecalls">
(d-Open "filename=myfile.denemo\0")
</example>
will open the file "myfile.denemo".
  </para>
  <para>
This feature is being rolled out, and currently works for
<itemizedlist>
<listitem>
d-InsertLilyDirective (directive, display. minpixels) (deprecated function)
</listitem>
<listitem>
d-AttachLilyToChord (prefix, postfix, display) deprecated see d-DirectiveGet-chord-* and d-DirectivePut-chord-* below
</listitem>
<listitem>
d-AttachLilyToNote (prefix, postfix, display) deprecated see d-DirectiveGet-note* and Put below
</listitem>
<listitem>
d-StaffProperties   understands a couple of property=value settings
</listitem>
<listitem>
d-InitialClef
</listitem>
<listitem>
d-InsertClef
</listitem>
<listitem>
d-InitialKey 
</listitem>
<listitem>
d-InsertKey
</listitem>
<listitem>
d-Open filename
</listitem>
<listitem>
d-ScoreProperties (fontsize= size of font to be used for score)
</listitem>


</itemizedlist>
  </para>
</sect1>
<sect1>
  <title>Variables Defined in Scheme</title>
<informaltable><tgroup cols="2"><thead><row><entry>Variable Name</entry>
<entry>Meaning</entry>

</row></thead><tbody><row>
<entry>DenemoPref_midi_audio_output</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_fluidsynth_audio_driver</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_fluidsynth_midi_driver</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_fluidsynth_soundfont</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_browser</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-Delete</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-SetPadding</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-EditText</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_lilypath</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-OffsetPositionOne</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_midiplayer</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-OffsetPositionAll</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_audioplayer</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-SetRelativeFontSize</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_csoundcommand</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-PlaceBelow</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_pdfviewer</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-PlaceAbove</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_imageviewer</entry>
<entry>---</entry>
</row>
<row>
<entry>cue-Advanced</entry>
<entry>---</entry>
</row>
<row>
<entry>stop</entry>
<entry>---</entry>
</row>
<row>
<entry>DENEMO_VERSION</entry>
<entry>---</entry>
</row>
<row>
<entry>SetScoreSize::Size</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_username</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_denemopath</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_temperament</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_midi_in</entry>
<entry>---</entry>
</row>
<row>
<entry>DenemoPref_sequencer</entry>
<entry>---</entry>
</row>
</tbody></tgroup></informaltable>




</sect1>
<sect1>
  <title>Functions Callable from Scheme</title>

All functions are prefixed by d- when called from scheme. For example the command Help is called thus (d-Help).

<informaltable><tgroup cols="4"><thead><row><entry>Command Name</entry>
<entry>Help</entry>
<entry>Label</entry>
<entry>Menu Path</entry>
</row></thead><tbody><row>
<entry>DenemoPref_resolution</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SecondTimeBar</entry>
<entry>Closes first time bars and starts second time bar(s) (printing)</entry>
<entry>Second Time Bar</entry>
<entry>/ObjectMenu/MeasureMenu/Repeats</entry>
</row>
<row>
<entry>SetInitialAflatmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set Ab Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-x</entry>
<entry>"Gets the value of the x field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-score</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a score directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Change0</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialEflatmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set Eb Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoLast</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_display_refresh</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-tx</entry>
<entry>"Gets the value of the tx field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert0</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-scoreheader?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialBflatmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set Bb Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>EnterRest</entry>
<entry>Inserts a rest in the prevailing duration</entry>
<entry>Insert Rest</entry>
<entry>/ObjectMenu/NotesRests/RestEntry</entry>
</row>
<row>
<entry>DirectivePut-chord-tx</entry>
<entry>"Writes the tx field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_animation_steps</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-gx</entry>
<entry>"Writes the gx field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>0</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialFmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set F Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleTupletBrackets</entry>
<entry>Turns tuplet brackets off or on.</entry>
<entry>Tuplet Brackets On/Off</entry>
<entry>/ObjectMenu/NotesRests/Tuplets</entry>
</row>
<row>
<entry>DenemoForward</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_overlays</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-score</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-override</entry>
<entry>"Writes the override field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Finger1</entry>
<entry>Inserts fingering for finger 1</entry>
<entry>Finger 1</entry>
<entry>/ObjectMenu/NotesRests/Markings/Strings/Fingerings</entry>
</row>
<row>
<entry>DirectiveDelete-score</entry>
<entry>"Deletes a score directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialCmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set C Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>PutWholeMeasureRests</entry>
<entry>"Insert rests at the cursor to the value of the one whole measure in the key signature and return the number of rests inserted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_continuous</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-y</entry>
<entry>"Gets the value of the y field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoNext</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>FirstTimeBar</entry>
<entry>Closes a repeated section and starts a first time bar (printing)</entry>
<entry>First Time Bar</entry>
<entry>/ObjectMenu/MeasureMenu/Repeats</entry>
</row>
<row>
<entry>SetInitialGmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set G Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-tx</entry>
<entry>"Gets the value of the tx field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_jacktransport</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-ty</entry>
<entry>"Writes the ty field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToG</entry>
<entry>Moves cursor to nearest note G</entry>
<entry>Move to G</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialDmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set D Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoGoForward</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_jacktransport_start_stopped</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-gy</entry>
<entry>"Writes the gy field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-voice</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a voice directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeToG</entry>
<entry>Changes note at cursor to nearest note G
Rhythm is unchanged</entry>
<entry>Change to G</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialASharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set A# Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>ClosingBarline</entry>
<entry>Inserts a closing barline (a double bar with last one thicker).</entry>
<entry>Closing Barline</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>DirectivePut-clef-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_rtcs</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-x</entry>
<entry>"Gets the value of the x field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddG</entry>
<entry>Adds note G to the chord at cursor
Cursor height determines which octave</entry>
<entry>Add G</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialDSharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set D# Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-tx</entry>
<entry>"Writes the tx field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DiminishedOrAugmented</entry>
<entry>Determine if the chord sounded is Diminished or Augmented</entry>
<entry>DiminishedAugmented</entry>
<entry>/MainMenu/Educational/Aural Training</entry>
</row>
<row>
<entry>DenemoPause</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_notation_palette</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-tx</entry>
<entry>"Writes the tx field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Finger0</entry>
<entry>Inserts fingering for open string</entry>
<entry>Finger 0</entry>
<entry>/ObjectMenu/NotesRests/Markings/Strings/Fingerings</entry>
</row>
<row>
<entry>SetInitialGSharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set G# Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>GetNoteName</entry>
<entry>"Returns the name of the (highest) note in any chord at the cursor position, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_articulation_palette</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-score?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-gx</entry>
<entry>"Writes the gx field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-voice</entry>
<entry>"Deletes a voice directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CloseRepeat</entry>
<entry>Closes a section that starts with an Open Repeat. Not needed with 1st and 2nd time bars. (Printing)</entry>
<entry>Close a Repeat Section</entry>
<entry>/ObjectMenu/MeasureMenu/Repeats</entry>
</row>
<row>
<entry>SetInitialCSharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set C# Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPlay</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_console_pane</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-note</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-override</entry>
<entry>"Writes the override field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-display</entry>
<entry>"Gets the value of the display field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddNoteG</entry>
<entry>Inserts note G after note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert G After</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialFSharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set F# Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>Playback::Loop</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_lyrics_pane</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-y</entry>
<entry>"Writes the y field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-y</entry>
<entry>"Gets the value of the y field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertG</entry>
<entry>Inserts note G before note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert G</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialBmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set B Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>Beam1234</entry>
<entry>Beams end on each quarter note (up to 4).</entry>
<entry>Beam 4 Beats</entry>
<entry>/ObjectMenu/NotesRests/Beaming</entry>
</row>
<row>
<entry>DenemoStop</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_visible_directive_buttons</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-ty</entry>
<entry>"Writes the ty field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-staff</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a staff directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToF</entry>
<entry>Moves cursor to nearest note F</entry>
<entry>Move to F</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialEmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set E Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>FinishCadenza</entry>
<entry>Returns to normal barlines etc after a cadenza</entry>
<entry>End Cadenza</entry>
<entry>/ObjectMenu/Directives</entry>
</row>
<row>
<entry>DenemoPref_autoupdate</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-gy</entry>
<entry>"Writes the gy field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Presto</entry>
<entry>Print Presto in bold italics above the chord.</entry>
<entry>Presto</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Tempo Indications</entry>
</row>
<row>
<entry>SetInitialAmin</entry>
<entry>No Tooltip yet</entry>
<entry>Set A Minor as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DebugObject</entry>
<entry>"Prints out information about the object at the cursor"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoRewind</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_rhythm_palette</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-x</entry>
<entry>"Writes the x field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-y</entry>
<entry>"Writes the y field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>OpenRepeat</entry>
<entry>Marks the point where a repeat will start. A correspond close, or first and second time bars are needed.</entry>
<entry>Open Repeat Section</entry>
<entry>/ObjectMenu/MeasureMenu/Repeats</entry>
</row>
<row>
<entry>SetInitialCflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set Cb Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_object_palette</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-postfix</entry>
<entry>"Writes the postfix field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPrevious</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-tx</entry>
<entry>"Writes the tx field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-staff</entry>
<entry>"Deletes a staff directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeToF</entry>
<entry>Changes note at cursor to nearest note F
Rhythm is unchanged</entry>
<entry>Change to F</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialGflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set Gb Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-note?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-gx</entry>
<entry>"Writes the gx field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddF</entry>
<entry>Adds note F to the chord at cursor
Cursor height determines which octave</entry>
<entry>Add F</entry>
<entry>--</entry>
</row>
<row>
<entry>MidiAdvanceOnEdit</entry>
<entry>Advances the cursor on MIDI note entry. Use in Edit mode.</entry>
<entry>MIDI Advance on Edit</entry>
<entry>/MainMenu/InputMenu/MIDI</entry>
</row>
<row>
<entry>HideMovement</entry>
<entry>Hides the movement on printing.</entry>
<entry>(Print) Hide Movement</entry>
<entry>/ObjectMenu/MovementMenu</entry>
</row>
<row>
<entry>DenemoGoBack</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-voice-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the voice directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialDflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set Db Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-y</entry>
<entry>"Gets the value of the y field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddNoteF</entry>
<entry>Inserts note F after note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert F After</entry>
<entry>--</entry>
</row>
<row>
<entry>CadenzaOn</entry>
<entry>Turns off barlines etc for cadenza</entry>
<entry>Start Cadenza</entry>
<entry>/ObjectMenu/Directives</entry>
</row>
<row>
<entry>SetInitialAflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set Ab Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-y</entry>
<entry>"Writes the y field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Andante</entry>
<entry>Print Andante in bold italics above the chord.</entry>
<entry>Andante</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Tempo Indications</entry>
</row>
<row>
<entry>DirectiveTextEdit-chord</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a chord directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetCursorNote</entry>
<entry>"Returns the note name for the line or space where the cursor is"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoFirst</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-ty</entry>
<entry>"Writes the ty field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialEflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set Eb Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>WholeMeasureRest</entry>
<entry>Inserts a whole measure rest at the cursor</entry>
<entry>Whole Measure Rest</entry>
<entry>/ObjectMenu/NotesRests/RestEntry</entry>
</row>
<row>
<entry>SetInitialBflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set Bb Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-prefix</entry>
<entry>"Writes the prefix field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-y</entry>
<entry>"Writes the y field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertF</entry>
<entry>Inserts note F before note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert F</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialFmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set F Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-x</entry>
<entry>"Writes the x field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-chord</entry>
<entry>"Deletes a chord directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToE</entry>
<entry>Moves cursor to nearest note E</entry>
<entry>Move to E</entry>
<entry>--</entry>
</row>
<row>
<entry>AngryDelete</entry>
<entry>MIDI notes struck loudly delete the previous note before taking effect.</entry>
<entry>Angry Delete</entry>
<entry>/MainMenu/InputMenu/MIDI</entry>
</row>
<row>
<entry>MovementPageBreak</entry>
<entry>Prints this movement starting on a new page</entry>
<entry>Page Break Before</entry>
<entry>/ObjectMenu/MovementMenu</entry>
</row>
<row>
<entry>Paste::MeasureBreakInClipboard?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-staff-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the staff directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-tx</entry>
<entry>"Writes the tx field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialCSharpmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set C# Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeToE</entry>
<entry>Changes note at cursor to nearest note E
Rhythm is unchanged</entry>
<entry>Change to E</entry>
<entry>--</entry>
</row>
<row>
<entry>CloseReopenRepeat</entry>
<entry>Closes and open repeat block and opens a new one.</entry>
<entry>Close and Reopen Repeat</entry>
<entry>/ObjectMenu/MeasureMenu/Repeats</entry>
</row>
<row>
<entry>SetInitialFSharpmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set F# Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-display</entry>
<entry>"Gets the value of the display field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-x</entry>
<entry>"Gets the value of the x field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Allegro</entry>
<entry>Print Allegro in bold italics above the chord.</entry>
<entry>Allegro</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Tempo Indications</entry>
</row>
<row>
<entry>IsSlurEnd</entry>
<entry>"Returns #t if there is a chord with slur ending at cursor, else #f"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GoToMeasureEnd</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_fluidsynth_reverb</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialBmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set B Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-note</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a note directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Augment</entry>
<entry>Augments the current Note/Chord/Rest. Quarter Note becomes Half Note.</entry>
<entry>Augment</entry>
<entry>/ObjectMenu/NotesRests</entry>
</row>
<row>
<entry>DenemoPref_fluidsynth_chorus</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-y</entry>
<entry>"Writes the y field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialEmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set E Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-display</entry>
<entry>"Writes the display field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MeasureFull?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_fluidsynth_sample_rate</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddE</entry>
<entry>Adds note E to the chord at cursor
Cursor height determines which octave</entry>
<entry>Add E</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialAmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set A Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-graphic</entry>
<entry>"Writes the graphic field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-x</entry>
<entry>"Writes the x field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>OpenOctaveUp</entry>
<entry>Opens a block to be transposed up one octave
	This must be followed by a CloseBlock "}" to end the transposed section.</entry>
<entry>(Print) Open { Octave Up</entry>
<entry>/ObjectMenu/Directives/Print Transpositions</entry>
</row>
<row>
<entry>NoBeam</entry>
<entry>Prints note without any beam attached.</entry>
<entry>No Beam Here</entry>
<entry>/ObjectMenu/NotesRests/Beaming</entry>
</row>
<row>
<entry>DirectivePut-note-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_fluidsynth_period_size</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddNoteE</entry>
<entry>Inserts note E after note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert E After</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialDmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set D Major as Initial Keysig</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-note</entry>
<entry>"Deletes a note directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetMovementTempo</entry>
<entry>Sets the (initial) tempo in quarter notes per minute.</entry>
<entry>MIDI Tempo</entry>
<entry>/ObjectMenu/MovementMenu</entry>
</row>
<row>
<entry>DenemoPref_zoom</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertE</entry>
<entry>Inserts note E before note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert E</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-x</entry>
<entry>"Writes the x field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialGmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set Initial Keysig to G Major</entry>
<entry>--</entry>
</row>
<row>
<entry>D.C.AlFine</entry>
<entry>Puts a da capo in the score. Position is adjusted via the numbers in the script.</entry>
<entry>D. C. al fine</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks</entry>
</row>
<row>
<entry>IsSlurStart</entry>
<entry>"Returns #t if there is a chord with slur starting at cursor, else #f"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_system_height</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialCmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Set Initial Keysig to C Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-x</entry>
<entry>"Gets the value of the x field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-postfix</entry>
<entry>"Writes the postfix field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Diminish</entry>
<entry>Diminishs the note/chord/rest. Quarter Note becomes Eight Note. </entry>
<entry>Diminish</entry>
<entry>/ObjectMenu/NotesRests</entry>
</row>
<row>
<entry>InsertAflatmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Ab Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-graphic</entry>
<entry>"Writes the graphic field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-display</entry>
<entry>"Gets the value of the display field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-movementcontrol</entry>
<entry>"Takes a optional tag. Returns that tag if a movementcontrol directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToD</entry>
<entry>Moves cursor to nearest note D</entry>
<entry>Move to D</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertEflatmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Eb Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>CloseLilyBlock</entry>
<entry>Closes a LilyPond Block (there must be a matching open, {, earlier)</entry>
<entry>(Print) Close } a LilyPond Block</entry>
<entry>/ObjectMenu/Directives/Print Transpositions</entry>
</row>
<row>
<entry>ToggleTupletNumbering</entry>
<entry>Control whether tuplet numbers will be printed over tuplets.</entry>
<entry>Tuplet Numbering on/off</entry>
<entry>/ObjectMenu/NotesRests/Tuplets</entry>
</row>
<row>
<entry>DirectivePut-chord-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_LILYPOND</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeToD</entry>
<entry>Changes note at cursor to nearest note D
Rhythm is unchanged</entry>
<entry>Change to D</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBflatmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Bb Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-x</entry>
<entry>"Writes the x field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-prefix</entry>
<entry>"Writes the prefix field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Zoom70</entry>
<entry>Zoom to 70%</entry>
<entry>70%</entry>
<entry>/MainMenu/ViewMenu/Zoom</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_GRAPHIC</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddD</entry>
<entry>Adds note D to the chord at cursor
Cursor height determines which octave</entry>
<entry>Add D</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertFmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert F Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-graphic</entry>
<entry>"Writes the graphic field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-layout</entry>
<entry>"Takes a optional tag. Returns that tag if a layout directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetNonprinting</entry>
<entry>"Sets the Non Printing attribute of a chord (or note/rest) at the cursor. For a rest this makes a non printing rest, for a note it makes it ia pure rhythm (which will not print, but can be assigned pitch, e.g. via a MIDI keyboard. Pass in #f to unset the attribute"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_EDITOR</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertCmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert C Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_VOLUME</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SearchBookmarkR</entry>
<entry>Searches for a named Bookmark in the current staff.</entry>
<entry>Search Bookmark</entry>
<entry>/MainMenu/NavigationMenu/Bookmarks</entry>
</row>
<row>
<entry>InsertGmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert G Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-voice-graphic</entry>
<entry>"Writes the graphic field (a string) of the voice directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-ty</entry>
<entry>"Writes the ty field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetTimeSignature</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-display</entry>
<entry>"Writes the display field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_DURATION</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddNoteD</entry>
<entry>Inserts note D after note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert D After</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertDmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert D Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-postfix</entry>
<entry>"Writes the postfix field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-paper</entry>
<entry>"Takes a optional tag. Returns that tag if a paper directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>TransposeOctaveUp</entry>
<entry>Instructs the LilyPond Engraver to transpose this score one octave up.</entry>
<entry>(Print) Transpose Octave Up</entry>
<entry>/ObjectMenu/Score</entry>
</row>
<row>
<entry>ScoreIndent</entry>
<entry>Indent the first system of every movement by the given amount.</entry>
<entry>Indent</entry>
<entry>/ObjectMenu/Score/Print Layout</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_REPEAT</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertD</entry>
<entry>Inserts note D before note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert D</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-chord</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertASharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert A# Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>MeasureEmpty?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-display</entry>
<entry>"Gets the value of the display field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ZoomDialog</entry>
<entry>Scales the display by value given by user.</entry>
<entry>Set Display Scale</entry>
<entry>/MainMenu/ViewMenu/Zoom</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_CHANNEL</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToC</entry>
<entry>Moves cursor to nearest note C</entry>
<entry>Move to C</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertDSharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert D# Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-gy</entry>
<entry>"Writes the gy field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-layout</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a layout directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetNonprinting</entry>
<entry>"Returns #t if there is an object at the cursor which has any printing behavior it may have overridden"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_TEMPO</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertGSharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert G# Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-prefix</entry>
<entry>"Writes the prefix field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-header</entry>
<entry>"Takes a optional tag. Returns that tag if a header directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_ONCE</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>BookmarkRNonPrinting</entry>
<entry>Adds a custom Denemo bookmark without Lilypond output.</entry>
<entry>Add non-printing Bookmark</entry>
<entry>/MainMenu/NavigationMenu/Bookmarks</entry>
</row>
<row>
<entry>InsertCSharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert C# Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-staff-graphic</entry>
<entry>"Writes the graphic field (a string) of the staff directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-graphic</entry>
<entry>"Writes the graphic field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_STEP</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeToC</entry>
<entry>Changes note at cursor to nearest note C
Rhythm is unchanged</entry>
<entry>Change to C</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertFSharpmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert F# Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-y</entry>
<entry>"Writes the y field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetTransposeIntervalFromSelection</entry>
<entry>Sets the interval for a transpose operation from the first two notes of the current selection.</entry>
<entry>Set Transpose Interval</entry>
<entry>/MainMenu/EditMenu/Transpose</entry>
</row>
<row>
<entry>DirectiveDelete-layout</entry>
<entry>"Deletes a layout directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Indent</entry>
<entry>Alter the indent of the opening system for the current movement.</entry>
<entry>Indent</entry>
<entry>/ObjectMenu/MovementMenu/Print Layout</entry>
</row>
<row>
<entry>AddC</entry>
<entry>Adds note C to the chord at cursor
Cursor height determines which octave</entry>
<entry>Add C</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert B Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-display</entry>
<entry>"Writes the display field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-scoreheader</entry>
<entry>"Takes a optional tag. Returns that tag if a scoreheader directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DynamicsDialog</entry>
<entry>Choose dynamics and midi volume level.</entry>
<entry>Dynamics</entry>
<entry>/ObjectMenu/Directives</entry>
</row>
<row>
<entry>AddNoteC</entry>
<entry>Inserts note C after note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert C After</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertEmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert E Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>D-Anacrusis</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-postfix</entry>
<entry>"Writes the postfix field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>HighlightCursor</entry>
<entry>"Turn highlighting of cursor off/on"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertAmin</entry>
<entry>No Tooltip yet</entry>
<entry>Insert A Minor</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-ty</entry>
<entry>"Gets the value of the ty field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-height</entry>
<entry>"Gets the value of the height field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>BookmarkRNamed</entry>
<entry>Adds a named Denemo bookmark combined with a custom Lilypond Rehearsal Mark</entry>
<entry>Add named Bookmark</entry>
<entry>/MainMenu/NavigationMenu/Bookmarks</entry>
</row>
<row>
<entry>InsertCflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Cb Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-graphic</entry>
<entry>"Writes the graphic field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-scoreheader</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a scoreheader directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-keysig</entry>
<entry>"Takes a optional tag. Returns that tag if a keysig directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertC</entry>
<entry>Inserts note C before note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert C</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertGflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Gb Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-prefix</entry>
<entry>"Writes the prefix field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>TransposeNote</entry>
<entry>Transposes the note at the cursor by the amount set by other commands.</entry>
<entry>Transpose Note</entry>
<entry>/MainMenu/EditMenu/Transpose</entry>
</row>
<row>
<entry>ScoreCopyright</entry>
<entry>Prints a line of text at the end of the score, above the tagline.</entry>
<entry>Copyright</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>MoveToB</entry>
<entry>Moves cursor to nearest note B</entry>
<entry>Move to B</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertDflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Db Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-gy</entry>
<entry>"Gets the value of the gy field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-width</entry>
<entry>"Gets the value of the width field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SlurTwo</entry>
<entry>Creates a slur from current note to next note.</entry>
<entry>Slur with Next Note</entry>
<entry>/ObjectMenu/NotesRests/Slurs</entry>
</row>
<row>
<entry>ChangeToB</entry>
<entry>Changes note at cursor to nearest note B
Rhythm is unchanged</entry>
<entry>Change to B</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertAflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Ab Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-scoreheader</entry>
<entry>"Deletes a scoreheader directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AdjustXes</entry>
<entry>"Adjusts the horizontal (x-) positioning of notes etc after paste"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-timesig</entry>
<entry>"Takes a optional tag. Returns that tag if a timesig directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertEflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Eb Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-timesig-display</entry>
<entry>"Writes the display field (a string) of the timesig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>RehearsalMark</entry>
<entry>Adds a Denemo bookmark combined with a default Rehearsal Mark</entry>
<entry>Add Rehearsal/Bookmark</entry>
<entry>/ObjectMenu/Directives</entry>
</row>
<row>
<entry>InsertBflatmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Bb Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-graphic</entry>
<entry>"Writes the graphic field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-y</entry>
<entry>"Gets the value of the y field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-override</entry>
<entry>"Gets the value of the override field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddB</entry>
<entry>Adds note B to the chord at cursor
Cursor height determines which octave</entry>
<entry>Add B</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertFmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert F Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-height</entry>
<entry>"Gets the value of the height field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>TransposeSelection</entry>
<entry>Opens a dialog to get an interval, then transposes by that interval.</entry>
<entry>Transpose Selection</entry>
<entry>/MainMenu/EditMenu/Transpose</entry>
</row>
<row>
<entry>MovementPiece</entry>
<entry>Prints the name given above and to the left at the start of the movement.</entry>
<entry>Piece</entry>
<entry>/ObjectMenu/MovementMenu/Titles Etc</entry>
</row>
<row>
<entry>DirectiveGetForTag-clef</entry>
<entry>"Takes a optional tag. Returns that tag if a clef directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddNoteB</entry>
<entry>Inserts note B after note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert B After</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertCSharpmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert C# Major</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-chord?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-clef</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a clef directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertB</entry>
<entry>Inserts note B before note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert B</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertFSharpmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert F# Major</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-tx</entry>
<entry>"Writes the tx field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DesignateVoice</entry>
<entry>This script is used when entering several voices per staff--it enters a lilypond command to set all of the various gadgets to the proper directions to avoid clashes and make it all look nice. </entry>
<entry>Designate Voice</entry>
<entry>/ObjectMenu/NotesRests/StemControl</entry>
</row>
<row>
<entry>DirectiveGet-layout-gy</entry>
<entry>"Gets the value of the gy field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-standalone</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Bmaj</entry>
<entry>--</entry>
</row>
<row>
<entry>ClearClipboard</entry>
<entry>"Clears the Denemo Music Clipboard"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PlayNote</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-width</entry>
<entry>"Gets the value of the width field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-score</entry>
<entry>"Takes a optional tag. Returns that tag if a score directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PrevBookmarkR</entry>
<entry>Seach backward for bookmarks in the current staff.</entry>
<entry>Prev Bookmark</entry>
<entry>/MainMenu/NavigationMenu/Bookmarks</entry>
</row>
<row>
<entry>InsertEmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Emaj</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-graphic</entry>
<entry>"Writes the graphic field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangePad</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-clef</entry>
<entry>"Deletes a clef directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToA</entry>
<entry>Moves cursor to nearest note A</entry>
<entry>Move to A</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertAmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Amaj</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-gx</entry>
<entry>"Writes the gx field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-gx</entry>
<entry>"Gets the value of the gx field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MovementSubtitle</entry>
<entry>Prints the given name below the title of the current movement.</entry>
<entry>Subtitle</entry>
<entry>/ObjectMenu/MovementMenu/Titles Etc</entry>
</row>
<row>
<entry>ChangeToA</entry>
<entry>Changes note at cursor to nearest note A
Rhythm is unchanged</entry>
<entry>Change to A</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertDmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Dmaj</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-override</entry>
<entry>"Gets the value of the override field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetPadding</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-voice</entry>
<entry>"Takes a optional tag. Returns that tag if a voice directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddA</entry>
<entry>Adds note A to the chord at cursor
Cursor height determines which octave</entry>
<entry>Add A</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertGmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Gmaj</entry>
<entry>--</entry>
</row>
<row>
<entry>MM</entry>
<entry>Prints a metronome mark.</entry>
<entry>Metronome Mark</entry>
<entry>/ObjectMenu/Directives</entry>
</row>
<row>
<entry>DirectiveGet-clef-height</entry>
<entry>"Gets the value of the height field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertCmaj</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Cmaj</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-x</entry>
<entry>"Writes the x field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PutClipObj</entry>
<entry>"Takes a staff number m and a object number n. Inserts the (m, n)th Denemo Object from Denemo Clipboard into the staff at the cursor position"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-ty</entry>
<entry>"Gets the value of the ty field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>NextBookmarkR</entry>
<entry>Seach forward for bookmarks in the current staff.</entry>
<entry>Next Bookmark</entry>
<entry>/MainMenu/NavigationMenu/Bookmarks</entry>
</row>
<row>
<entry>Set98Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 9/8 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-override</entry>
<entry>"Writes the override field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-gy</entry>
<entry>"Gets the value of the gy field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-staff</entry>
<entry>"Takes a optional tag. Returns that tag if a staff directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddNoteA</entry>
<entry>Inserts note A after note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert A After</entry>
<entry>--</entry>
</row>
<row>
<entry>Set128Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 12/8 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-width</entry>
<entry>"Gets the value of the width field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertA</entry>
<entry>Inserts note A before note at cursor
Cursor determines which octave
Note is inserted in the prevailing rhythm</entry>
<entry>Insert A</entry>
<entry>--</entry>
</row>
<row>
<entry>Set68Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 6/8 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>MovementTitle</entry>
<entry>Prints the name given as a title above the current movement.</entry>
<entry>Title</entry>
<entry>/ObjectMenu/MovementMenu/Titles Etc</entry>
</row>
<row>
<entry>DirectiveGet-score-tx</entry>
<entry>"Gets the value of the tx field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-tx</entry>
<entry>"Gets the value of the tx field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteRhythm</entry>
<entry>Delete the selected music snippet/rhythm pattern</entry>
<entry>Delete Snippet</entry>
<entry>--</entry>
</row>
<row>
<entry>Set38Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 3/8 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>Tempo</entry>
<entry>Insert tempi and/or metronome marks, printed or not</entry>
<entry>Tempo</entry>
<entry>/ObjectMenu/Directives</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-gx</entry>
<entry>"Gets the value of the gx field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-note</entry>
<entry>"Takes a optional tag. Returns that tag if a note directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set64Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 6/4 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>GetClipObjects</entry>
<entry>"Takes a staff number m, Returns the number of objects in the mth staff on the Denemo Clipboard or #f if none."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRelativeFontSize</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-override</entry>
<entry>"Gets the value of the override field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>TransposeStaffPrint</entry>
<entry>Prints this staff (only) transposed. This is in addtion to any score-wide transposition</entry>
<entry>(Print) Transpose</entry>
<entry>/ObjectMenu/StaffMenu</entry>
</row>
<row>
<entry>Set24Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 2/4 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-gx</entry>
<entry>"Gets the value of the gx field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetValue</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-y</entry>
<entry>"Gets the value of the y field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-voice-override</entry>
<entry>"Writes the override field (a string) of the voice directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CreateRhythm</entry>
<entry>Copy selection as music snippet or rhythm pattern for notes to follow as they are entered</entry>
<entry>Create Snippet</entry>
<entry>--</entry>
</row>
<row>
<entry>ANS-7::Base7NoteTableR</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set34Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 3/4 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-ty</entry>
<entry>"Gets the value of the ty field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-chord</entry>
<entry>"Takes a optional tag. Returns that tag if a chord directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ClearOverlay</entry>
<entry>Clear the list of pitches that overlay the notes</entry>
<entry>Clear Overlay</entry>
<entry>--</entry>
</row>
<row>
<entry>Set44Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 4/4 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreTagline</entry>
<entry>Prints a line of text at the end of the score.</entry>
<entry>Tagline</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>DirectiveGet-clef-gy</entry>
<entry>"Gets the value of the gy field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleRhythm</entry>
<entry>Toggle audible feedback on/off</entry>
<entry>Toggle Audible Feedback</entry>
<entry>--</entry>
</row>
<row>
<entry>SetRelativeFontSize</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set42Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 4/2 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-x</entry>
<entry>"Gets the value of the x field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MidiTempo</entry>
<entry>Send a Midi command to change the tempo to a new bpm. No printout.</entry>
<entry>Set Tempo</entry>
<entry>/ObjectMenu/Directives/MIDI</entry>
</row>
<row>
<entry>DirectiveGet-layout-x</entry>
<entry>"Gets the value of the x field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set32Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 3/2 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>GetClipObjType</entry>
<entry>"Takes a staff number m and a object number n. Returns the type of object at the (m, n)th position on the Denemo Clipboard or #f if none."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-tx</entry>
<entry>"Gets the value of the tx field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetForTag-standalone</entry>
<entry>"Takes a optional tag. Returns that tag if a standalone directive exists at the cursor, else returns the tag of the first such directive at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>BassClefNoteNameSpeedTest</entry>
<entry>%tests your ability to read the notes of the bass clef staff</entry>
<entry>Bass Clef Note Name Speed Recognition</entry>
<entry>/MainMenu/Educational</entry>
</row>
<row>
<entry>Set22Time</entry>
<entry>No Tooltip yet</entry>
<entry>Set 2/2 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-standalone</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-gx</entry>
<entry>"Gets the value of the gx field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-staff-override</entry>
<entry>"Writes the override field (a string) of the staff directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetHeaderField</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleRest</entry>
<entry>Toggle between note entry and rest entry</entry>
<entry>Toggle Rest Mode</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert98Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 9/8 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-height</entry>
<entry>"Writes the height field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-override</entry>
<entry>"Writes the override field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleEdit</entry>
<entry>Toggle between current mode and edit mode</entry>
<entry>Toggle Edit Mode</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert128Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 12/8 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>ScorePoet</entry>
<entry>Prints Poet-name given to left above first movement of the score.</entry>
<entry>Poet</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-y</entry>
<entry>"Gets the value of the y field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetDirectiveTagActionScript</entry>
<entry>"Sets an "action script" on the directive of the given tag"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>FetchCommands</entry>
<entry>Refreshes the set of commands available from Denemo.org.
Use More Commands after this has finished</entry>
<entry>Update Commands from Internet</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert68Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 6/8 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>AddDuplicateMeasure</entry>
<entry>Inserts a copy of the current measure after the present measure.</entry>
<entry>Insert Duplicate Measure After</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>DirectiveGet-clef-ty</entry>
<entry>"Gets the value of the ty field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeOffset</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert38Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 3/8 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>SetTuplet</entry>
<entry>"Set passed string as numerator/denominator for a tuplet open at cursor"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-gy</entry>
<entry>"Writes the gy field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-width</entry>
<entry>"Writes the width field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CountSteps</entry>
<entry>%tests your ability to find the number of diatonic notes between two notes</entry>
<entry>Step Counting Exercise</entry>
<entry>/MainMenu/Educational</entry>
</row>
<row>
<entry>Insert64Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 6/4 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-override</entry>
<entry>"Writes the override field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-x</entry>
<entry>"Gets the value of the x field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetCommand</entry>
<entry>"Intercepts the next keypress and returns the name of the command invoked, before invoking the command. Returns #f if the keypress is not a shortcut for any command"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MyCommands</entry>
<entry>Allows choosing extra commands/menu items from your own collection of extras</entry>
<entry>My Commands</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert24Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 2/4 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-tx</entry>
<entry>"Gets the value of the tx field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoreCommands</entry>
<entry>Allows choosing standard extra commands/menu items</entry>
<entry>More Commands</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert34Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 3/4 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreOpus</entry>
<entry>Name of the opus, flush-right below the arranger.</entry>
<entry>Opus</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>DirectivePut-layout-gx</entry>
<entry>"Writes the gx field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-height</entry>
<entry>"Gets the value of the height field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>About</entry>
<entry>Gives the version number etc of this program</entry>
<entry>About</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert44Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 4/4 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>BarNumbers</entry>
<entry>Turns bar numbering on/off in print out.</entry>
<entry>Bar Numbers On/Off</entry>
<entry>/ObjectMenu/StaffMenu/Numbering</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-override</entry>
<entry>"Writes the override field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetCommandKeypress</entry>
<entry>"Returns the last keypress that successfully invoked a command "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert42Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 4/2 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>GetTuplet</entry>
<entry>"Returns a string numerator/denominator for a tuplet open object or #f if cursor not on a tuplet open"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-y</entry>
<entry>"Gets the value of the y field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>StepSkipOrSame</entry>
<entry>%tests your ability to determine if note is moving by a step or skip</entry>
<entry>Beginner Interval Detection</entry>
<entry>/MainMenu/Educational</entry>
</row>
<row>
<entry>Insert32Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 3/2 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-ty</entry>
<entry>"Writes the ty field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-override</entry>
<entry>"Writes the override field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-width</entry>
<entry>"Gets the value of the width field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Help</entry>
<entry>Opens a browser on the user manual</entry>
<entry>Browse Manual</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeValue</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert22Time</entry>
<entry>No Tooltip yet</entry>
<entry>Insert 2/2 Time</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-gy</entry>
<entry>"Writes the gy field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetKeypress</entry>
<entry>"Intercepts the next keypress and returns a string containing the name of the keypress (the shortcut name). Returns #f if keyboard interception was not possible."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PlaybackProperties</entry>
<entry>Allows you to specify properties used in playing back (midi and csound</entry>
<entry>Playback Properties</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreMeter</entry>
<entry>Meter string, flush-left below the poet.</entry>
<entry>Meter</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>DirectiveGet-clef-x</entry>
<entry>"Gets the value of the x field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialSopranoClef</entry>
<entry>No Tooltip yet</entry>
<entry>Set Soprano Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>PlayCSound</entry>
<entry>Play using CSound...</entry>
<entry>Csound Playback</entry>
<entry>--</entry>
</row>
<row>
<entry>docport2</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PaperSize</entry>
<entry>Specifies how the printed page should be.</entry>
<entry>Paper Size and Orientation</entry>
<entry>/ObjectMenu/Score/Print Layout</entry>
</row>
<row>
<entry>SetInitialTenorClef</entry>
<entry>No Tooltip yet</entry>
<entry>Set Tenor Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-tx</entry>
<entry>"Writes the tx field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetType</entry>
<entry>"Returns the name of the type of object at the cursor"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialAltoClef</entry>
<entry>No Tooltip yet</entry>
<entry>Set Alto Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-gx</entry>
<entry>"Writes the gx field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ReadingNoteNames</entry>
<entry>%tests your ability to name the notes of the scale</entry>
<entry>Note Name Recognition</entry>
<entry>/MainMenu/Educational</entry>
</row>
<row>
<entry>GetChar</entry>
<entry>"Intercepts the next keypress and returns a string containing the character. Returns #f if keyboard interception was not possible."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-override</entry>
<entry>"Writes the override field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialg8clef</entry>
<entry>No Tooltip yet</entry>
<entry>Set G8 Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-override</entry>
<entry>"Writes the override field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Stop</entry>
<entry>Stop</entry>
<entry>Stop</entry>
<entry>--</entry>
</row>
<row>
<entry>docport1</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetInitialBassClef</entry>
<entry>No Tooltip yet</entry>
<entry>Set Bass Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-y</entry>
<entry>"Writes the y field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InputFilterNames</entry>
<entry>"Takes a string putting it on the status bar listing active filters"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Play</entry>
<entry>Play</entry>
<entry>Play</entry>
<entry>--</entry>
</row>
<row>
<entry>ExtraOffset</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreInstrument</entry>
<entry>Name of the instrument, centered below the subsubtitle. Also centered at the top of pages (other than the first page).</entry>
<entry>Instrument</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>SetInitialTrebleClef</entry>
<entry>No Tooltip yet</entry>
<entry>Set Treble Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-ty</entry>
<entry>"Writes the ty field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteMovement</entry>
<entry>Delete the current movement</entry>
<entry>Delete Movement</entry>
<entry>--</entry>
</row>
<row>
<entry>SlurNeutral</entry>
<entry>Prints slurs as normal</entry>
<entry>Auto Slur Directions</entry>
<entry>/ObjectMenu/ChordMenu/Markings/Slurs</entry>
</row>
<row>
<entry>InfoDialog</entry>
<entry>"Takes a message as a string. Pops up the message for the user to take note of as a informative message"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-gy</entry>
<entry>"Writes the gy field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertSopranoClef</entry>
<entry>No Tooltip yet</entry>
<entry>New Soprano Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>XmlDocumentVariable</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>LocateDotDenemo</entry>
<entry>"Returns the directory holding the user's preferences"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertTenorClef</entry>
<entry>No Tooltip yet</entry>
<entry>New Tenor Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-x</entry>
<entry>"Writes the x field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-display</entry>
<entry>"Gets the value of the display field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CheckLilyVersion</entry>
<entry>"Returns a boolean if the installed version of LilyPond is greater than or equal to the passed in version string"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChordComment</entry>
<entry>Attach a textual comment to the chord at the cursor</entry>
<entry>Comment</entry>
<entry>/ObjectMenu/NotesRests</entry>
</row>
<row>
<entry>InsertAltoClef</entry>
<entry>No Tooltip yet</entry>
<entry>New Alto Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-override</entry>
<entry>"Gets the value of the override field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-tx</entry>
<entry>"Writes the tx field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>WarningDialog</entry>
<entry>"Takes a message as a string. Pops up the message for the user to take note of as a warning"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PreviousMovement</entry>
<entry>Go to the previous movement</entry>
<entry>Previous Movement</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-gx</entry>
<entry>"Writes the gx field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insertg8clef</entry>
<entry>No Tooltip yet</entry>
<entry>New G8 Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreDedication</entry>
<entry>The dedicatee of the music, centered at the top of the first page.</entry>
<entry>Dedication</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>NextMovement</entry>
<entry>Go to the next movement</entry>
<entry>Next Movement</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBassClef</entry>
<entry>No Tooltip yet</entry>
<entry>New Bass Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-postfix</entry>
<entry>"Writes the postfix field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetLilyVersion</entry>
<entry>"Returns the installed LilyPond version"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SlurUp</entry>
<entry>Prints slurs up</entry>
<entry>Slur Up</entry>
<entry>/ObjectMenu/ChordMenu/Markings/Slurs</entry>
</row>
<row>
<entry>MoveToEnd</entry>
<entry>Cursor to end of staff/voice, without extending selection if any</entry>
<entry>Move to End</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertTrebleClef</entry>
<entry>No Tooltip yet</entry>
<entry>New Treble Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-y</entry>
<entry>"Writes the y field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>LoadCommand</entry>
<entry>" pass in a path (from below menus) to a command script. Loads the command from .denemo or system if it can be found. It is used at startup in .denemo files like ReadingNoteNames.denemo which executes (d-LoadCommand "MainMenu/Educational/ReadingNoteNames") to ensure that the command it needs is in the command set."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetUserInput</entry>
<entry>"Takes three strings, title, prompt and initial value. Shows these to the user and returns the user's string."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-ty</entry>
<entry>"Writes the ty field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>TallerStaffs</entry>
<entry>No Tooltip yet</entry>
<entry>Taller Staffs</entry>
<entry>--</entry>
</row>
<row>
<entry>StaffComment</entry>
<entry>Saves textual comments for this staff</entry>
<entry>Comment</entry>
<entry>/ObjectMenu/StaffMenu</entry>
</row>
<row>
<entry>ShorterStaffs</entry>
<entry>No Tooltip yet</entry>
<entry>Shorter Staffs</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-voice-override</entry>
<entry>"Gets the value of the override field (a string) of the voice directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-prefix</entry>
<entry>"Writes the prefix field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetLabel</entry>
<entry>"Takes a command name and returns the label for the menu item that executes the command or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>XmlDocumentCommand</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToBeginning</entry>
<entry>Cursor to start of staff/voice, without extending selection if any</entry>
<entry>Move to Beginning</entry>
<entry>--</entry>
</row>
<row>
<entry>WidenMeasures</entry>
<entry>No Tooltip yet</entry>
<entry>Widen Measures</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-x</entry>
<entry>"Writes the x field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreComposer</entry>
<entry>Name of the composer, flush-right below the subsubtitle.</entry>
<entry>Composer</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>HTTP</entry>
<entry>"Takes 4 parameters and makes http transaction with www.denemo.org"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GoToEnd</entry>
<entry>Cursor to end of staff/voice, extending selection if any</entry>
<entry>Go to End</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-tx</entry>
<entry>"Writes the tx field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ShrinkMeasures</entry>
<entry>No Tooltip yet</entry>
<entry>Shrink Measure</entry>
<entry>--</entry>
</row>
<row>
<entry>SlurDown</entry>
<entry>Prints slur below</entry>
<entry>Slur Down</entry>
<entry>/ObjectMenu/ChordMenu/Markings/Slurs</entry>
</row>
<row>
<entry>GoToBeginning</entry>
<entry>Cursor to start of staff/voice, extending selection if any</entry>
<entry>Go to Beginning</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteMeasureAllStaffs</entry>
<entry>Delete the current measure in all staffs</entry>
<entry>Delete Measure All Staffs</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-display</entry>
<entry>"Writes the display field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetMenuPath</entry>
<entry>"Takes a command name and returns the menu path to that command or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-layout-display</entry>
<entry>"Gets the value of the display field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InitializeScript</entry>
<entry>"Takes a command name. called by a script if it requires initialization the initialization script is expected to be in init.scm in the menupath of the command passed in."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteMeasure</entry>
<entry>Delete the current measure in this staff, leaving the staff short</entry>
<entry>Staff Delete Measure</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DetachQuitCallback</entry>
<entry>"Removes a callback from the current musical score"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MvntComment</entry>
<entry>Stores textual comments for this movement</entry>
<entry>Comment</entry>
<entry>/ObjectMenu/MovementMenu</entry>
</row>
<row>
<entry>AppendMeasure</entry>
<entry>No Tooltip yet</entry>
<entry>Staff Append Measure</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-staff-override</entry>
<entry>"Gets the value of the override field (a string) of the staff directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-y</entry>
<entry>"Writes the y field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GoToMeasure</entry>
<entry>Opens a dialog for going to a numbered measure</entry>
<entry>Go to Measure</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertMeasureAfter</entry>
<entry>Insert a blank measure in current staff after the current measure</entry>
<entry>Staff Insert Measure After</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-voice-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the voice directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteSelection</entry>
<entry>"Deletes all objects in the selection Returns #f if no selection else #t."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-graphic</entry>
<entry>"Writes the graphic field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreArranger</entry>
<entry>Name of the arranger, flush-right below the composer.</entry>
<entry>Arranger</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>InsertBarline</entry>
<entry>Inserts specialized barline at the cursor position. Mostly not working</entry>
<entry>Insert Barline</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertMeasureBefore</entry>
<entry>Insert a blank measure before the current one (in current staff)</entry>
<entry>Staff Insert Measure Before</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>StartTuplet</entry>
<entry>Asks for ratio of tuplet and then puts in a start for that. Use EndTuplet command after entering tuplet notes. Note that the Denemo display will not automatically group the tuplet, but it will print with expected beaming etc.</entry>
<entry>Start Arbitrary Tuplet</entry>
<entry>/ObjectMenu/NotesRests/Tuplets</entry>
</row>
<row>
<entry>AttachQuitCallback</entry>
<entry>"Takes a script as a string, which will be stored. All the callbacks are called when the musical score is closed"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AttachLilyToChord</entry>
<entry>Attach or edit attached LilyPond text to the chord at the cursor. This can be used for attaching and placing text and much more. See LilyPond documentation.</entry>
<entry>Attach Lilypond to Chord</entry>
<entry>--</entry>
</row>
<row>
<entry>AddMeasure</entry>
<entry>Insert a blank measure after the current one (in all staffs)</entry>
<entry>Insert Measure After</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-x</entry>
<entry>"Writes the x field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetRelativeFontSize</entry>
<entry>"Deprecated - gets an integer from the user via a dialog"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertMeasure</entry>
<entry>Insert a blank measure before the current one (in all staffs)</entry>
<entry>Insert Measure Before</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-voice-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the voice directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PopClipboard</entry>
<entry>"Pops the Denemo clipboard (cut/copy buffer) from a stack created by d-PushClipboard. Returs #f if nothing on stack, else #t."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-postfix</entry>
<entry>"Writes the postfix field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreComment</entry>
<entry>Stores any textual commentary you may have for this score.</entry>
<entry>Comment</entry>
<entry>/ObjectMenu/Score</entry>
</row>
<row>
<entry>DeletePreviousObject</entry>
<entry>Delete to the left of the cursor.</entry>
<entry>Delete Previous Object</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-override</entry>
<entry>"Gets the value of the override field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-display</entry>
<entry>"Gets the value of the display field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetPrefs</entry>
<entry>"Takes xml representation of a preference and adds it to the Denemo preferences"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AttachLilyToNote</entry>
<entry>Attach or edit attached LilyPond text to the note at the cursor. This can be used for guitar fingerings, cautionary accidentals and much more. See LilyPond documentation.</entry>
<entry>Attach Lilypond to Note</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteObject</entry>
<entry>Delete the object at the cursor</entry>
<entry>Delete Object</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreTitle</entry>
<entry>Prints the name given as a title centered at the start of the score.</entry>
<entry>Title</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>DeleteDirective</entry>
<entry>Delete a directive attached to chord/note at cursor.</entry>
<entry>Delete a Directive</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleTie</entry>
<entry>Ties/unties the note at the cursor</entry>
<entry>Toggle Tie</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-voice-display</entry>
<entry>"Gets the value of the display field (a string) of the voice directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PushClipboard</entry>
<entry>"Pushes the Denemo clipboard (cut/copy buffer) onto a stack; Use d-PopClipboard to retrieve it."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>NextDirectiveOfTag</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-prefix</entry>
<entry>"Writes the prefix field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>HideOssia</entry>
<entry>Place this at the end of the music to be printed from the Ossia staff</entry>
<entry>Hide Ossia</entry>
<entry>/ObjectMenu/StaffMenu/Ossia</entry>
</row>
<row>
<entry>EditKeysigDirective</entry>
<entry>Edit any directives attached to key signature.</entry>
<entry>Edit Key Signature Directives</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertTiedNote</entry>
<entry>Inserts a duplicate of the current note, tied</entry>
<entry>Tied note</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-graphic</entry>
<entry>"Writes the graphic field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-standalone?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetPadding</entry>
<entry>"Returns the padding that has been set by dragging in the Print view window"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>RemoveDot</entry>
<entry>No Tooltip yet</entry>
<entry>Remove Dot</entry>
<entry>--</entry>
</row>
<row>
<entry>Chordize</entry>
<entry>"Enforces the treatment of the note at the cursor as a chord in LilyPond"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DrumGM2Custom</entry>
<entry>Convert General Midi drum-staffs to user-notation drum-staffs. Please edit the script to enter your own values.</entry>
<entry>Drum GM2 Custom </entry>
<entry>/MainMenu/EditMenu/MIDI</entry>
</row>
<row>
<entry>AddDot</entry>
<entry>No Tooltip yet</entry>
<entry>Add Dot</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-override</entry>
<entry>"Gets the value of the override field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-voice-postfix</entry>
<entry>"Writes the postfix field (a string) of the voice directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AdjustPlaybackEnd</entry>
<entry>"Adjust end time for playback by passed number of seconds. Returns #f for bad parameter "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PrevDirectiveOfTag</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-display</entry>
<entry>"Writes the display field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EditTimesigDirective</entry>
<entry>Edit any directives attached to time signature.</entry>
<entry>Edit Time Signature Directives</entry>
<entry>--</entry>
</row>
<row>
<entry>StemDown</entry>
<entry>Alters a StemNeutral object to stem down.</entry>
<entry>StemDown</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-postfix</entry>
<entry>"Writes the postfix field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ReminderAccidental</entry>
<entry>Shows the accidental in the print out inside (). Display shows accidental but plain.</entry>
<entry>Reminder Accidental</entry>
<entry>/ObjectMenu/NotesRests/EditNote</entry>
</row>
<row>
<entry>EditClefDirective</entry>
<entry>Edit any directives attached to clef.</entry>
<entry>Edit Clef Directives</entry>
<entry>--</entry>
</row>
<row>
<entry>StemUp</entry>
<entry>Alters a StemNeutral object to stem up.</entry>
<entry>StemUp</entry>
<entry>--</entry>
</row>
<row>
<entry>PrevStandaloneDirective</entry>
<entry>"Moves the cursor the previous object that is a Denemo Directive in the current staff. Returns #f if the cursor did not move"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-display</entry>
<entry>"Gets the value of the display field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ShowOssia</entry>
<entry>Place this at the end of the music to be printed from the Ossia staff</entry>
<entry>Show Ossia</entry>
<entry>/ObjectMenu/StaffMenu/Ossia</entry>
</row>
<row>
<entry>EditMovementDirective</entry>
<entry>Edit any directives attached to movement.</entry>
<entry>Edit Movement Directives</entry>
<entry>--</entry>
</row>
<row>
<entry>Flatten</entry>
<entry>No Tooltip yet</entry>
<entry>Flatten</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-voice-prefix</entry>
<entry>"Writes the prefix field (a string) of the voice directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AdjustPlaybackStart</entry>
<entry>"Adjust start time for playback by passed number of seconds. Returns #f for bad parameter "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-paper</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a paper directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetOffset</entry>
<entry>"Returns the offset that has been set by dragging in the Print view window"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Sharpen</entry>
<entry>No Tooltip yet</entry>
<entry>Sharpen</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-prefix</entry>
<entry>"Writes the prefix field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ApplyToSelection</entry>
<entry>Followed by a shortcut: applies the shortcut to each note in the selection.</entry>
<entry>Apply Shortcut to Notes in Selection</entry>
<entry>/MainMenu/EditMenu/Select</entry>
</row>
<row>
<entry>NonPrintingStaff</entry>
<entry>Hides the staff in LilyPond print out.</entry>
<entry>Non-Printing Staff</entry>
<entry>/ObjectMenu/StaffMenu</entry>
</row>
<row>
<entry>RemoveNoteFromChord</entry>
<entry>Remove a note from the current chord</entry>
<entry>Remove note</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-override</entry>
<entry>"Gets the value of the override field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>NextStandaloneDirective</entry>
<entry>"Moves the cursor the next object that is a Denemo Directive in the current staff. Returns #f if the cursor did not move"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>FirstChordInSelection</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-graphic</entry>
<entry>"Writes the graphic field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EditScoreDirective</entry>
<entry>Edit any directives attached to score.</entry>
<entry>Edit Score Directives</entry>
<entry>--</entry>
</row>
<row>
<entry>AddNoteToChord</entry>
<entry>Add a note to the current chord
The cursor position determines which note to add</entry>
<entry>Add note</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-voice-display</entry>
<entry>"Writes the display field (a string) of the voice directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetPlaybackInterval</entry>
<entry>"Set start and/or end time for playback to the passed numbers/strings in seconds. Use #t if a value is not to be changed. Returns #f for bad parameters "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>NextChordInSelection</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-paper</entry>
<entry>"Deletes a paper directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CautionaryAccidental</entry>
<entry>Forces the accidental on the note to be printed.</entry>
<entry>Cautionary Accidental</entry>
<entry>/ObjectMenu/NotesRests/EditNote</entry>
</row>
<row>
<entry>EditVoiceDirective</entry>
<entry>Edit any directives attached to voice.</entry>
<entry>Edit Voice Directives</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertSeptuplet</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Septuplet</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-display</entry>
<entry>"Writes the display field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>%module-public-interface</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EditStaffDirective</entry>
<entry>Edit any directives attached to staff.</entry>
<entry>Edit Staff Directives</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertSextuplet</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Sextuplet</entry>
<entry>--</entry>
</row>
<row>
<entry>CreateOssiaStaff</entry>
<entry>Creates a small staff above the current staff for inserting cues, ossia passages etc. Use Show Ossia and Hide Ossia to show specific measures.</entry>
<entry>Create Ossia Staff</entry>
<entry>/ObjectMenu/StaffMenu/Ossia</entry>
</row>
<row>
<entry>PrevNote</entry>
<entry>"Moves the cursor the previous object of type CHORD which is not a rest in the current staff. Returns #f if the cursor did not move"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Chord?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-postfix</entry>
<entry>"Writes the postfix field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertQuintuplet</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Quintuplet</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-staff-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the staff directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetTextSelection</entry>
<entry>"Returns the text on the clipboard"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-height</entry>
<entry>"Gets the value of the height field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetMidiOffTime</entry>
<entry>"Return a number, the midi time in seconds for the end of the object at the cursor; return #f if none "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleTripleting</entry>
<entry>Inserts a start triplet or end tuple alternately.</entry>
<entry>Toggle Triplet Entry Off/On</entry>
<entry>/ObjectMenu/NotesRests/Tuplets</entry>
</row>
<row>
<entry>InsertQuadtuplet</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Quadtuplet</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-midibytes</entry>
<entry>"Writes the midibytes field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>UploadRoutine</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-keysig</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a keysig directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EditDirective</entry>
<entry>Edit any directives attached to chord/note at cursor.</entry>
<entry>Edit Directives</entry>
<entry>--</entry>
</row>
<row>
<entry>EndTuplet</entry>
<entry>No Tooltip yet</entry>
<entry>End Tuplet</entry>
<entry>--</entry>
</row>
<row>
<entry>NextNote</entry>
<entry>"Moves the cursor the next object of type CHORD which is not a rest in the current staff. Returns #f if the cursor did not move"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SingleAndSelectionSwitcher</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-prefix</entry>
<entry>"Writes the prefix field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Fortissimo</entry>
<entry>Places a ff sign on the chord at the cursor</entry>
<entry>Fortissimo</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Dynamic Markings</entry>
</row>
<row>
<entry>EditObject</entry>
<entry>Edit the object at the cursor.</entry>
<entry>Edit Object</entry>
<entry>--</entry>
</row>
<row>
<entry>StartTriplet</entry>
<entry>No Tooltip yet</entry>
<entry>Start Triplet</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-staff-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the staff directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>NextSelectedObjectAllStaffs</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-width</entry>
<entry>"Gets the value of the width field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetMidiOnTime</entry>
<entry>"Return a number, the midi time in seconds for the start of the object at the cursor; return #f if none "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertLilyDirective</entry>
<entry>Insert or edit a directive in the LilyPond music typesetting language. This can be used for extra spacing, transposing or almost anything. See LilyPond documentation for ideas.</entry>
<entry>Insert Lilypond</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertTriplet</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Triplet</entry>
<entry>--</entry>
</row>
<row>
<entry>FindEditPoint</entry>
<entry>Searches backward for the start of non-printing notes.</entry>
<entry>Find Edit Point</entry>
<entry>/MainMenu/NavigationMenu/Seek</entry>
</row>
<row>
<entry>DirectiveDelete-keysig</entry>
<entry>"Deletes a keysig directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CursorGoDown</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertDuplet</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Duplet</entry>
<entry>--</entry>
</row>
<row>
<entry>GetOption</entry>
<entry>"create a dialog with the options &amp; return the one chosen, of #f if the user cancels"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ParseJson</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PrevChord</entry>
<entry>"Moves the cursor the the previous object of type CHORD in the current staff. Returns #f if the cursor did not move"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-clef-display</entry>
<entry>"Writes the display field (a string) of the clef directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ReBar</entry>
<entry>Removes gaps. redistributes the notes following the time signature.</entry>
<entry>Adjust the Barlines</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>InsertSixtyfourthRest</entry>
<entry>Insert sixty-fourth note rest</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;x&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-staff-display</entry>
<entry>"Gets the value of the display field (a string) of the staff directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-override</entry>
<entry>"Gets the value of the override field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-score-midibytes</entry>
<entry>"Writes the midibytes field (a string) of the score directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MasterVolume</entry>
<entry>"Takes a double or string and scales the volume; returns the volume set "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertDynamic</entry>
<entry>Inserts a dynamic marking at the cursor position</entry>
<entry>Insert Dynamics</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertThirtysecondRest</entry>
<entry>Insert thirty-second note rest</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;w&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-height</entry>
<entry>"Gets the value of the height field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CursorGoUp</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EditChords</entry>
<entry>Allows chord symbols to be added to the current note. E.G.cis:dim7 for c-sharp diminished 7th. See Lilypond docs for notation</entry>
<entry>Edit Chord Symbols</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertSixteenthRest</entry>
<entry>Insert sixteenth-note rest</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;v&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>Glissando</entry>
<entry>Inserts a glissando</entry>
<entry>Glissando</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks</entry>
</row>
<row>
<entry>NextChord</entry>
<entry>"Moves the cursor the the next object of type CHORD in the current staff. Returns #f if the cursor did not move"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetHighestNote</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-height</entry>
<entry>"Gets the value of the height field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>HideFiguredBass</entry>
<entry>Hide the figured bass on the current staff on printing</entry>
<entry>Hide Figures (Print)</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertEighthRest</entry>
<entry>Insert eighth-note rest</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;u&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-staff-postfix</entry>
<entry>"Writes the postfix field (a string) of the staff directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MultiMeasureRests</entry>
<entry>Creates a multi-measure rest from the whole measure rests after the cursor. You must create the whole measure rests first.</entry>
<entry>Multi-Measure Rests</entry>
<entry>/ObjectMenu/NotesRests/RestEntry</entry>
</row>
<row>
<entry>GetLowestNote</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-gy</entry>
<entry>"Gets the value of the gy field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MovementTempo</entry>
<entry>"Takes an integer or string number of beats (quarter notes) per minute as the tempo for the current movement; returns the tempo set "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertQuarterRest</entry>
<entry>Insert quarter-note rest</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;t&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-width</entry>
<entry>"Gets the value of the width field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>IRC</entry>
<entry>Runs your browser on a page giving access to denemo's internet relay chat</entry>
<entry>Chat to Other Users</entry>
<entry>/MainMenu/HelpMenu</entry>
</row>
<row>
<entry>InsertHalfRest</entry>
<entry>Insert half-note rest</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;s&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>PrevSelectedObject</entry>
<entry>"Moves the cursor to the previous object in the selection. Returns #t if the cursor moved"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-height</entry>
<entry>"Gets the value of the height field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-voice-midibytes</entry>
<entry>"Writes the midibytes field (a string) of the voice directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteFiguredBass</entry>
<entry>Delete the figured bass on the current staff</entry>
<entry>Delete Figures</entry>
<entry>--</entry>
</row>
<row>
<entry>replace-nth</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertWholeRest</entry>
<entry>Insert whole-note rest</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;r&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-staff-prefix</entry>
<entry>"Writes the prefix field (a string) of the staff directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ANS-7::Base7NoteTable</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>HideMenus</entry>
<entry>"Hides all the menus"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-gx</entry>
<entry>"Gets the value of the gx field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MasterTempo</entry>
<entry>"Takes a double or string and scales the tempo; returns the tempo set "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EditFiguredBass</entry>
<entry>Add a bass figure to the current note. Use | sign to split the duration of a note so as to have multiple figures on one note. See Lilypond docs for other notation</entry>
<entry>Insert/Edit Figured Bass</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleBlankMode</entry>
<entry>No Tooltip yet</entry>
<entry>Toggle Blank Mode</entry>
<entry>--</entry>
</row>
<row>
<entry>DoubleBarline</entry>
<entry>Insert a double barline at cursor position.</entry>
<entry>Double Bar</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>DirectiveGet-keysig-override</entry>
<entry>"Gets the value of the override field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteVerse</entry>
<entry>Deletes current verse of lyrics from current voice</entry>
<entry>Delete Verse</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleRestMode</entry>
<entry>No Tooltip yet</entry>
<entry>Toggle Rest Mode</entry>
<entry>--</entry>
</row>
<row>
<entry>OpenOctaveDown</entry>
<entry>Opens a block printing an octave lower</entry>
<entry>(Print) Open { Octave Down</entry>
<entry>/ObjectMenu/Directives/Print Transpositions</entry>
</row>
<row>
<entry>NextSelectedObject</entry>
<entry>"Moves the cursor to the next object in the selection. Returns #t if the cursor moved"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-height</entry>
<entry>"Gets the value of the height field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_RAMP</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetScoreHeaderField</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBlankTwoHundredFiftySixthNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank two hundred and fifty sixth Note</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-staff-display</entry>
<entry>"Writes the display field (a string) of the staff directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRest8</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-ty</entry>
<entry>"Gets the value of the ty field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_RELATIVE</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Zoom</entry>
<entry>"Takes a double or string and scales the display; return #f for invalid value else #t "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GoToEmptyMeasure</entry>
<entry>Move cursor to the next point in the current staff where the music ends.</entry>
<entry>Go To Next Empty Measure</entry>
<entry>/MainMenu/NavigationMenu/Seek</entry>
</row>
<row>
<entry>DocumentCommand</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBlankOneHundredTwentyEighthNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank one hundred and twenty eighth Note</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertRest8</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>latex-escape</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-staff-midibytes</entry>
<entry>"Writes the midibytes field (a string) of the staff directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_PERCENT</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-gy</entry>
<entry>"Gets the value of the gy field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddVerse</entry>
<entry>Add a verse of lyrics</entry>
<entry>Add Lyric Verse</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBlankSixtyfourthNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank Sixty Forth Note</entry>
<entry>--</entry>
</row>
<row>
<entry>Set8</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>PrevObjectInMeasure</entry>
<entry>"Moves the cursor to the previous object in the current measure, returning #f if the cursor was on the first object"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-width</entry>
<entry>"Gets the value of the width field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_MIDI_MASK</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertStem</entry>
<entry>Inserts a stem neutral object. After this automatic stem directions are active. You can click on this tag and use Sharpen/StemUp etc commands to change stem direction</entry>
<entry>Auto Stemming</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBlankThirtysecondNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank Thirty Second Note</entry>
<entry>--</entry>
</row>
<row>
<entry>StringNum</entry>
<entry>Followed by a number, places string number on note.</entry>
<entry>String Number</entry>
<entry>/ObjectMenu/NotesRests/Markings/Strings</entry>
</row>
<row>
<entry>DirectiveGet-paper-tx</entry>
<entry>"Gets the value of the tx field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_MIDI_INTERPRETATION_MASK</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>LoadCommandset</entry>
<entry>"Takes a file name for xml format commandset, loads commands, returns #f if it fails"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeNotehead</entry>
<entry>Change the type of notehead for the current note</entry>
<entry>Set Notehead</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBlankSixteenthNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank Sixteenth Note</entry>
<entry>--</entry>
</row>
<row>
<entry>NextHigher</entry>
<entry>Move cursor to next note higher than cursor posiiton</entry>
<entry>Next Higher</entry>
<entry>/MainMenu/NavigationMenu/Seek</entry>
</row>
<row>
<entry>scheme-escape</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_MIDI_ACTION_MASK</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-gx</entry>
<entry>"Gets the value of the gx field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBlankEighthNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank Eigth Note</entry>
<entry>--</entry>
</row>
<row>
<entry>Change8</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>NextObjectInMeasure</entry>
<entry>"Moves the cursor to the next object in the current measure, returning #f if there were no more objects to the left in the current measure"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-width</entry>
<entry>"Gets the value of the width field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_DYNAMIC</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ParenthesizeNote</entry>
<entry>Enclose the note at the cursor in ( ) when printed.</entry>
<entry>Parenthesize Note</entry>
<entry>/ObjectMenu/NotesRests</entry>
</row>
<row>
<entry>InsertBlankQuarterNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank Quarter Note</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert8</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-y</entry>
<entry>"Gets the value of the y field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-midibytes</entry>
<entry>"Writes the midibytes field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SaveKeybindings</entry>
<entry>"Takes a file name, saves keybindings from actions/menus returns #f if it fails"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertTimeSig</entry>
<entry>Edit/Insert a time signature change for the current measure</entry>
<entry>Time Signature Change</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBlankHalfNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank Half Note</entry>
<entry>--</entry>
</row>
<row>
<entry>DENEMO_OVERRIDE_HIDDEN</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>8</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;8&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-ty</entry>
<entry>"Gets the value of the ty field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InitialTimeSig</entry>
<entry>Set the initial time signature of the current staff</entry>
<entry>Inital Time Signature</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertBlankWholeNote</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Blank Whole Note</entry>
<entry>--</entry>
</row>
<row>
<entry>LHFinger</entry>
<entry>Followed by a number, print Left Hand fingering on note</entry>
<entry>Left Hand Fingering</entry>
<entry>/ObjectMenu/NotesRests/Markings/Strings</entry>
</row>
<row>
<entry>VERSION_MAJOR</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>html-escape</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PrevObject</entry>
<entry>"Moves the cursor to the left returning #t if the cursor moved"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-width</entry>
<entry>"Gets the value of the width field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertKey</entry>
<entry>Insert/Edit a key change at the cursor position</entry>
<entry>Key Signature Change</entry>
<entry>--</entry>
</row>
<row>
<entry>TwoHundredFiftySixthNote</entry>
<entry>Insert 256th-note</entry>
<entry>256th</entry>
<entry>--</entry>
</row>
<row>
<entry>VERSION_MINOR</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Adagio</entry>
<entry>Attaches tempo marking to chord at cursor</entry>
<entry>Adagio</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Tempo Indications</entry>
</row>
<row>
<entry>DirectiveGet-paper-x</entry>
<entry>"Gets the value of the x field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-display</entry>
<entry>"Gets the value of the display field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>LoadKeybindings</entry>
<entry>"Takes a file name, loads keybindings from actions/menus returns #f if it fails"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>VERSION_MICRO</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRest7</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>OneHundredTwentyEighthNote</entry>
<entry>Insert 128th-note</entry>
<entry>128th</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-tx</entry>
<entry>"Gets the value of the tx field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ParenthesizeChord</entry>
<entry>Enclose the chord in ( ) on printing.</entry>
<entry>Parenthesize Chord</entry>
<entry>/ObjectMenu/ChordMenu</entry>
</row>
<row>
<entry>InsertRest7</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>NextObject</entry>
<entry>"Moves the cursor to the right returning #t if this was possible"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-gy</entry>
<entry>"Gets the value of the gy field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SixtyfourthNote</entry>
<entry>Insert sixty-fourth-note</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-midibytes</entry>
<entry>"Writes the midibytes field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InitialKey</entry>
<entry>Set the initial key signature of the current staff</entry>
<entry>Initial Key</entry>
<entry>--</entry>
</row>
<row>
<entry>Set7</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>ThirtysecondNote</entry>
<entry>Insert thirty-second-note</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-override</entry>
<entry>"Writes the override field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-postfix</entry>
<entry>"Writes the postfix field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetHelp</entry>
<entry>"Takes a command name and returns the tooltip or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertClef</entry>
<entry>Insert/Edit a change of clef at the cursor</entry>
<entry>Clef Change</entry>
<entry>--</entry>
</row>
<row>
<entry>SetFontSize</entry>
<entry>Choose the font size of for the score, and hence how much space it takes up.</entry>
<entry>(Print)Set Overall Score Size</entry>
<entry>/ObjectMenu/Score</entry>
</row>
<row>
<entry>CHORD</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SixteenthNote</entry>
<entry>Insert sixteenth-note</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-y</entry>
<entry>"Gets the value of the y field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InitialClef</entry>
<entry>Change the initial clef of the current staff</entry>
<entry>Initial Clef</entry>
<entry>--</entry>
</row>
<row>
<entry>TUPOPEN</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>FiguredBassFilterOn</entry>
<entry>Start filtering MIDI events, First note is bass, hold this down while entering notes for figures. Pedal changes harmony on same bass.</entry>
<entry>Figured Bass Filter On</entry>
<entry>/MainMenu/InputMenu/MIDI</entry>
</row>
<row>
<entry>DiatonicShift</entry>
<entry>"Moves the note at the cursor by the number of diatonic steps passed in"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-gy</entry>
<entry>"Writes the gy field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EighthNote</entry>
<entry>Insert eighth-note</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>TUPCLOSE</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Change7</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>QuarterNote</entry>
<entry>Insert quarter-note</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-gy</entry>
<entry>"Writes the gy field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-prefix</entry>
<entry>"Writes the prefix field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetSaved</entry>
<entry>"Sets the status of the current musical score to saved"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>TitlePage</entry>
<entry>Makes this movement a title page (no music)</entry>
<entry>Set Movement as Title Page</entry>
<entry>/ObjectMenu/Score/Titles Etc</entry>
</row>
<row>
<entry>CLEF</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert7</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>HalfNote</entry>
<entry>Insert half-note</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-midibytes</entry>
<entry>"Writes the midibytes field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-x</entry>
<entry>"Gets the value of the x field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>StaffProperties</entry>
<entry>Change the properties of the current staff</entry>
<entry>Staff Properties</entry>
<entry>--</entry>
</row>
<row>
<entry>TIMESIG</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>7</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;7&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>string-needs-escape?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PutNoteName</entry>
<entry>"Takes a LilyPond note name, and changes the note at the cursor to that note"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-gx</entry>
<entry>"Gets the value of the gx field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>WholeNote</entry>
<entry>Insert whole-note</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>AddVoice</entry>
<entry>Adds a new voice (part), to the current staff. It is tricky to switch between the voices. Suggest to use merge staffs</entry>
<entry>Add Voice</entry>
<entry>--</entry>
</row>
<row>
<entry>ApplyToSelection</entry>
<entry>Followed by a shortcut: applies the shortcut to each note in the selection.</entry>
<entry>Apply Shortcut to Notes in Selection</entry>
<entry>/MainMenu/EditMenu/Select</entry>
</row>
<row>
<entry>KEYSIG</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>string-escape</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>OctaveDown</entry>
<entry>Octave Down</entry>
<entry>Octave Down</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-gx</entry>
<entry>"Writes the gx field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-display</entry>
<entry>"Writes the display field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>RefreshDisplay</entry>
<entry>"Re-draws the Denemo display, which can have side effects on the data"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ANS-7::CalculateDiatonicStep</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>BARLINE</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertWholeMeasureRest</entry>
<entry>Inserts/Appends a rest measure; if the current measure is empty, it simply places the whole measure rest in it. Do not invoke in a populated measure preceding an empty measure.</entry>
<entry>Insert Whole Measure Rest</entry>
<entry>/ObjectMenu/NotesRests/RestEntry</entry>
</row>
<row>
<entry>char-escape-spec</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteAfter</entry>
<entry>Deletes the staff after the current staff</entry>
<entry>Delete Staff After</entry>
<entry>--</entry>
</row>
<row>
<entry>OctaveUp</entry>
<entry>Octave Up</entry>
<entry>Octave Up</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-override</entry>
<entry>"Writes the override field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ANS-7::-</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>STEMDIRECTIVE</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRest6</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeChordNotes</entry>
<entry>"Takes a string of LilyPond note names. Replaces the notes of the chord at the cursor with these notes, preserving other attributes"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-gx</entry>
<entry>"Writes the gx field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>G</entry>
<entry>Append/Edit  G</entry>
<entry>G</entry>
<entry>--</entry>
</row>
<row>
<entry>MEASUREBREAK</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertRest6</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>string-escaper</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteDynamic</entry>
<entry>Deletes a dynamic attached to the chord at the cursor.</entry>
<entry>Delete</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Dynamic Markings</entry>
</row>
<row>
<entry>F</entry>
<entry>Append/Edit  F</entry>
<entry>F</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-midibytes</entry>
<entry>"Gets the value of the midibytes field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetNoteAsMidi</entry>
<entry>"Returns the MIDI key number for the note at the cursor, or 0 if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-ty</entry>
<entry>"Writes the ty field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>STAFFBREAK</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set6</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteStaff</entry>
<entry>Deletes the current staff</entry>
<entry>Delete Current Staff</entry>
<entry>--</entry>
</row>
<row>
<entry>E</entry>
<entry>Append/Edit  E</entry>
<entry>E</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-gy</entry>
<entry>"Writes the gy field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ANS-7::+</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>RepeatEndStart</entry>
<entry>Inserts a barline ending one repeated section and starting another</entry>
<entry>Repeat End-Start</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>DYNAMIC</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CreateButton</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetPrevailingKeysig</entry>
<entry>"Returns the prevailing keysignature at the cursor"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteBefore</entry>
<entry>Deletes the staff before the current staff</entry>
<entry>Delete Staff Before</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-ty</entry>
<entry>"Gets the value of the ty field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>D</entry>
<entry>Append/Edit  D</entry>
<entry>D</entry>
<entry>--</entry>
</row>
<row>
<entry>GRACE_START</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Largo</entry>
<entry>Attaches Largo to chord</entry>
<entry>Largo</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Tempo Indications</entry>
</row>
<row>
<entry>AddLast</entry>
<entry>Inserts a new staff at the end of the score</entry>
<entry>Add Last Staff</entry>
<entry>--</entry>
</row>
<row>
<entry>C</entry>
<entry>Append/Edit  C</entry>
<entry>C</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-timesig</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetCursorNoteAsMidi</entry>
<entry>"Gets the MIDI key number for the note-position where the cursor is"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ANS-7::MakeWhiteKey</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-tx</entry>
<entry>"Writes the tx field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GRACE_END</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Change6</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>B</entry>
<entry>Append/Edit  B</entry>
<entry>B</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-gx</entry>
<entry>"Writes the gx field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>LYRIC</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert6</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>CursorToNote</entry>
<entry>"Takes LilyPond note name string. Moves the cursor to the line or space"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MezzoForte</entry>
<entry>Attach mf indication to a chord.</entry>
<entry>Mezzo Forte</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Dynamic Markings</entry>
</row>
<row>
<entry>DirectivePut-standalone-ty</entry>
<entry>"Writes the ty field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>A</entry>
<entry>Append/Edit  A</entry>
<entry>A</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-score-midibytes</entry>
<entry>"Gets the value of the midibytes field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ANS-7::Ans2Ly</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>FIGURE</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>6</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;6&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>AddInitial</entry>
<entry>Inserts a new staff at the top of the score</entry>
<entry>Add Initial Staff</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToMeasureRight</entry>
<entry>Moves the cursor to the first object in the previous measureleaving selection, if any, unchanged</entry>
<entry>Move to Measure Right</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-display</entry>
<entry>"Gets the value of the display field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>BassFigure</entry>
<entry>"Returns a string for the bass figure for the two MIDI keys passed in"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-y</entry>
<entry>"Writes the y field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>RepeatEnd</entry>
<entry>Insert a barline indicating the end of a repeated section.</entry>
<entry>Repeat End Barline</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>LILYDIRECTIVE</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddAfter</entry>
<entry>Inserts/Adds a new staff after the current staff</entry>
<entry>Add Staff After</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToMeasureLeft</entry>
<entry>Moves the cursor to the first object in the next measure leaving selection, if any, unchanged</entry>
<entry>Move to Measure Left</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-ty</entry>
<entry>"Writes the ty field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>OneShotTimer</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ANS-7::Ly2Ans</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetScoreSize::Set</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>FAKECHORD</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>FindNextLowerNote</entry>
<entry>Moves cursor to next note that is lower than the cursor.</entry>
<entry>Next Lower</entry>
<entry>/MainMenu/NavigationMenu/Seek</entry>
</row>
<row>
<entry>InsertMovementAfter</entry>
<entry>Insert a new movement after the current one</entry>
<entry>Insert Movement After</entry>
<entry>--</entry>
</row>
<row>
<entry>AddBefore</entry>
<entry>Inserts a new staff before the current staff</entry>
<entry>Add Staff Before</entry>
<entry>--</entry>
</row>
<row>
<entry>MeasureRight</entry>
<entry>Moves the cursor to the first object in the previous measure, extending selection if any</entry>
<entry>Measure Right</entry>
<entry>--</entry>
</row>
<row>
<entry>PlayMidiKey</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-tx</entry>
<entry>"Gets the value of the tx field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PARTIAL</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRest5</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertMovementBefore</entry>
<entry>Insert a new movement before the current one</entry>
<entry>Insert Movement Before</entry>
<entry>--</entry>
</row>
<row>
<entry>MeasureLeft</entry>
<entry>Moves the cursor to the first object in the next measure, extending selection if any</entry>
<entry>Measure Left</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-postfix</entry>
<entry>"Writes the postfix field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-timesig?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>OutputMidiBytes</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-x</entry>
<entry>"Writes the x field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertRest5</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>NewWindow</entry>
<entry>Create working area (tab with an empty score in it)</entry>
<entry>New Tab</entry>
<entry>--</entry>
</row>
<row>
<entry>SetTransposeIntervalFromNote</entry>
<entry>Sets the current note as the note that c should transpose to.</entry>
<entry>Set Transpose Interval from Note</entry>
<entry>/MainMenu/EditMenu/Transpose</entry>
</row>
<row>
<entry>MoveToStaffDown</entry>
<entry>Moves the cursor to the staff below  without altering selection</entry>
<entry>Move to Staff Down</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-voice-midibytes</entry>
<entry>"Gets the value of the midibytes field (a string) of the voice directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-keysig</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-tx</entry>
<entry>"Writes the tx field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PutMidi</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set5</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>SaveTemplate</entry>
<entry>Save the score as a template for re-use as a starting point for new scores</entry>
<entry>Save Template</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToVoiceDown</entry>
<entry>Go to the lower numbered voice on this staff without altering selection</entry>
<entry>Move to Voice Down</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToStaffUp</entry>
<entry>Moves the cursor to the staff above without altering selection</entry>
<entry>Move to Staff Up</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-tx</entry>
<entry>"Writes the tx field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>RepeatStart</entry>
<entry>Insert a barline indicating the start of a repeated section.</entry>
<entry>Repeat Start Barline</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>OpenMyTemplate</entry>
<entry>Start a new score from one of your own template files</entry>
<entry>Open custom template</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveToVoiceUp</entry>
<entry>Go to the higher numbered voice on staff without altering selection</entry>
<entry>Move to Voice Up</entry>
<entry>--</entry>
</row>
<row>
<entry>StaffDown</entry>
<entry>Moves the cursor to the staff below, extending selection if any</entry>
<entry>Staff Down</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-prefix</entry>
<entry>"Writes the prefix field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveNoteToCursor</entry>
<entry>Moves the nearest note to join the cursor</entry>
<entry>To Cursor</entry>
<entry>/ObjectMenu/NotesRests/EditNote</entry>
</row>
<row>
<entry>ShortMeasure</entry>
<entry>Allow too few notes/rests in this measure. LilyPond will engrave this measure (in all staffs) with the short duration given by notes already present when this command was issued.</entry>
<entry>Short Measure</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>OpenExample</entry>
<entry>Start a new score from a built-in example</entry>
<entry>Open Example</entry>
<entry>--</entry>
</row>
<row>
<entry>VoiceDown</entry>
<entry>Go to the lower numbered voice on this staff, extending selection if any</entry>
<entry>Voice Down</entry>
<entry>--</entry>
</row>
<row>
<entry>StaffUp</entry>
<entry>Moves the cursor to the staff above, extending selection if any</entry>
<entry>Staff Up</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-y</entry>
<entry>"Writes the y field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetMidi</entry>
<entry>"Intercepts a MIDI event and returns it as a 4 byte number"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ScriptCallback</entry>
<entry>"Takes the the name of a scripted command. Runs the script stored for that command. Scripts which invoke other scripted commands use this (implicitly?) "</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Change5</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>OpenTemplate</entry>
<entry>Start a new score from a built-in template file</entry>
<entry>Open Template</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleReduceToDrawingArea</entry>
<entry>Hides/Shows menus, panes etc. The ones shown are those checked in the view menu.</entry>
<entry>Hide/Show Menus</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-y</entry>
<entry>"Gets the value of the y field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert5</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>SaveAs</entry>
<entry>Save the score under a new name</entry>
<entry>Save As</entry>
<entry>--</entry>
</row>
<row>
<entry>TransposeScorePrint</entry>
<entry>Prints the score transposed by the interval selected by SetTransposeIntervalFromSelection</entry>
<entry>(Print) Transposed</entry>
<entry>/ObjectMenu/Score</entry>
</row>
<row>
<entry>PopPushPosition</entry>
<entry>Pops a position from the stack of cursor positions, pushes the current position, then moves the cursor to the popped position</entry>
<entry>Pop and Push Position</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-staff-midibytes</entry>
<entry>"Gets the value of the midibytes field (a string) of the staff directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-display</entry>
<entry>"Writes the display field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>5</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;5&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>Save</entry>
<entry>Save the score</entry>
<entry>Save</entry>
<entry>--</entry>
</row>
<row>
<entry>VoiceUp</entry>
<entry>Go to the higher numbered voice on staff, extending selection if any</entry>
<entry>Voice Up</entry>
<entry>--</entry>
</row>
<row>
<entry>PopPosition</entry>
<entry>Pops a position from the stack of cursor positions, moving the cursor there</entry>
<entry>Pop Position</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-keysig?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-x</entry>
<entry>"Writes the x field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetPassword</entry>
<entry>"Asks the user for a password which is returned"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Anacrusis</entry>
<entry>Insert a LilyPond Directive to give an eighth note upbeat</entry>
<entry>Insert Anacrusis</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>SwapMovements</entry>
<entry>Swap this movement with the one before</entry>
<entry>Swap Movements</entry>
<entry>--</entry>
</row>
<row>
<entry>PushPosition</entry>
<entry>Pushes the current cursor position onto a stack</entry>
<entry>Push Position</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-clef</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>OpenNewWindow</entry>
<entry>Open a file containing a music score for editing in a separate working area (tab</entry>
<entry>Open In New</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-y</entry>
<entry>"Writes the y field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ShortInstrumentName</entry>
<entry>Prints shortened form of instrument name before this staff
for second and subsequent systems</entry>
<entry>Short Instrument Name</entry>
<entry>/ObjectMenu/StaffMenu</entry>
</row>
<row>
<entry>JoinVoices</entry>
<entry>Merge this staff as a voice on the previous staff</entry>
<entry>Join Voices</entry>
<entry>--</entry>
</row>
<row>
<entry>GoToSelectionStart</entry>
<entry>Moves the cursor to the first object in the selection without altering the selection. returns #f if no selection</entry>
<entry>To Selection Start</entry>
<entry>--</entry>
</row>
<row>
<entry>MovementProps</entry>
<entry>Change properties of this movement</entry>
<entry>Change Properties</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-paper-display</entry>
<entry>"Gets the value of the display field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>StartDownStems</entry>
<entry>Stems from now on point downward.</entry>
<entry>Stems Down</entry>
<entry>/ObjectMenu/NotesRests/StemControl</entry>
</row>
<row>
<entry>ChangeRest4</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>SwapPointAndMark</entry>
<entry>Swaps the active end of the selection</entry>
<entry>Swap Ends of Selection</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-postfix</entry>
<entry>"Gets the value of the postfix field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddMovements</entry>
<entry>Add movements from a Denemo file</entry>
<entry>Add Movement</entry>
<entry>--</entry>
</row>
<row>
<entry>GetUserName</entry>
<entry>"Asks the user for a user name which is returned"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertRest4</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>PageBreak</entry>
<entry>(Print) Forces a new page at this barline.</entry>
<entry>Page Break</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>GoToMark</entry>
<entry>Moves the cursor to the Mark without altering the selection</entry>
<entry>To Mark</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-midibytes</entry>
<entry>"Gets the value of the midibytes field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AddStaffs</entry>
<entry>Add staffs from a Denemo file</entry>
<entry>Add Staffs</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-x</entry>
<entry>"Gets the value of the x field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set4</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>SplitVoices</entry>
<entry>Split off the next voice as a separate staff</entry>
<entry>Split Voices</entry>
<entry>--</entry>
</row>
<row>
<entry>MoveCursorRight</entry>
<entry>Moves the cursor one object right, without altering the selection</entry>
<entry>Move Cursor Right</entry>
<entry>--</entry>
</row>
<row>
<entry>Open</entry>
<entry>Open a file containing a music score for editing</entry>
<entry>Open</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-graphic</entry>
<entry>"Writes the graphic field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MetronomeMarking</entry>
<entry>Adds a metronome marking to chord. Give the duration in LilyPond notation.</entry>
<entry>Add Metronome Marking to Chord</entry>
<entry>/ObjectMenu/ChordMenu/Markings/Metronome Markings</entry>
</row>
<row>
<entry>SwapStaffs</entry>
<entry>Swap this staff with the one higher up. Note this actually swaps voices.</entry>
<entry>Swap Staffs</entry>
<entry>--</entry>
</row>
<row>
<entry>CursorRight</entry>
<entry>Moves the cursor one object right, altering the selection if any</entry>
<entry>Cursor Right</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-prefix</entry>
<entry>"Gets the value of the prefix field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>New</entry>
<entry>Start a new musical score</entry>
<entry>New File</entry>
<entry>--</entry>
</row>
<row>
<entry>GetLyric</entry>
<entry>"Returns the lyric for the note at the cursor"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InstrumentName</entry>
<entry>Print Instrument name before staff at start of score,</entry>
<entry>Instrument Name</entry>
<entry>/ObjectMenu/StaffMenu</entry>
</row>
<row>
<entry>CommandManagement</entry>
<entry>View help, change and save keyboard shortcuts</entry>
<entry>Manage Command Set</entry>
<entry>--</entry>
</row>
<row>
<entry>CursorUp</entry>
<entry>Moves the cursor one scale step up</entry>
<entry>Cursor Up</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-clef?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>FlattenEnharmonicSet</entry>
<entry>Shifts the set of accidentals one step flatter</entry>
<entry>Shift Accidentals Flatwise</entry>
<entry>--</entry>
</row>
<row>
<entry>PutTextClipboard</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-standalone-x</entry>
<entry>"Writes the x field (a string) of the standalone directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>StartUpStems</entry>
<entry>Stems from now on point upward.</entry>
<entry>Stems Up</entry>
<entry>/ObjectMenu/NotesRests/StemControl</entry>
</row>
<row>
<entry>DirectiveGet-layout-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the layout directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Change4</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>CursorDown</entry>
<entry>Moves the cursor one scale step down</entry>
<entry>Cursor Down</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-voice</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SharpenEnharmonicSet</entry>
<entry>Shifts the set of accidentals one step sharper</entry>
<entry>Shift Accidentals Sharpwise</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-postfix</entry>
<entry>"Writes the postfix field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>LineBreak</entry>
<entry>(Print) Start a new line (i.e. system) at this measure.</entry>
<entry>Line Break</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>MoveCursorLeft</entry>
<entry>Moves the cursor one object left, without altering the selection</entry>
<entry>Move Cursor Left</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-midibytes</entry>
<entry>"Gets the value of the midibytes field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert4</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-display</entry>
<entry>"Gets the value of the display field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ExecuteScheme</entry>
<entry>Execute the scheme code from the scripting window</entry>
<entry>Execute Scheme</entry>
<entry>--</entry>
</row>
<row>
<entry>SaveAccels</entry>
<entry>Save the current commands and keyboard shortcuts as the default</entry>
<entry>Save Command Set</entry>
<entry>--</entry>
</row>
<row>
<entry>CursorLeft</entry>
<entry>Moves the cursor one object left, altering the selection if any</entry>
<entry>Cursor Left</entry>
<entry>--</entry>
</row>
<row>
<entry>4</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;4&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>AppendMeasureAllStaffs</entry>
<entry>Appends a blank measure to every staff in this movement</entry>
<entry>Append Measure All Staffs</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-movementcontrol</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a movementcontrol directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-gy</entry>
<entry>"Gets the value of the gy field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteLilyPondOnChord</entry>
<entry>Deletes the LilyPond attached to the chord at the cursor.</entry>
<entry>Delete LilyPond on Chord</entry>
<entry>/ObjectMenu/ChordMenu/Directives</entry>
</row>
<row>
<entry>DirectiveGet-paper-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the paper directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Preferences</entry>
<entry>Set and save your preferences for how Denemo operates on startup. Edit .denemo/denemorc for missing ones</entry>
<entry>Change Preferences</entry>
<entry>--</entry>
</row>
<row>
<entry>Rhythm</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>NextRhythm</entry>
<entry>Make next snippet
the current snippet.
Notes entered will follow the rhythmic pattern of this snippet</entry>
<entry>Next Snippet</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-prefix</entry>
<entry>"Writes the prefix field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SaveSelection</entry>
<entry>Save the selected music. Not sure if this is working</entry>
<entry>Save Selection</entry>
<entry>--</entry>
</row>
<row>
<entry>Blank</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SmallerStaff</entry>
<entry>Turns printing a smaller staff on/off. When on the staff will print in a smaller size. Use this for the solo part above a piano accompaniment</entry>
<entry>Smaller Staff (On/Off)</entry>
<entry>/ObjectMenu/StaffMenu</entry>
</row>
<row>
<entry>DirectivePut-keysig-graphic</entry>
<entry>"Writes the graphic field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertRhythm</entry>
<entry>No Tooltip yet</entry>
<entry>Insert Snippet</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertTiedNoteDuration</entry>
<entry>Attaches a tied note: you must give the duration after invoking this function.</entry>
<entry>Attach Tied Note</entry>
<entry>/ObjectMenu/NotesRests/TiedNotes</entry>
</row>
<row>
<entry>Rest</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRest3</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangePitch</entry>
<entry>No Tooltip yet</entry>
<entry>Change Pitch</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-gy</entry>
<entry>"Writes the gy field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-movementcontrol</entry>
<entry>"Deletes a movementcontrol directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>HideEmptyStaffs</entry>
<entry>Controls whether staffs containing only rests are printed.</entry>
<entry>Hide Empty Staffs (Off/On)</entry>
<entry>/ObjectMenu/Score/Print Layout</entry>
</row>
<row>
<entry>Note</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-midibytes</entry>
<entry>"Gets the value of the midibytes field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertRest3</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-voice?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ForceCaution</entry>
<entry>No Tooltip yet</entry>
<entry>Force Cautionary Accidental</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-display</entry>
<entry>"Writes the display field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ScoreProperties</entry>
<entry>Change some of the properties of the current score. This will start up a dialog window</entry>
<entry>Score Properties</entry>
<entry>--</entry>
</row>
<row>
<entry>EditMode</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set3</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-staff</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-postfix</entry>
<entry>"Writes the postfix field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleGrace</entry>
<entry>Makes the note at the cursor a grace note, if it is one, makes it normal</entry>
<entry>Grace Note Off/On</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteLilyPondOnNote</entry>
<entry>Deletes the LilyPond attached to the note where the cursor is.</entry>
<entry>Delete LilyPond on Note</entry>
<entry>/ObjectMenu/NotesRests/Directives</entry>
</row>
<row>
<entry>PasteClipboard</entry>
<entry>Paste LilyPond notes from the text clipboard</entry>
<entry>Paste LilyPond notes</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertMode</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetGrace</entry>
<entry>No Tooltip yet</entry>
<entry>Set Grace</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-gy</entry>
<entry>"Gets the value of the gy field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-scoreheader-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the scoreheader directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-height</entry>
<entry>"Gets the value of the height field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Paste</entry>
<entry>Paste the selected music</entry>
<entry>Paste</entry>
<entry>/MainMenu/EditMenu</entry>
</row>
<row>
<entry>ClassicMode</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetImmediatePlayback</entry>
<entry>Turns on the playing back of notes as you enter them.</entry>
<entry>Turn On Immediate Playback</entry>
<entry>/MainMenu/EditMenu</entry>
</row>
<row>
<entry>ToggleArpeggio</entry>
<entry>No Tooltip yet</entry>
<entry>Apreggio (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-header</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a header directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>MidiFilterOff</entry>
<entry>Turn off any MIDI filter script currently active.</entry>
<entry>MIDI Filter Off</entry>
<entry>/MainMenu/InputMenu/MIDI</entry>
</row>
<row>
<entry>Modeless</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Change3</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-prefix</entry>
<entry>"Writes the prefix field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleUpprall</entry>
<entry>No Tooltip yet</entry>
<entry>Up Prall (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>ForceBarline</entry>
<entry>Insert barline at cursor, Denemo's measure count is unaffected.</entry>
<entry>Insert Barline</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>Insert3</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleThumb</entry>
<entry>No Tooltip yet</entry>
<entry>Thumb  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-gy</entry>
<entry>"Writes the gy field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-keysig-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the keysig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-width</entry>
<entry>"Gets the value of the width field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Cut</entry>
<entry>Cut</entry>
<entry>Cut</entry>
<entry>--</entry>
</row>
<row>
<entry>ArbitraryTextAbove</entry>
<entry>Prints the text you give above the chord.</entry>
<entry>Arbitrary Text Above</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks</entry>
</row>
<row>
<entry>3</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;3&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleStopped</entry>
<entry>No Tooltip yet</entry>
<entry>Stopped  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-header</entry>
<entry>"Deletes a header directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Copy</entry>
<entry>Copy</entry>
<entry>Copy</entry>
<entry>--</entry>
</row>
<row>
<entry>GetMeasureNumber</entry>
<entry>"Returns the measure number at cursor position."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EndBeam</entry>
<entry>Instructs LilyPond engraver to stop previously started manual beaming. Print effect only.</entry>
<entry>End Beam</entry>
<entry>/ObjectMenu/NotesRests/Beaming</entry>
</row>
<row>
<entry>Directive-staff?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleSforzato</entry>
<entry>No Tooltip yet</entry>
<entry>Sforzato  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-display</entry>
<entry>"Writes the display field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Redo</entry>
<entry>Redo</entry>
<entry>Redo</entry>
<entry>--</entry>
</row>
<row>
<entry>Forte</entry>
<entry>Attaches Forte to chord and MIDI volume</entry>
<entry>Forte</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Dynamic Markings</entry>
</row>
<row>
<entry>DirectiveGetTag-layout</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleSegno</entry>
<entry>No Tooltip yet</entry>
<entry>Segno  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-gx</entry>
<entry>"Gets the value of the gx field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>CheckPitches</entry>
<entry>Compares note from MIDI with current note, if equal in pitch, advances to next note, else beeps.</entry>
<entry>Check Note Pitches</entry>
<entry>/MainMenu/Educational/MIDI</entry>
</row>
<row>
<entry>DirectiveGet-timesig-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-override</entry>
<entry>"Gets the value of the override field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRest2</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleReverseTurn</entry>
<entry>No Tooltip yet</entry>
<entry>Reverse Turn  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-height</entry>
<entry>"Gets the value of the height field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DeleteBarline</entry>
<entry>Joins two measures together. Always start with cursor on barline to be deleted. Does not work in all cases!</entry>
<entry>Delete Barline</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>InsertRest2</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>TogglePrall</entry>
<entry>No Tooltip yet</entry>
<entry>Prall (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPaste</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-layout-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the layout directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-timesig</entry>
<entry>"Takes a tag. Lets the user edit (by running the editscript named by the tag) a timesig directive of the passed in tag. Returns #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Undo</entry>
<entry>Undo</entry>
<entry>Undo</entry>
<entry>--</entry>
</row>
<row>
<entry>SmallFontEnd</entry>
<entry>Printing resumes normal size music.</entry>
<entry>End Small Size</entry>
<entry>/ObjectMenu/Directives</entry>
</row>
<row>
<entry>Set2</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>TogglePrallPrall</entry>
<entry>No Tooltip yet</entry>
<entry>Prall Prall  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-gx</entry>
<entry>"Writes the gx field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-clef-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the clef directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-gy</entry>
<entry>"Gets the value of the gy field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Quit</entry>
<entry>Quit the Denemo program</entry>
<entry>Quit</entry>
<entry>--</entry>
</row>
<row>
<entry>GetEndTick</entry>
<entry>"Returns the tick count (PPQN) for the end of the object at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>StartBeam</entry>
<entry>Instructs the LilyPond engraver to start a beam here. (Print effect only)</entry>
<entry>Start Beam</entry>
<entry>/ObjectMenu/NotesRests/Beaming</entry>
</row>
<row>
<entry>TogglePrallMordent</entry>
<entry>No Tooltip yet</entry>
<entry>Prall Mordent  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-width</entry>
<entry>"Gets the value of the width field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Close</entry>
<entry>Close the current score. Other windows will stay open</entry>
<entry>Close Score</entry>
<entry>--</entry>
</row>
<row>
<entry>MezzoPiano</entry>
<entry>prints mp and outputs MIDI vol change#</entry>
<entry>Mezzo Piano</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Dynamic Markings</entry>
</row>
<row>
<entry>ToggleOpen</entry>
<entry>No Tooltip yet</entry>
<entry>Open (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveDelete-timesig</entry>
<entry>"Deletes a timesig directive of the passed in tag. Returns #f if not deleted"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Change2</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-layout?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleFlageolet</entry>
<entry>No Tooltip yet</entry>
<entry>Flageolet  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-gx</entry>
<entry>"Gets the value of the gx field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-gx</entry>
<entry>"Gets the value of the gx field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SplitMeasure</entry>
<entry>Insert a barline before cursor. Do not use for inserting empty measure.</entry>
<entry>Split Measure</entry>
<entry>/ObjectMenu/MeasureMenu</entry>
</row>
<row>
<entry>DirectiveGet-score-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the score directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert2</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-paper</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleCoda</entry>
<entry>No Tooltip yet</entry>
<entry>Coda (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-override</entry>
<entry>"Gets the value of the override field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-paper-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the paper directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PrintPart</entry>
<entry>Displays the final finished score for the current part (that is current staff</entry>
<entry>Print Part</entry>
<entry>--</entry>
</row>
<row>
<entry>SmallFontStart</entry>
<entry>Music after this is printed in a small size.</entry>
<entry>Small Size</entry>
<entry>/ObjectMenu/Directives</entry>
</row>
<row>
<entry>2</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;2&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleStaccatissimo</entry>
<entry>No Tooltip yet</entry>
<entry>Staccatissimo  (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-height</entry>
<entry>"Gets the value of the height field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Print</entry>
<entry>Displays the final finished score in a pdf viewer. From this you can print the file using the print command of the viewer</entry>
<entry>Print</entry>
<entry>--</entry>
</row>
<row>
<entry>GetDurationInTicks</entry>
<entry>"Returns the number of ticks (PPQN) for the chord at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Finger5</entry>
<entry>Inserts fingering for finger 5</entry>
<entry>Finger 5</entry>
<entry>/ObjectMenu/NotesRests/Markings/Strings/Fingerings</entry>
</row>
<row>
<entry>ToggleMordent</entry>
<entry>No Tooltip yet</entry>
<entry>Mordent (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-gx</entry>
<entry>"Writes the gx field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-ty</entry>
<entry>"Gets the value of the ty field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PrintExcerptPreview</entry>
<entry>Displays a musical excerpt in your image viewer</entry>
<entry>Print Excerpt</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-voice-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the voice directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>HideLilyPond</entry>
<entry>Comments out the chord in the LilyPond output.</entry>
<entry>Hide on Printing</entry>
<entry>/ObjectMenu/ChordMenu</entry>
</row>
<row>
<entry>ToggleTurn</entry>
<entry>No Tooltip yet</entry>
<entry>Turn (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-gy</entry>
<entry>"Gets the value of the gy field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRest1</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleTrill</entry>
<entry>No Tooltip yet</entry>
<entry>Trill  (Off/On</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPrintAllHeaders</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-width</entry>
<entry>"Gets the value of the width field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>RecreateTimebase</entry>
<entry>Recalculates the timing of each note.</entry>
<entry>Create Timebase</entry>
<entry>/MainMenu/PlaybackMenu</entry>
</row>
<row>
<entry>InsertRest1</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleTenuto</entry>
<entry>No Tooltip yet</entry>
<entry>Tenuto (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-ty</entry>
<entry>"Gets the value of the ty field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-header-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the header directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-tx</entry>
<entry>"Gets the value of the tx field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PrintSelection</entry>
<entry>Displays selected music from score in your pdf viewer</entry>
<entry>Print Selection</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleCursorHighlight</entry>
<entry>Shows up the position of the cursor more clearly (off/on)</entry>
<entry>Cursor Highlighting Off/On</entry>
<entry>/MainMenu/NavigationMenu/Cursor</entry>
</row>
<row>
<entry>DenemoPref_autosave</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-staff-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the staff directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set1</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>Directive-paper?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleStaccato</entry>
<entry>No Tooltip yet</entry>
<entry>Staccato (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-gx</entry>
<entry>"Gets the value of the gx field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>PrintPreview</entry>
<entry>Displays the final finished score in your pdf viewer</entry>
<entry>Print Preview</entry>
<entry>--</entry>
</row>
<row>
<entry>GetNoteDuration</entry>
<entry>"Returns the duration in LilyPond syntax of the note at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Finger4</entry>
<entry>Inserts fingering for finger 4</entry>
<entry>Finger 4</entry>
<entry>/ObjectMenu/NotesRests/Markings/Strings/Fingerings</entry>
</row>
<row>
<entry>DenemoPref_maxhistory</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-movementcontrol</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleFermata</entry>
<entry>No Tooltip yet</entry>
<entry>Fermata (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoSetPlaybackIntervalToSelection</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-override</entry>
<entry>"Gets the value of the override field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ConfigureScore</entry>
<entry>Start up a wizard to create a new score. This allows you to set various properties of the score</entry>
<entry>Score Wizard</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_saveparts</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ClefChooser</entry>
<entry>Choose any sort of clef. If the cursor is at the start change initial clef, else insert chosen clef.</entry>
<entry>Clef Chooser</entry>
<entry>/ObjectMenu/ClefMenu</entry>
</row>
<row>
<entry>ToggleAccent</entry>
<entry>No Tooltip yet</entry>
<entry>Accent (Off/On)</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-chord-ty</entry>
<entry>"Writes the ty field (a string) of the chord directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoSetPlaybackEnd</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-y</entry>
<entry>"Gets the value of the y field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_createclones</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Change1</entry>
<entry>Change the current note to a &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleEndDiminuendo</entry>
<entry>No Tooltip yet</entry>
<entry>End Diminuendo</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoSetPlaybackStart</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-ty</entry>
<entry>"Gets the value of the ty field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Ambitus</entry>
<entry>Prints the ambitus before each staff of the score.</entry>
<entry>Ambitus Off/On</entry>
<entry>/ObjectMenu/Score</entry>
</row>
<row>
<entry>DenemoPref_lilyentrystyle</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Insert1</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleStartDiminuendo</entry>
<entry>No Tooltip yet</entry>
<entry>Start Diminuendo</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoVolume</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-scoreheader-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the scoreheader directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-gy</entry>
<entry>"Gets the value of the gy field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ExportPDF</entry>
<entry>Export the score as a PDF document file</entry>
<entry>Export PDF</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_immediateplayback</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>1</entry>
<entry>In insert mode, changes prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;
In edit mode changes the current note to &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;
 or appends a &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt; if no current note
In classic mode inserts a &lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt; at the cursor</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;1&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleEndCrescendo</entry>
<entry>No Tooltip yet</entry>
<entry>End Crescendo</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-note-ty</entry>
<entry>"Gets the value of the ty field (a string) of the note directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ReduceSlur</entry>
<entry>Shorten a slur that ends at the cursor.</entry>
<entry>Shorten Slur from End</entry>
<entry>/ObjectMenu/NotesRests/Slurs</entry>
</row>
<row>
<entry>DirectiveGet-movementcontrol-x</entry>
<entry>"Gets the value of the x field (a string) of the movementcontrol directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SaveParts</entry>
<entry>Save Parts: each staff becomes a file in lilypond format</entry>
<entry>Save Parts</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoVolume::Value</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Finger3</entry>
<entry>Inserts fingering for finger 3</entry>
<entry>Finger 3</entry>
<entry>/ObjectMenu/NotesRests/Markings/Strings/Fingerings</entry>
</row>
<row>
<entry>DenemoPref_modal</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleStartCrescendo</entry>
<entry>No Tooltip yet</entry>
<entry>Start Crescendo</entry>
<entry>--</entry>
</row>
<row>
<entry>GetNotes</entry>
<entry>"Returns a space separated string of LilyPond notes for the chord at the cursor position or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-tx</entry>
<entry>"Gets the value of the tx field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>NewMovement</entry>
<entry>Create a new movement, usign any default template</entry>
<entry>New Movement</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoTempo</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_cursor_highlight</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>EndSecondTimeBar</entry>
<entry>Closes the second time bar peviously opened (printing)</entry>
<entry>Close Second Time Bar</entry>
<entry>/ObjectMenu/MeasureMenu/Repeats</entry>
</row>
<row>
<entry>Directive-movementcontrol?</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleEndSlur</entry>
<entry>Insert/delete end slur on this note</entry>
<entry>End Slur</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-timesig-gx</entry>
<entry>"Gets the value of the gx field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_applytoselection</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ChangeRest0</entry>
<entry>Changes a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>Change a &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGetTag-scoreheader</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>ToggleBeginSlur</entry>
<entry>Insert/delete begin slur on this note</entry>
<entry>Begin Slur</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-note-ty</entry>
<entry>"Writes the ty field (a string) of the note directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoTempo::Value</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-override</entry>
<entry>"Writes the override field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>AllegroAssai</entry>
<entry>Gives Allegro Assai tempo indication</entry>
<entry>Allegro Assai</entry>
<entry>/ObjectMenu/ChordMenu/Markings/TextMarks/Tempo Indications</entry>
</row>
<row>
<entry>DenemoPref_startmidiin</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-standalone-minpixels</entry>
<entry>"Gets the value of the minpixels field (a string) of the standalone directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>InsertRest0</entry>
<entry>Inserts a rest at cursor position
Sets prevailing rhythm to &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>Insert a &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;rest</entry>
<entry>--</entry>
</row>
<row>
<entry>SetPoint</entry>
<entry>Extends the selection to the current cursor position</entry>
<entry>Set Point</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-header-y</entry>
<entry>"Gets the value of the y field (a string) of the header directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-keysig-minpixels</entry>
<entry>"Writes the minpixels field (a string) of the keysig directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoPref_mode</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveTextEdit-standalone</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Set0</entry>
<entry>Set the prevailing duration to &lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>&lt;span  size="10000" face="Denemo"&gt;0&lt;/span&gt;</entry>
<entry>--</entry>
</row>
<row>
<entry>UnsetMark</entry>
<entry>Gets rid of the selection.</entry>
<entry>Unset Mark</entry>
<entry>--</entry>
</row>
<row>
<entry>ExtendSlur</entry>
<entry>Extends the slur finishing at the cursor.</entry>
<entry>Extend Slur</entry>
<entry>/ObjectMenu/NotesRests/Slurs</entry>
</row>
<row>
<entry>DirectiveGet-timesig-ty</entry>
<entry>"Gets the value of the ty field (a string) of the timesig directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>Finger2</entry>
<entry>Inserts fingering for finger 2</entry>
<entry>Finger 2</entry>
<entry>/ObjectMenu/NotesRests/Markings/Strings/Fingerings</entry>
</row>
<row>
<entry>DenemoPref_strictshortcuts</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>SetMark</entry>
<entry>Sets the start point for a selection,
the end point of the selection is unaltered</entry>
<entry>Set Mark</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectiveGet-chord-tx</entry>
<entry>"Gets the value of the tx field (a string) of the chord directive with the passed tag."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>GetNote</entry>
<entry>"returns LilyPond representation of the (highest) note at the cursor, or #f if none"</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DenemoLoop</entry>
<entry>No help</entry>
<entry>--</entry>
<entry>--</entry>
</row>
<row>
<entry>DirectivePut-movementcontrol-gy</entry>
<entry>"Writes the gy field (a string) of the movementcontrol directive with the passed int tag. Creates the directive of the given type and tag if it does not exist."</entry>
<entry>--</entry>
<entry>--</entry>
</row>
</tbody></tgroup></informaltable>



</sect1>
  <sect1 id="DenemoDirectives">
   <title>Denemo Directives</title>
  <para>
  These give attributes to objects that are not built-in but can be changed by the user.
  </para>
  <para>
 Denemo Directives can be attached at almost every level of a Denemo score and can modify the behavior of the element concerned. They contain fields to describe how the element's properties should be modified, either in the display or in the printing. Elements, such as clefs notes etc have their own built-in display and print properties; Denemo Directives allow you (or scripts you invoke) to modify them for many more purposes than the built-in set allows. This means Denemo can grow - you can add features - without getting a new version.
  </para>
  <para>
For example the drum clef is not built-in to Denemo. Instead a directive attached to the clef has a field (graphic) set to an image of the drum clef, and another field (postfix) set to the LilyPond syntax for a drum clef, while another field (override) is set to indicate that these values should replace the normal ones, rather than adding to them.
  </para>
  <para>
The elements that can be modified in this way are the following:
<itemizedlist>
<listitem>
score: the LilyPond fields (prefix and postfix) are placed at the start of the score and just before each movement. The display field is shown at the top of the display.
</listitem>

<listitem>
scoreheader: Attached to the score. The postfix field is put inside a \header{} block at the start of the score.
</listitem>
<listitem>
movementcontrol: Attached to a movement. The prefix field is placed before the movements \score{} block, the postfix after it.
</listitem>
<listitem>
header: Attached to a movement. As scoreheader but for \header[] blocks inside the movement's score block.
</listitem>
<listitem>
paper: Attached to the score. The postfix is placed inside a \paper{} block.
</listitem>

<listitem>
layout: Attached to a movement. The postfix is placed inside a \layout{} block in the movement's scoreblock.
</listitem>

<listitem>
clef: Attached to a clef or clef change. The graphic holds the displayed icon, gx,gy its position. The postfix field is put into the music at the point where the clef is found, replacing the normal text if the override is set.
</listitem>


<listitem>
timesig: Attached to a time signature or time signature change. The graphic holds the displayed icon, gx,gy its position. The postfix field is put into the music at the point where the time signature is found, replacing the normal text if the override is set.
</listitem>

<listitem>
keysig: as timesig but for key signatures. (e.g. used to supress keysignatures in drum clef).
</listitem>
<listitem>
staff: The postfix field modifies the whole staff context, with the display field printed at the start of the staff
</listitem>
<listitem>
voice: The postfix field modifies the voice context, with the display field printed at the start of the staff containing the voice
</listitem>
<listitem>
standalone: A directive not attached to an music element - it comes with the music and is used for things like repeat bars etc.
</listitem>
<listitem>
chord: The prefix field is emitted before the LilyPond for the chord and the postfix after it.
</listitem>
<listitem>
note: The prefix field is emitted before the LilyPond for the note and the postfix after it. Examples are fingerings attached to notes etc. Again the display and graphic fields a placed in the display positioned relative to the note via the coordinate fields gx, gy (for the graphic) and tx, ty for the display text.
</listitem>

</itemizedlist>

  </para>
  <para>
The Directives are sufficiently important to have their own commands.
  </para>
  <para>
<itemizedlist>

<listitem>
d-DirectivePut-type-field where type is one of score, scoreheader, movementcontrol, header, paper, layout, clef, timesig, keysig, staff, voice, standalone, chord or note  and field  is one of display, tx, ty, gx, gy, graphic, prefix, postfix, override, midibytes. These commands take two arguments, a tag (string) and a value to set. For example
<example id="schemecalls">
 (d-DirectivePut-note-postfix "LHFinger" "3")
</example>
will put the fingering 3 on (after) the note at the cursor.
</listitem>
<listitem>
d-DirectiveGet-type-field type is one of score, scoreheader, movementcontrol, header, paper, layout, clef, timesig, keysig, staff, voice, standalone, chord or note  and field  is one of display, tx, ty, gx, gy, graphic, prefix, postfix, override, midibytes. This function returns the value in the field or #f if there is no directive with the given tag at the cursor.
</listitem>

<listitem>
d-DirectiveDelete-type type is one of score, scoreheader, movementcontrol, header, paper, layout, clef, timesig, keysig, staff, voice, standalone, chord or note. This function returns #t or #f if a directive with the given tag was deleted.
</listitem>


</itemizedlist> 
  </para>

<sect2>
   <title>The Directive Fields</title>

 The fields of the Denemo Directive can control the Denemo Display and the LilyPond output.
  <para>
The fields in d-DirectiveGet/Put have the following meanings
<itemizedlist>
<listitem>
postfix - A fragment of LilyPond to be output (after the LilyPond for any object the directive is attached to). 
</listitem>
<listitem>
prefix - A fragment of LilyPond to be output (before  the LilyPond for any object the directive is attached to). 
</listitem>
<listitem>
display - text to be shown in the Denemo Display
</listitem>
<listitem>
tx, ty - where to show the text in the Denemo Display
</listitem>
<listitem>
graphic - For directives that are in the music this is a .png image to be shown in the Denemo Display (the directory bitmaps holds these). The graphic can be saved for a command using the right-click -> Save Graphic command, after selecting a portion of the print preview as the image required. For directives attached to the score, movement etc the string set here will be displayed on the button in the button box for that sort of directive (see Show Score Titles etc in view menu for showing this button box).
</listitem>
<listitem>
gx, gy - where to show thegraphic in the Denemo Display
</listitem>
<listitem>
minpixels - how much space to leave for this item in the Denemo Display
</listitem>
<listitem>
override - Contains bits to determine whether the LilyPond contained in the Directive (postfix and/or prefix fields) should override the normal LilyPond output, and whether the Graphic should replace the normal Denemo display for the item. A further tranche of bits controls MIDI output for the directive, which can override the normal MIDI interpretation of the music and provide additional information not explicit in the music notation (e.g. the tempo of an Adagio marking).
</listitem>
<listitem>
midibytes - a string of numbers (in hexadecimal format) whose interpretation is given by the MIDI bits in the override field
</listitem>


</itemizedlist>
  </para>


  <para>
The override field contains the following bits:
<itemizedlist>
<listitem>
DENEMO_OVERRIDE_LILYPOND : override the LilyPond output normally used at this point, rather than adding to the normal output. The text used is in the prefix and postfix fields.
</listitem>


<listitem>
DENEMO_OVERRIDE_GRAPHIC : overrides what Denemo would normally show in the display with the image named in the graphic field of the directive
</listitem>
</itemizedlist>
The MIDI bits in the override field are as follows
<itemizedlist>
<listitem>
DENEMO_OVERRIDE_VOLUME : the MIDI velocity to use
</listitem>

<listitem>
DENEMO_OVERRIDE_DURATION : affects the duration of a note. not yet implemented
</listitem>
<listitem>
DENEMO_OVERRIDE_REPEAT : indicates that an earlier passage should be repeated (from a directive of the same tag). not yet implemented
</listitem>

<listitem>
DENEMO_OVERRIDE_CHANNEL : midibytes field gives the MIDI channel to use (? implemented?)
</listitem>

<listitem>
DENEMO_OVERRIDE_TEMPO : midibytes field gives the tempo to use.
</listitem>
</itemizedlist>
The interpretation of these flags is modified by the following flags:
<itemizedlist>

<listitem>
DENEMO_OVERRIDE_ONCE : the value in midibytes is to be used just for the item the directive is attached to. not yet implemented
</listitem>
<listitem>
DENEMO_OVERRIDE_STEP : the value in midibytes is to be used from this point on
</listitem>
<listitem>
DENEMO_OVERRIDE_RAMP : the value in midibytes is to be used as a starting value, a corresponding directive (i.e. with the same tag) gives the findal value, values are then interpolated between these.  not yet implemented
</listitem>

<listitem>
DENEMO_OVERRIDE_RELATIVE : value in midibytes  is used relative to the current value (otherwise it is an absolute value; e.g. an absolute velocity etc)
</listitem>
<listitem>
DENEMO_OVERRIDE_PERCENT : value in midibytes is interpreted as percentage value. not yet implemented
</listitem>
</itemizedlist>
  </para>
  <para>
These flags are combined together to get the combination required for the directive using the scheme procedure called logior.</para>
<para>Here is an example, making a step-change in volume of 0x40 in the MIDI output, and printing "più mosso" in the output score </para>
<para></para>
<para>;;;;;;;;;; piu mosso</para>
<para>(d-DirectivePut-standalone-minpixels "StepTempo" 20)</para>
<para>(d-CursorLeft)</para>
<para>(d-DirectivePut-standalone-override "StepTempo" (logior DENEMO_OVERRIDE_TEMPO DENEMO_OVERRIDE_STEP DENEMO_OVERRIDE_RELATIVE))</para>
<para>(d-DirectivePut-standalone-midibytes "StepTempo" "40")</para>
<para>(d-DirectivePut-standalone-display "StepTempo" "piu mosso")</para>
<para>(d-DirectivePut-standalone-postfix "StepTempo" "^\\markup {\\bold \\italic \"più mosso\"}")</para>
<para>(d-RefreshDisplay)</para>

<para>In this example the directive is a standalone directive. MIDI commands are being extended to apply to chords and notes. Implementation of the commands for Voices, Movements, Score etc are not yet done.</para>
</sect2>

  </sect1>

 <sect1>
    <title>Directive Edit Scripts</title>
<sect2>
     <title>Introduction</title>
    <para>
    Score and movement directives can define a value for their graphic - a button then appears at the top of the score which can be used to edit the directive. Likewise Staff and Voice directives show as a properties icon before the staff to which they apply (staff directives above, voice directives below). Clicking on these lets you edit the directive.
  </para>
   <para>
   The command EditDirective can be used when the cursor is on a Denemo Directive object, or an object with a Denemo Directive attached to it. What happens then is determined by a script named after the "tag", or name of the directive. For example the command RehearsalMark creates a Directive with tag "RehearsalMark" and EditDirective runs a script called RehearsalMark.scm.
  </para>
   <para>
   There is also a low-level editing dialog which is invoked if no editing script exists or directly from scheme using (d-DirectiveTextEdit-* tagname). This allows you to edit and delete a directive directly. The other directive editing commands are EditScoreDirective EditMovementDirective EditStaffDirective EditVoiceDirective EditClefDirective EditKeysigDirective EditTimesigDirective for directives attached to the relevant objects.
  </para>

   <para>
   The low level edit of directives from scheme uses the following command:
<itemizedlist>
<listitem>
 (d-DirectiveTextEdit-&lt;field&gt; &lt;tagname&gt;). Where &lt;tagname&gt; specifies the directive to be edited and &lt;field&gt; is one of score, scoreheader, movementcontrol, header, paper, layout, clef, timesig, keysig, staff, voice, standalone, chord or note.
</listitem>
</itemizedlist>
  </para>
 <para>
   For example     (d-DirectiveTextEdit-paper "PrintAllHeaders") gives low-level access to the directive setting the print all headers command in the paper block of the LilyPond output.
 </para>
</sect2>

<sect2>
     <title>Initialization Scripts</title>
<para>
Each menu can have an initialization script, which can contain procedures that would be too time consuming to define every time they are needed. These scripts are guaranteed to be run before any menu item is activated within the menu. They can be read/written using the right click menu on any scripted menu item.
</para>
</sect2>


<sect2>
     <title>Edit Scripts</title>
 
   <para>
   Each directive has a tag field, so that it can be recognized by the scripts that manipulate it. In particular for each tag there can be an edit script, for editing a directive of that tag. 
   Edit scripts are kept in a directory actions/editscripts parallel with the directory actions/menus where the commands themselves are kept. </para>   
<para> 
You can read and write edit scripts by using the low level editing dialog on a directive with the tag you are writing for. 
<note>The low level editing dialog is the one that is presented if there is no edit script. Edit scripts can themselves give access to this dialog by including an option cue-Advanced which calls (d-DirectiveTextEdit-field tag) for the appropriate field and tag. For an example see the edit script for Instruments -&gt; Orchestra -&gt; RehearsalMark.
</note>
</para> 
<para >
 They have available functions to enable editing of directives which are defined in actions//denemo.scm executed at startup. The functions and variables for script editing are
 </para>

<itemizedlist>
<listitem>
d-GetOption followed by a nul separated list of options, offers the options to the user and returns one, or #f if the user cancels.
</listitem>
<listitem>
Extra-Offset tag type context. Takes three string options: tag is the name of the directive to be edited, which must be the name of a LilyPond object, type is the type of directive (note, chord, standalone, staff, voice or score), context is the LilyPond context of the object. Only tag is required. Shifts the object in the LilyPond output.
</listitem>
<listitem>
SetPadding tag type context. As Extra-Offset, it sets the space left around the item in the LilyPond engraving process.
</listitem>
<listitem>
SetRelativeFontSize tag type context. As Extra-Offset, it shifts the font size of the following text in the LilyPond engraving process.
</listitem>
<listitem>
CreateButton tag label this is just a convenience function to put a button with the passed in label onto a button box at the top of the screen. Scripts can attach actions to such tagged buttons.
</listitem>
d-SetDirectiveTagActionScript tag scheme-actions. This command sets scheme-actions as the actions to be performed when the button of the given tag is clicked. The default action is to run any editscript associated with tag, and if none to run the d-DirectiveTextEdit-score on the directive that displays the button.
<listitem>
</listitem>
d-DirectiveGetForTag-field tag 
<listitem>
Useful variables defined:
(define stop "\0")
(define cue-Advanced "Advanced")
(define cue-PlaceAbove "Place above staff")
(define cue-PlaceBelow "Place below staff")
(define cue-SetRelativeFontSize "Set Relative Font Size")
(define cue-OffsetPositionAll "Offset Position (All)")
(define cue-OffsetPositionOne "Offset Position (One)")
(define cue-EditText "Edit Text")
(define cue-SetPadding "Set Padding")
(define cue-Delete "Delete")

</listitem>
</itemizedlist>

</sect2>



  </sect1>


 <sect1>
    <title>LilyPond Editing</title>
<sect2>
     <title>Introduction</title>
 
   <para>
From version 0.7.8 we have the ability to edit the LilyPond output within Denemo. This approach immediately makes Denemo able to do many more things (e.g. multiple verses for songs) with the music still editable from within Denemo. The gallery of examples and the standard templates contain examples which you can use.
  </para>
   <para>
These can be used without knowing the LilyPond language (provided a suitable template or example file exists). Alternatively, with a general idea of how a LilyPond file works tweaks from the LilyPond documentation can be inserted into the LilyPond output and stored with the Denemo, leaving open the possibility of further editing of the notes within Denemo without the need to re-apply tweaks or keep separate LilyPond files.
  </para>
</sect2>
<sect2>
     <title>Using the LilyPond Window</title>
    <para>
Under the View menu is a Show LilyPond item which pops up a window with the LilyPond output in it. The text is interspersed with buttons which enable you to hide or show the various sections or to create custom versions. The text in bold can be altered and the alterations are kept in the Denemo file.
 </para>

    <para>
The two windows are kept in sync, so you can move back and forth between editing textually and editing in Denemo.
   </para>
   <para>
Right clicking on the text gives a menu for actions on the LilyPond text. There is one for moving the cursor to the LilyPond text for the current Denemo object. Moving the cursor in the text window with the arrow keys causes the Denemo window cursor to move in synchronism.
  </para>
   <para>
This menu also includes a Print command that operates on the visible LilyPond text in the window.  This means you can open specific custom score blocks and print from them, or even make a temporary edit for just one print. If you save the program while a choice of custom scoreblocks is open then these are remembered. So when you reload and hit Print those score blocks will be printed.</para>

</sect2>
<sect2>
     <title>Detail</title>
   <para>
Several custom scoreblocks can be kept, and by making the one(s) desired visible, the same Denemo file can be used to print a variety of things from the same music input. For example, a full score or a set of parts, or several voices on group of staffs or even a piano reduction. The custom scoreblocks can be are named using the comment on the first line (see the template Piano.denemo for an example).
  </para>

   <para>
The various Voices/Staffs for the different Movements are separated by buttons. These are labelled by enumerating the movements and staffs in order, so the first voice in the first movement has the music defined as
"MvmntIVoiceIMusic" and so on. Within these music blocks you can insert arbitrary LilyPond text between notes, (the insertion points are marked by grey blocks)
and the text inserted will appear as a LilyPond directives in the main Denemo window. 
 </para>

   <para>The main Denemo window also moves its cursor to correspond with where you are editing. (It should of course move the cursor immediately you click on a point in the music, but, as yet, it only moves the cursor when you press a key just before the note name - one of the arrow keys will do).
  </para>


 
   <para>
Custom score blocks are created by right-clicking on the Standard score block and selecting create custom score block. You can cut and paste another score block, or start from the text of the standard one. If you print a single part from all movements, you get the standard scoreblock for this and can add it to your custom score block so that a single print command prints, e.g. both a full score and parts. Using the \book {} block you can put these into separate files (stored in the folder .denemo in your home folder).
</para>
  <para>
The music defined by MvmntIVoiceIMusic is then used in the score blocks at the end of the LilyPond window, by the expression \MvmntIVoiceIMusic. This means that the same music can be output in several different ways, so that the same Denemo file can contain custom score blocks to output the music as a Piano Score with several voices or separate parts, for example.
  </para>
  <para>
The definitions for MvmntIVoiceIMusic actually look like this
<itemizedlist>
<listitem>
MvmntIVoiceIProlog = {\MvmntIVoiceITimeSig \MvmntIVoiceIKeySig \MvmntIVoiceIClef}
</listitem>
<listitem>
MvmntIVoiceIMusic = {\MvmntIVoiceIProlog \MvmntIVoiceI}
</listitem>
</itemizedlist>
Where \MvmntIVoiceI is the actual block of notes you have written, while the other definitions hold the time signature, clef etc. By using these, you can print the same music with different clefs, still maintaining the ability to edit the notes in Denemo.
  </para>

   <para>Note that the normal Denemo Print commands are still operate as they do if you never look at the LilyPond window. What happens is that if you select the Print Current Part menu item then this creates a tailored standard scoreblock for that part. However, if you use the File->Print command then it prints the first custom scoreblock that is open (visible) (or the standard scoreblock if you do not have any custom scoreblocks).
  </para>
   <note>
Bugs:
Clicking (as opposed to using the arrow keys) in the LilyPond text does not move the cursor in the Denemo window.
Moving the text cursor in a lyric (etc.) does not move the Denemo cursor, so you cannot easily see where in the music it comes.
Inserting LilyPond text after last note of a movement has to be done in Denemo.
When you delete a LilyPond directive textually you have to move the cursor to start re-inserting it.
LilyPond notes cannot be parsed back in (would be useful for importing music from arbitrary LilyPond files).
LilyPond inserts at notes can only be completely deleted in the Denemo window - inserts are not merged.
   </note>
</sect2>
  </sect1>

 


 <sect1>
<title>Using the Denemo From the PC keyboard</title>

    <sect2>
      <title>Note Entry</title>
      
      <para>Basic Note entry is to type a number key 0-8 for the duration of the note followed by a letter key a-g for the note name. If the duration is the same as the last entered note then just the note name is needed. The duration can be dotted with the period key, and the octave adjusted with comma (for down) or apostrophe (for up).
      </para>
      <para>When you append music by pressing a duration key you get a pale yellow note, indicating a duration which has not been given a pitch. Once you have pressed a note-name it becomes that note. Prior to that it is a pure rhythm and will play back as a drum beat.
      </para>
      <para>
	When not appending music, you need to use the shift key to insert a new note, or set the caps lock. So Shift-a inserts the note A etc. Plain "a" edits the note at the cursor to be an A.  Likewise with the numeric keypad the Shift key can be used to insert a note duration, while the plain number keys edit the duration of the note at the cursor. (If you do not have a numeric keypad, you have to use Shift-0,1, etc to do insertion of a duration).
</para>
    </sect2>
    <sect2>
      <title>Chord Entry</title>

      <para>The standard keybinding for entering a note in a chord is the Insert key. This enters the note at the cursor position. There are also commands to enter a named note Alt-a, Alt-b... are the standard shortcuts for this.</para>
    </sect2>

    <sect2>
      <title></title>

      <para></para>
    </sect2>

    <sect2>
      <title>Inserting LilyPond Directives</title>

      <para><productname>Denemo</productname> allow you to insert LilyPond directives between notes, prefixing and postfixing the individual notes of a chord or the whole chord itself and at the start of each staff in a score and at the start of each score. This means that the score can be tailored to a great extent without ever resorting to editing LilyPond files themselves. (Re-loading from an edited LilyPond file is generally unsuccessful). These LilyPond directives are now just a special case of DenemoDirectives - see discussion elsewhere.
</para> 
<para>
To put a LilyPond directive on an individual note of a chord, put the cursor on that note and invoke 
</para> 
<step>
Other-&gt;AttachLilyToNote
</step> 
<para> 
To put a LilyPond directive between chords, place the cursor at the insertion point, and invoke 
<step>
Other-&gt;InsertLilyPond
</step> 
 Such a LilyPond insert can be locked, which means you will be warned if you try to delete it while you are deleting notes.
</para>
<para>
When you have inserted a LilyPond directive a green bar is printed at that point below the staff. In addition if you specify some display text it will be shown. If the LilyPond inserted is text to be printed above staff the notation ^text can be used. Denemo will show this text above the staff. Likewise, _text will cause text to be printed under the staff. If you wish to annotate your music use %text, which Denemo will print, but LilyPond will not (a newline character is automatically inserted for you to ensure this happens). LilyPond attached to chords or notes shows the display text only. The status bar also shows some of the information.
</para>
    </sect2>
  </sect1>

    <sect2 revision="0.76">
      <title>Note and Rest Entry Toolbar</title>

      <para>This toolbar can be used to enter notes using the mouse. It also shows what the prevailing duration is, that is what duration of note will be inserted when you press a note name key.</para>
    </sect2>


  <sect1 revision="0.75">
    <title>Publishing</title>

    <para>Creating paper scores with <productname>Denemo</productname> is done via an intermediate PDF file. <productname>Denemo</productname> takes care of this for you, provided you have set the name of a PDF view in the Preferences. Once this is done click on Print Preview, or Print Part, wait for LilyPond to typeset your score the PDF viewer will pop-up, and you can print using the facilities of that program.
<note>
            <para>LilyPond is quite slow - be patient!</para>
          </note>
    </para>

 
  </sect1>

  <sect1>
    <title>Advanced Features</title>


   <sect2 revision="0.70">
      <title>Musical Score that Do Things!</title>
<para>
By saving a Denemo score with a script defined (in the script window) you can create music lessons, automatic midi player ... the possibilities are (literally) endless. When you open such a score, the script is run - it can take user input and manipulate the score, or do other actions as your fancy takes you.
</para>
<para id="initDotDenemo">
There is a special score init.denemo that is run on startup. By editing this you can startup with whatever template and whatever actions you wish to be performed. If you set it to do something that quits Denemo, you may need to delete the file before using Denemo normally again. Your local init.denemo is stored in the directory .denemo/actions in your home directory.To create it put the script you want in the script window and use SaveAs selecting ~/.denemo/actions/init.denemo as your file to save to.</para>
</sect2>
   <sect2 revision="0.70">
      <title>Piano Staffs, Orchestral Scores etc</title>

      <para>
Piano staffs, and staff groups can be created using the context field of the score->properties dialog. You can set a piano staff within a staff group by setting successively the StartPiano and StartGroup contexts on a single staff, or more generally setting StartPiano, EndPiano on adjacent staffs within a staff group.
<note>
It is possible to set silly combinations – some will not print anything. Check that you have a Start and End staff for each type and that they are not miss-matched.
</note>

</para>
</sect2>
    <sect2 revision="0.70">
      <title>Single Staff Polyphony</title>

      <para></para>

      <para>Denemo permits the use of mutiple staves for part work, as well as
      enabling multiple voices on a single staff. To add voices to the current
      staff do the following:<orderedlist>
          <listitem>
            <para>Go to the measure(s) where you want to add the second
            voice</para>
          </listitem>

          <listitem>
            <para>Use <guimenuitem>Add Voice to Current Staff item</guimenuitem>.Then open the staff properties. This 
            dialog box will appear. <inlinemediaobject>
                <imageobject>
                  <imagedata fileref="images/addvc2currentstaff.png" />
                </imageobject>
              </inlinemediaobject></para>
          </listitem>

          <listitem>
            <para>If this is a different instrument than the other voice, open
            the instrument drop down list and choose the appropriate
            instrument. The default name for this voice should be ok.</para>
          </listitem>

          <listitem>
            <para>Click Ok to close the dialog box.</para>
          </listitem>

          <listitem>
            <para> To switch voices use VoiceDown, VoiceUp under staff menu.
            or using the keyboard shortcuts <note>
                <para>The stem positioning positioning may not look correct in
                the Denemo window, but it will look correct in the printed
                output.</para>
              </note></para>
          </listitem>

          <listitem>
            <para>For every beat your voice is silent you need to add a null
            note, which is achieved with the following sequence of key
            strokes: 1. n puts you in null mode, 2. r toggles a rest 3. then
            type the rest value you need to add, with the appropriate key
            binding.</para>
          </listitem>

          <listitem>
            <para>For the beats that contain notes just enter them as you
            would normally see section x.<note>
                <para>If you choose not to enter rests in null mode the visual
                output will be the same but these notes will be heard during
                midi playback of your score.</para>
              </note></para>
          </listitem>

          <listitem>
            <para>To leave the new voice and return to the previous one
            type</para>
          </listitem>
        </orderedlist>.</para>
    </sect2>


    <sect2>
      <title>Entering Vocal Music</title>

      <para>Choose Lyrics->Add Verse. You need to have the Lyrics View visible (see View menu). Each verse has a separate tab, with the current verse for the current staff being visible at any one time. Use -- to extend syllables over more notes (see LilyPond documentation).</para>
    </sect2>

    <sect2>
      <title>Entering Figured Bass</title>

      <para>To enter figures choose Other->Insert/Enter figured bass. There are some shortcuts that enable all the work to be done with the numeric keypad. A brief summary is given by right clicking the option. The conventions are described in the LilyPond docs.</para>
    </sect2>
    
    <sect2>
      <title>Entering Chord Symbols</title>

      <para>To enter chord symbols choose Other->Insert/Enter chord symbols. A brief summary is given by right clicking the option. The conventions are described in the LilyPond docs.</para>
    </sect2>


  </sect1>

  <sect1>
    <title><productname>Denemo</productname> Command Line Options</title>

    <para><productname>Denemo</productname> --help shows the options for opening particular files at startup.</para>
  </sect1>

</article>
